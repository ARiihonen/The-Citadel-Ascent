demo1_part1 = addContext("demo1_part1", 1000)
demo1_part2 = addContext("demo1_part2", 1000)
demo1_part3 = addContext("demo1_part3", 1000)

--{Animation: s_demo1_part1
s_demo1_part1 = addState(demo1_part1, "s_demo1_part1"); 
s_demo1_part1:blendTime(0);
s_demo1_part1:loop(false);
s_demo1_part1:add("macbeth/demo1_part1.fbxanim"); 
--}
--{Animation: s_demo1_part2
s_demo1_part2 = addState(demo1_part2, "s_demo1_part2"); 
s_demo1_part2:blendTime(0);
s_demo1_part2:loop(false);
s_demo1_part2:add("macbeth/demo1_part2.fbxanim"); 
--}
--{Animation: s_demo1_part3
s_demo1_part3 = addState(demo1_part3, "s_demo1_part3"); 
s_demo1_part3:blendTime(0);
s_demo1_part3:loop(false);
s_demo1_part3:add("macbeth/demo1_part3.fbxanim"); 
--}


--{ Contexts
ol_front = addContext("ol_front", 1)
ol_right = addContext("ol_right", 1)
ol_back = addContext("ol_back", 1)
ol_left = addContext("ol_left", 1)


test = addContext("test", 100000);
test2 = addContext("test2", 1);
jump = addContext("jump", 3)
wall_jump = addContext("wall_jump", 3)
walljump = addContext("walljump", 3)
fall = addContext("fall", 5)
stand = addContext("stand", 14)
run = addContext("run", 15)
push = addContext("push", 5) 
turn_left = addContext("turn_left", 30) 
turn_right = addContext("turn_right", 30)
wall = addContext("wall", 8) 
wall_up = addContext("wall_up", 9)
stick = addContext("stick", 4)
roll = addContext("roll", 5)
fall_stab_ready = addContext("fall_stab_ready", -11)
fall_stab_possible = addContext("fall_stab_possible", -10)
fall_crush = addContext("fall_crush", 4)
fall_crush_ready = addContext("fall_crush_ready", -11)
heavy = addContext("heavy", -10)

throw_start = addContext("throw_start", 1)
throw_hold = addContext("throw_hold", 1)
throw_end = addContext("throw_end", 1)

stab_interrupted = addContext("stab_interrupted", -1000)


--die = addContext("die", -10) 

respawn = addContext("respawn",1) 
respawn_progress = addContext("respawn_progress",1)

ledge = addContext("ledge", 4)
l_look_back = addContext("l_look_back", 18)
l_look_up = addContext("l_look_up", 18) 
l_look_right = addContext("l_look_right", 18)
l_look_left = addContext("l_look_left", 18)

move_right = addContext("move_right", 10)
move_left = addContext("move_left", 10)
corner_out = addContext("corner_out", 11)
corner_in = addContext("corner_in", 11)
hang = addContext("hang", 15)
losing_grip = addContext("losing_grip", 5)
climb = addContext("climb", 6)
prepare_to_climb = addContext("prepare_to_climb", 16)
drop_down = addContext("drop_down", 6)
load = addContext("load", 16)
combat = addContext("combat", 20)
rope_throw = addContext("rope_throw", 11)
pull_lever = addContext("pull_lever", 12)
crouch = addContext("crouch", 6)
over_ledge = addContext("over_ledge", 100)
 
water = addContext("water", 1)
surface = addContext("surface", 3)
swim = addContext("swim", 2) 

rope = addContext("rope", -15)
rope_rising = addContext("rope_rising", 34)
rope_backward = addContext("rope_backward", 35) 
rope_slow = addContext("rope_slow", 36)
rope_long = addContext("rope_long", 40)

rope_attached = addContext("rope_attached", -5)

swing_forward = addContext("swing_forward", 13)
swing_backward = addContext("swing_backward", 14)
swing_slow = addContext("swing_slow", 15)

lethal_attack_1 = addContext("lethal_attack_1", 1)
lethal_attack_2 = addContext("lethal_attack_2", 1)
slash_attack_1 = addContext("slash_attack_1", -100)
additive_slash_attack = addContext("additive_slash_attack", -10000)

near_enemy = addContext("near_enemy", 50)
 
stab_far = addContext("stab_far", 1)
stab_near = addContext("stab_near", 1)
stab_fail = addContext("stab_fail", 1)

-- respawn = addContext("respawn", 0)

lift_corpse = addContext("lift_corpse", 0) 
drop_corpse = addContext("drop_corpse", 0)
drag_corpse = addContext("drag_corpse", 1)
feet_drag = addContext("feet_drag",1)

additive = addContext("additive", 25)
default = addContext("default", 127)
cutscene_tutorial_intro = addContext("cutscene_tutorial_intro", 0)
cutscene_tutorial_intro_wait = addContext("cutscene_tutorial_intro_wait", 0)
cutscene_get_gem = addContext("cutscene_get_gem", 1)
cutscene_get_gem_wait = addContext("cutscene_get_gem_wait", 1) 
cutscene_abducted = addContext("cutscene_abducted", 1)
cutscene_boss_die = addContext("cutscene_boss_die", 1)
cutscene_boss_die_wait = addContext("cutscene_boss_die_wait", 1)
cutscene_meet = addContext("cutscene_meet", 1)
cutscene_meet_wait = addContext("cutscene_meet_wait", 1)
cutscene_book_sucks_wait = addContext("cutscene_book_sucks_wait", 1)
cutscene_book_sucks = addContext("cutscene_book_sucks", 1)
cutscene_second_shard_wait = addContext("cutscene_second_shard_wait", 1)
cutscene_second_shard = addContext("cutscene_second_shard", 1)
 

readying_stab = addContext("readying_stab", 5);
--}

--{ Parameters
push_speed = addParam("push_speed")
slope = addParam("slope")
aim = addParam("aim")
aim_horizontal = addParam("aim_horizontal")
run_direction = addParam("run_direction")
run_lean = addParam("run_lean")

swim_curvature_horizontal = addParam("swim_curvature_horizontal")
swim_curvature_vertical = addParam("swim_curvature_vertical")
swim_direction_vertical = addParam("swim_direction_vertical")

turn_angle = addParam("turn_angle")
wall_angle = addParam("wall_angle")
rope_force = addParam("rope_force")
ledge_angle = addParam("ledge_angle")

respawn_height = addParam("respawn_height")
respawn_depth = addParam("respawn_depth")

enemy_dir = addParam("enemy_dir")

neck_angle_up = addParam("neck_angle_up")
neck_angle_axis = addParam("neck_angle_axis")

sneaking_distance = addParam("sneaking_distance")
--}

--{ Tables
running = {};
standing = {};
loading = {};
in_combat = {};
jumping = {};
falling = {};
on_wall = {};
on_ledge = {};
hanging = {};
on_rope = {};
crouching = {};
turn_crouching = {};
in_water = {};
swimming = {};
rope_is_attached = {};
pushing = {};
slashing = {}; 
attacking = {};
dragging_corpse = {};
landing = {};
fall_stab_unstab_table = {};
combo_unstab_table = {};
combo_end_table = {};
transtitions = {};
fall_attacking = {};
throwing = {};
comboing = {};

--}

--{ Constants
force_minimum_standing = 0.0 -- Minimum force required to affect character's animation when standing still
force_still_standing = 5.0 -- Maximum force player can hold in place when standing still
force_pull_standing = 10.0 -- Force that pulls still player towards itself at speed of about 4m/s

force_minimum_running = 0.0 -- Minimum force required to affect character's animation when running (player's speed = 4.5m/s^2)
force_moderate_running = 2.0 -- Force that affects player a bit when running (speed = 2.0)
force_still_running = 5.0 -- Maximum force player can hold in place when running (speed = 0.0)
force_pull_running = 6.5 -- Force that pulls running player towards itself (speed = -1.5)

--}

--{ IK chains
l1 = VC3(0, 0, -1) -- rotate limb vertical
l2 = VC3(0, 1, 0) -- rotate limb horizontal
l3 = VC3(1, 0, 0) -- towards parent joint
r1 = VC3(0, 0, -1)
r2 = VC3(0, -1, 0)
r3 = VC3(-1, 0, 0)
left_arm_ik = addIKChain("left_arm_ik", "arm_L0_0_shd", "arm_L0_2_shd", "arm_L0_end_shd", l1, l2, l3)
right_arm_ik = addIKChain("right_arm_ik", "arm_R0_0_shd", "arm_R0_2_shd", "arm_R0_end_shd", r1, r2, r3)
left_leg_ik = addIKChain("left_leg_ik", "leg_L0_0_shd", "leg_L0_2_shd", "leg_L0_end_shd", l1, l2, l3)
right_leg_ik = addIKChain("right_leg_ik", "leg_R0_0_shd", "leg_R0_2_shd", "leg_R0_end_shd", r1, r2, r3)
--}


defaultTransitionFilterTime(0)

--{TESTS

	-- --{ Animation: s_test
	-- s_test = addState(test, "s_test");
	-- s_test:blendTime(400);
	-- s_test:loopBlendTime(100);
	-- s_test:loop(true);
	-- s_test:add("macbeth/combo_3_cloth_test.fbxanim");
	-- --}
	
	-- --{ Animation: s_test
	-- s_test = addState(test, "s_test");
	-- -- s_test:randomizedStartTime();
	-- s_test:blendTime(1000);
	-- s_test:loop(true);
	-- s_test:add("macbeth/tpose.fbxanim");
	-- table.insert(in_water, s_test);
	-- --}
	
	-- --{ Animation: s_test_2
	-- s_test_2 = addState(test, "s_test_2");
	-- -- s_test_2:randomizedStartTime();
	-- s_test_2:blendTime(1000);
	-- s_test_2:loop(true);
	-- s_test_2:add("macbeth/tpose2.fbxanim");
	-- table.insert(in_water, s_test_2);
	-- --}
--}





--{ Melee attacks


--{ STAB COMBOS
	
	--{ Handy dandy helper function
		start="start"; hold="hold"; unstab="unstab"; restab="restab"; stop="end" -- stop is not named end because it's a keyword in Lua.
		combo_phases={start,hold,unstab,restab,stop}
		
		function addComboState(contexts, phase, combo_number, repeat_number)
			assert_string(phase)
			assert_number(combo_number)
			assert_table(attacking)
			if repeat_number == nil then repeat_number = 1 end
			
			do -- phase validity check
				local combo_phase_is_valid = false
				for _,p in pairs(combo_phases) do
					if p==phase then
						combo_phase_is_valid = true
					end
				end
				assert(combo_phase_is_valid)
			end
			
			do -- Make sure necessary contexts exist
				if not combo_contexts then combo_contexts={} end
				if not combo_contexts[combo_number] then
					combo_contexts[combo_number] = addContext("stab_combo_"..combo_number, -4)
				end
				if not phase_contexts then phase_contexts = {} end
				if not phase_contexts[phase] then
					phase_contexts[phase] = addContext("stab_phase_"..phase, -3)
				end
				
				if not repeat_contexts then repeat_contexts = {} end 
				if not repeat_contexts[repeat_number] then
					repeat_contexts[repeat_number] = addContext("stab_repeat_"..repeat_number, -2)
				end
			end
			
			if not contexts then
				contexts = combo_contexts[combo_number]+phase_contexts[phase]+repeat_contexts[repeat_number]
			else
				contexts = contexts+combo_contexts[combo_number]+phase_contexts[phase]+repeat_contexts[repeat_number]
			end
			
			local s_combo = addState(contexts, "s_stab_combo_"..combo_number.."_"..phase.."_r"..repeat_number.."_".. #attacking)
			s_combo:blendTime(0);
			s_combo:loop(false);
			s_combo:restart(false);
			s_combo:addFinishedEvent("EventAnimStab".. (phase:gsub("^%l", string.upper)) .."Finished")
			table.insert(attacking, s_combo)
			return s_combo
		end
	--}
		
	--{ START 
		--<NEAR>
		-- --{ near start combo 1
		-- temp = addComboState(stab_near, start, 1)
		-- temp:addEnterEvent("EventAnimAttackStarted")
		-- temp:add(enemy_dir(90), 		"macbeth/stab_combo_start_1_side_r90.fbxanim");
		-- temp:add(enemy_dir(45.1), 	"macbeth/stab_combo_start_1_side_r45.fbxanim");
		-- temp:add(enemy_dir(44.9), 	"macbeth/stab_combo_start_1_r45.fbxanim");
		-- temp:add(enemy_dir(0), 		"macbeth/stab_combo_start_1_c.fbxanim");
		-- temp:add(enemy_dir(-44.9), 	"macbeth/stab_combo_start_1_l45.fbxanim");
		-- temp:add(enemy_dir(-45.1), 	"macbeth/stab_combo_start_1_side_l45.fbxanim");
		-- temp:add(enemy_dir(-90), 	"macbeth/stab_combo_start_1_side_l90.fbxanim");
		-- --}
		
		-- --{ near start combo 1 if crouching
		-- temp = addComboState(stab_near, start, 1)
		-- temp:addEnterEvent("EventAnimAttackStarted")
		-- temp:from(crouching);
		-- temp:setContextOnEnter("crouch", true);
		-- temp:add(enemy_dir(90), 		"macbeth/stab_combo_start_1_side_r90.fbxanim");
		-- temp:add(enemy_dir(45.1), 	"macbeth/stab_combo_start_1_side_r45.fbxanim");
		-- temp:add(enemy_dir(44.9), 	"macbeth/stab_combo_start_1_r45.fbxanim");
		-- temp:add(enemy_dir(0), 		"macbeth/stab_combo_start_1_c.fbxanim");
		-- temp:add(enemy_dir(-44.9), 	"macbeth/stab_combo_start_1_l45.fbxanim");
		-- temp:add(enemy_dir(-45.1), 	"macbeth/stab_combo_start_1_side_l45.fbxanim");
		-- temp:add(enemy_dir(-90), 	"macbeth/stab_combo_start_1_side_l90.fbxanim");
		-- --}
		
		--{ near start combo 1
		temp = addComboState(stab_near, start, 1)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:add(enemy_dir(90), 		"macbeth/stab_combo_6_start_right_90.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_6_start.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_6_start_left_90.fbxanim");
		--}
		
		--{ near start combo 1 if crouching
		temp = addComboState(stab_near, start, 1)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:from(crouching);
		temp:setContextOnEnter("crouch", true);
		temp:add(enemy_dir(90), 		"macbeth/stab_combo_6_start_right_90.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_6_start.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_6_start_left_90.fbxanim");
		--}
		
		--{ near start combo 2
		temp = addComboState(stab_near, start, 2)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:add(enemy_dir(90), 		"macbeth/stab_combo_2_start_side_r90.fbxanim");
		temp:add(enemy_dir(45.1), 	"macbeth/stab_combo_2_start_side_r45.fbxanim");
		temp:add(enemy_dir(44.9), 	"macbeth/stab_combo_2_start_r45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_2_start_back.fbxanim");
		temp:add(enemy_dir(-44.9), 	"macbeth/stab_combo_2_start_l45.fbxanim");
		temp:add(enemy_dir(-45.1), 	"macbeth/stab_combo_2_start_side_l45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90.fbxanim");
		--}
		
		--{ near start combo 2 if crouching
		temp = addComboState(stab_near, start, 2)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:from(crouching);
		temp:setContextOnEnter("crouch", true);
		temp:add(enemy_dir(90), 		"macbeth/stab_combo_2_start_side_r90.fbxanim");
		temp:add(enemy_dir(45.1), 	"macbeth/stab_combo_2_start_side_r45.fbxanim");
		temp:add(enemy_dir(44.9), 	"macbeth/stab_combo_2_start_r45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_2_start_back.fbxanim");
		temp:add(enemy_dir(-44.9), 	"macbeth/stab_combo_2_start_l45.fbxanim");
		temp:add(enemy_dir(-45.1), 	"macbeth/stab_combo_2_start_side_l45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90.fbxanim");
		--}
		
		--{ start combo 3
		s_fall_stab_start = addComboState(nil, start, 3)
		s_fall_stab_start:blendTime(100)
		s_fall_stab_start:addEnterEvent("EventAnimAttackStarted")
		s_fall_stab_start:add(enemy_dir(0), "macbeth/fall_stab_start_1.fbxanim");
		--}
		
		
		--{ near start combo 4
		temp = addComboState(stab_near, start, 4)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:add(enemy_dir(90), 		"macbeth/stab_combo_2_start_side_r90.fbxanim");
		temp:add(enemy_dir(45.1), 	"macbeth/stab_combo_2_start_side_r45.fbxanim");
		temp:add(enemy_dir(44.9), 	"macbeth/stab_combo_2_start_r45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_2_start_back.fbxanim");
		temp:add(enemy_dir(-44.9), 	"macbeth/stab_combo_2_start_l45.fbxanim");
		temp:add(enemy_dir(-45.1), 	"macbeth/stab_combo_2_start_side_l45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90.fbxanim");
		   
		--{ near start combo 4 if crouching
		temp = addComboState(stab_near, start, 4)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:from(crouching);
		temp:setContextOnEnter("crouch", true);
		temp:add(enemy_dir(90), 		"macbeth/stab_combo_2_start_side_r90.fbxanim");
		temp:add(enemy_dir(45.1), 	"macbeth/stab_combo_2_start_side_r45.fbxanim");
		temp:add(enemy_dir(44.9), 	"macbeth/stab_combo_2_start_r45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_2_start_back.fbxanim");
		temp:add(enemy_dir(-44.9), 	"macbeth/stab_combo_2_start_l45.fbxanim");
		temp:add(enemy_dir(-45.1), 	"macbeth/stab_combo_2_start_side_l45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90.fbxanim");
		--}
		
		--{ near start combo 5 
		temp = addComboState(stab_near, start, 5)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:add(enemy_dir(90), 		"macbeth/stab_combo_2_start_side_r90.fbxanim");
		temp:add(enemy_dir(45.1), 	"macbeth/stab_combo_2_start_side_r45.fbxanim");
		temp:add(enemy_dir(44.9), 	"macbeth/stab_combo_2_start_r45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_2_start_back.fbxanim");
		temp:add(enemy_dir(-44.9), 	"macbeth/stab_combo_2_start_l45.fbxanim");
		temp:add(enemy_dir(-45.1), 	"macbeth/stab_combo_2_start_side_l45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90.fbxanim");
		  
		--{ near start combo 5 if crouching
		temp = addComboState(stab_near, start, 5)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:from(crouching);
		temp:setContextOnEnter("crouch", true);
		temp:add(enemy_dir(90), 		"macbeth/stab_combo_2_start_side_r90.fbxanim");
		temp:add(enemy_dir(45.1), 	"macbeth/stab_combo_2_start_side_r45.fbxanim");
		temp:add(enemy_dir(44.9), 	"macbeth/stab_combo_2_start_r45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_2_start_back.fbxanim");
		temp:add(enemy_dir(-44.9), 	"macbeth/stab_combo_2_start_l45.fbxanim");
		temp:add(enemy_dir(-45.1), 	"macbeth/stab_combo_2_start_side_l45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90.fbxanim");
		--}
		
		--{ near start combo 6
		temp = addComboState(stab_near, start, 6)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:add(enemy_dir(90),		"macbeth/stab_combo_5_start_right_90.fbxanim");
		temp:add(enemy_dir(45), 		"macbeth/stab_combo_5_start_right_45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_5_start.fbxanim");
		temp:add(enemy_dir(-45),	"macbeth/stab_combo_5_start_left_45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_5_start_left_90.fbxanim");
		--}
		
		--{ near start combo 6 if crouching
		temp = addComboState(stab_near, start, 6)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:from(crouching);
		temp:setContextOnEnter("crouch", true);
		temp:add(enemy_dir(90),		"macbeth/stab_combo_5_start_right_90.fbxanim");
		temp:add(enemy_dir(45), 		"macbeth/stab_combo_5_start_right_45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_5_start.fbxanim");
		temp:add(enemy_dir(-45),	"macbeth/stab_combo_5_start_left_45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_5_start_left_90.fbxanim");
		--}
		
		--{ near start combo 7
		temp = addComboState(stab_near, start, 7)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:add(enemy_dir(90),		"macbeth/stab_combo_5_start_right_90.fbxanim");
		temp:add(enemy_dir(45), 		"macbeth/stab_combo_5_start_right_45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_5_start.fbxanim");
		temp:add(enemy_dir(-45),	"macbeth/stab_combo_5_start_left_45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_5_start_left_90.fbxanim");
		--}
		
		--{ near start combo 7 if crouching
		temp = addComboState(stab_near, start, 7)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:from(crouching);
		temp:setContextOnEnter("crouch", true); 
		temp:add(enemy_dir(90),		"macbeth/stab_combo_5_start_right_90.fbxanim");
		temp:add(enemy_dir(45), 		"macbeth/stab_combo_5_start_right_45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_5_start.fbxanim");
		temp:add(enemy_dir(-45),	"macbeth/stab_combo_5_start_left_45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_5_start_left_90.fbxanim");
		--}
		
		--{ near start combo 8 
		temp = addComboState(stab_near, start, 8)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:add(enemy_dir(90), 		"macbeth/stab_combo_2_start_side_r90.fbxanim");
		temp:add(enemy_dir(45.1), 	"macbeth/stab_combo_2_start_side_r45.fbxanim");
		temp:add(enemy_dir(44.9), 	"macbeth/stab_combo_2_start_r45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_2_start_back.fbxanim");
		temp:add(enemy_dir(-44.9), 	"macbeth/stab_combo_2_start_l45.fbxanim");
		temp:add(enemy_dir(-45.1), 	"macbeth/stab_combo_2_start_side_l45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90.fbxanim");
		  
		--{ near start combo 8 if crouching
		temp = addComboState(stab_near, start, 8)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:from(crouching);
		temp:setContextOnEnter("crouch", true);
		temp:add(enemy_dir(90), 		"macbeth/stab_combo_2_start_side_r90.fbxanim");
		temp:add(enemy_dir(45.1), 	"macbeth/stab_combo_2_start_side_r45.fbxanim");
		temp:add(enemy_dir(44.9), 	"macbeth/stab_combo_2_start_r45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_2_start_back.fbxanim");
		temp:add(enemy_dir(-44.9), 	"macbeth/stab_combo_2_start_l45.fbxanim");
		temp:add(enemy_dir(-45.1), 	"macbeth/stab_combo_2_start_side_l45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90.fbxanim");
		--}

		--<FAR>
		-- --{ far start combo 1
		-- temp = addComboState(stab_far, start, 1)
		-- temp:addEnterEvent("EventAnimAttackStarted")
		-- temp:add(enemy_dir(90), 		"macbeth/stab_combo_start_1_side_r90_far.fbxanim");
		-- temp:add(enemy_dir(45.1), 	"macbeth/stab_combo_start_1_side_r45_far.fbxanim");
		-- temp:add(enemy_dir(44.9), 	"macbeth/stab_combo_start_1_far_r45.fbxanim");
		-- temp:add(enemy_dir(0), 		"macbeth/stab_combo_start_1_far_c.fbxanim");
		-- temp:add(enemy_dir(-44.9),	"macbeth/stab_combo_start_1_far_l45.fbxanim");
		-- temp:add(enemy_dir(-45.1),	"macbeth/stab_combo_start_1_side_l45_far.fbxanim");
		-- temp:add(enemy_dir(-90), 	"macbeth/stab_combo_start_1_side_l90_far.fbxanim");
		-- --}
		
		-- --{ far start combo 1 if crouching
		-- temp = addComboState(stab_far, start, 1)
		-- temp:addEnterEvent("EventAnimAttackStarted")
		-- temp:from(crouching);
		-- temp:setContextOnEnter("crouch", true);
		-- temp:add(enemy_dir(90), 		"macbeth/stab_combo_start_1_side_r90_far.fbxanim");
		-- temp:add(enemy_dir(45.1), 	"macbeth/stab_combo_start_1_side_r45_far.fbxanim");
		-- temp:add(enemy_dir(44.9), 	"macbeth/stab_combo_start_1_far_r45.fbxanim");
		-- temp:add(enemy_dir(0), 		"macbeth/stab_combo_start_1_far_c.fbxanim");
		-- temp:add(enemy_dir(-44.9),	"macbeth/stab_combo_start_1_far_l45.fbxanim");
		-- temp:add(enemy_dir(-45.1),	"macbeth/stab_combo_start_1_side_l45_far.fbxanim");
		-- temp:add(enemy_dir(-90), 	"macbeth/stab_combo_start_1_side_l90_far.fbxanim");
		-- --}
		
		--{ far start combo 1
		temp = addComboState(stab_far, start, 1)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:add(enemy_dir(90), 		"macbeth/stab_combo_6_start_right_90.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_6_start.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_6_start_left_90.fbxanim");
		--}
		
		--{ far start combo 1 if crouching
		temp = addComboState(stab_far, start, 1)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:from(crouching);
		temp:setContextOnEnter("crouch", true);
		temp:add(enemy_dir(90), 		"macbeth/stab_combo_6_start_right_90.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_6_start.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_6_start_left_90.fbxanim");
		--}
		
		--{ far start combo 2 
		temp = addComboState(stab_far, start, 2)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:add(enemy_dir(90),	"macbeth/stab_combo_2_start_side_r90_far.fbxanim");
		temp:add(enemy_dir(45.1), "macbeth/stab_combo_2_start_side_r45_far.fbxanim");
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_start_far_r45.fbxanim");
		temp:add(enemy_dir(0), 	"macbeth/stab_combo_2_start_far_back.fbxanim");
		temp:add(enemy_dir(-44.9),"macbeth/stab_combo_2_start_far_l45.fbxanim");
		temp:add(enemy_dir(-45.1),"macbeth/stab_combo_2_start_side_l45_far.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90_far.fbxanim");
		--}
		
		--{ far start combo 2 if crouching
		temp = addComboState(stab_far, start, 2)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:from(crouching);
		temp:setContextOnEnter("crouch", true);
		temp:add(enemy_dir(90),	"macbeth/stab_combo_2_start_side_r90_far.fbxanim");
		temp:add(enemy_dir(45.1), "macbeth/stab_combo_2_start_side_r45_far.fbxanim");
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_start_far_r45.fbxanim");
		temp:add(enemy_dir(0), 	"macbeth/stab_combo_2_start_far_back.fbxanim");
		temp:add(enemy_dir(-44.9),"macbeth/stab_combo_2_start_far_l45.fbxanim");
		temp:add(enemy_dir(-45.1),"macbeth/stab_combo_2_start_side_l45_far.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90_far.fbxanim");
		--}
		
		
		--{ far start combo 4 
		temp = addComboState(stab_far, start, 4)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:add(enemy_dir(90),	"macbeth/stab_combo_2_start_side_r90_far.fbxanim");
		temp:add(enemy_dir(45.1), "macbeth/stab_combo_2_start_side_r45_far.fbxanim");
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_start_far_r45.fbxanim");
		temp:add(enemy_dir(0), 	"macbeth/stab_combo_2_start_far_back.fbxanim");
		temp:add(enemy_dir(-44.9),"macbeth/stab_combo_2_start_far_l45.fbxanim");
		temp:add(enemy_dir(-45.1),"macbeth/stab_combo_2_start_side_l45_far.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90_far.fbxanim");
		--}
		
		--{ far start combo 4 if crouching
		temp = addComboState(stab_far, start, 4)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:from(crouching);
		temp:setContextOnEnter("crouch", true);
		temp:add(enemy_dir(90), 		"macbeth/stab_combo_2_start_side_r90_far.fbxanim");
		temp:add(enemy_dir(45.1), 	"macbeth/stab_combo_2_start_side_r45_far.fbxanim");
		temp:add(enemy_dir(44.9), 	"macbeth/stab_combo_2_start_far_r45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_2_start_far_back.fbxanim");
		temp:add(enemy_dir(-44.9), 	"macbeth/stab_combo_2_start_far_l45.fbxanim");
		temp:add(enemy_dir(-45.1), 	"macbeth/stab_combo_2_start_side_l45_far.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90_far.fbxanim");
		--}
		
		--{ far start combo 5
		temp = addComboState(stab_far, start, 5)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:add(enemy_dir(90),	"macbeth/stab_combo_2_start_side_r90_far.fbxanim");
		temp:add(enemy_dir(45.1), "macbeth/stab_combo_2_start_side_r45_far.fbxanim");
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_start_far_r45.fbxanim");
		temp:add(enemy_dir(0), 	"macbeth/stab_combo_2_start_far_back.fbxanim");
		temp:add(enemy_dir(-44.9),"macbeth/stab_combo_2_start_far_l45.fbxanim");
		temp:add(enemy_dir(-45.1),"macbeth/stab_combo_2_start_side_l45_far.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90_far.fbxanim");
		--}
		
		--{ far start combo 5 if crouching
		temp = addComboState(stab_far, start, 5)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:from(crouching);
		temp:setContextOnEnter("crouch", true);
		temp:add(enemy_dir(90), 		"macbeth/stab_combo_2_start_side_r90_far.fbxanim");
		temp:add(enemy_dir(45.1), 	"macbeth/stab_combo_2_start_side_r45_far.fbxanim");
		temp:add(enemy_dir(44.9), 	"macbeth/stab_combo_2_start_far_r45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_2_start_far_back.fbxanim");
		temp:add(enemy_dir(-44.9), 	"macbeth/stab_combo_2_start_far_l45.fbxanim");
		temp:add(enemy_dir(-45.1), 	"macbeth/stab_combo_2_start_side_l45_far.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90_far.fbxanim");
		--}
		
		--{ far start combo 6
		temp = addComboState(stab_far, start, 6)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:add(enemy_dir(90),		"macbeth/stab_combo_5_start_right_90.fbxanim");
		temp:add(enemy_dir(45), 		"macbeth/stab_combo_5_start_right_45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_5_start.fbxanim");
		temp:add(enemy_dir(-45),	"macbeth/stab_combo_5_start_left_45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_5_start_left_90.fbxanim");
		--}
		
		--{ far start combo 6 if crouching
		temp = addComboState(stab_far, start, 6)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:from(crouching);
		temp:setContextOnEnter("crouch", true);
		temp:add(enemy_dir(90),		"macbeth/stab_combo_5_start_right_90.fbxanim");
		temp:add(enemy_dir(45), 		"macbeth/stab_combo_5_start_right_45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_5_start.fbxanim");
		temp:add(enemy_dir(-45),	"macbeth/stab_combo_5_start_left_45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_5_start_left_90.fbxanim");
		--}
		
		--{ far start combo 7
		temp = addComboState(stab_far, start, 7)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:add(enemy_dir(90),		"macbeth/stab_combo_5_start_right_90.fbxanim");
		temp:add(enemy_dir(45), 		"macbeth/stab_combo_5_start_right_45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_5_start.fbxanim");
		temp:add(enemy_dir(-45),	"macbeth/stab_combo_5_start_left_45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_5_start_left_90.fbxanim");
		--}
		
		--{ far start combo 7 if crouching
		temp = addComboState(stab_far, start, 7)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:from(crouching);
		temp:setContextOnEnter("crouch", true);
		temp:add(enemy_dir(90),		"macbeth/stab_combo_5_start_right_90.fbxanim");
		temp:add(enemy_dir(45), 		"macbeth/stab_combo_5_start_right_45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_5_start.fbxanim");
		temp:add(enemy_dir(-45),	"macbeth/stab_combo_5_start_left_45.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_5_start_left_90.fbxanim");
		--}
		
		--{ far start combo 8
		temp = addComboState(stab_far, start, 8)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:add(enemy_dir(90),	"macbeth/stab_combo_2_start_side_r90_far.fbxanim");
		temp:add(enemy_dir(45.1), "macbeth/stab_combo_2_start_side_r45_far.fbxanim");
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_start_far_r45.fbxanim");
		temp:add(enemy_dir(0), 	"macbeth/stab_combo_2_start_far_back.fbxanim");
		temp:add(enemy_dir(-44.9),"macbeth/stab_combo_2_start_far_l45.fbxanim");
		temp:add(enemy_dir(-45.1),"macbeth/stab_combo_2_start_side_l45_far.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90_far.fbxanim");
		--}
		
		--{ far start combo 8 if crouching
		temp = addComboState(stab_far, start, 8)
		temp:addEnterEvent("EventAnimAttackStarted")
		temp:from(crouching);
		temp:setContextOnEnter("crouch", true);
		temp:add(enemy_dir(90), 		"macbeth/stab_combo_2_start_side_r90_far.fbxanim");
		temp:add(enemy_dir(45.1), 	"macbeth/stab_combo_2_start_side_r45_far.fbxanim");
		temp:add(enemy_dir(44.9), 	"macbeth/stab_combo_2_start_far_r45.fbxanim");
		temp:add(enemy_dir(0), 		"macbeth/stab_combo_2_start_far_back.fbxanim");
		temp:add(enemy_dir(-44.9), 	"macbeth/stab_combo_2_start_far_l45.fbxanim");
		temp:add(enemy_dir(-45.1), 	"macbeth/stab_combo_2_start_side_l45_far.fbxanim");
		temp:add(enemy_dir(-90), 	"macbeth/stab_combo_2_start_side_l90_far.fbxanim");
		--}
		
	--}
	
	--{ HOLD
		-- --{ hold combo 1 repeat 1,2,3
		-- temp = addComboState(nil, hold, 1, 1)
		-- --temp:blendTime(0)
		-- temp:add(enemy_dir(110), "macbeth/stab_combo_1_right.fbxanim");
		-- temp:add(enemy_dir(45.1), "macbeth/stab_combo_1_right.fbxanim");
		-- temp:add(enemy_dir(44.9), "macbeth/stab_combo_1.fbxanim");
		-- temp:add(enemy_dir(-44.9), "macbeth/stab_combo_1.fbxanim");
		-- temp:add(enemy_dir(-45.1), "macbeth/stab_combo_1_left.fbxanim");
		-- temp:add(enemy_dir(-110), "macbeth/stab_combo_1_left.fbxanim");
		
		-- temp = addComboState(nil, hold, 1, 2)
		-- temp:blendTime(400)
		-- temp:add(enemy_dir(110), "macbeth/stab_combo_2_right.fbxanim");
		-- temp:add(enemy_dir(45.1), "macbeth/stab_combo_2_right.fbxanim");
		-- temp:add(enemy_dir(44.9), "macbeth/stab_combo_2.fbxanim");
		-- temp:add(enemy_dir(-44.9), "macbeth/stab_combo_2.fbxanim");
		-- temp:add(enemy_dir(-45.1), "macbeth/stab_combo_2_left.fbxanim");
		-- temp:add(enemy_dir(-110), "macbeth/stab_combo_2_left.fbxanim");
		
		-- temp = addComboState(nil, hold, 1, 3)
		-- temp:blendTime(400)
		-- temp:add(enemy_dir(110), "macbeth/stab_combo_3_right.fbxanim");
		-- temp:add(enemy_dir(45.1), "macbeth/stab_combo_3_right.fbxanim");
		-- temp:add(enemy_dir(44.9), "macbeth/stab_combo_3.fbxanim");
		-- temp:add(enemy_dir(-44.9), "macbeth/stab_combo_3.fbxanim");
		-- temp:add(enemy_dir(-45.1), "macbeth/stab_combo_3_left.fbxanim");
		-- temp:add(enemy_dir(-110), "macbeth/stab_combo_3_left.fbxanim");	
		-- --}
		
		--{ hold combo 1 repeat 1,2,3
		temp = addComboState(nil, hold, 1, 1)
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_6_hold_1.fbxanim");
	
		temp = addComboState(nil, hold, 1, 2)
		temp:blendTime(400)
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_6_hold_2.fbxanim");
		
		temp = addComboState(nil, hold, 1, 3)
		temp:blendTime(400)
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_6_hold_3.fbxanim");
	
		--}
		
		--{ hold combo 2 repeat 1,2,3
		temp = addComboState(nil, hold, 2, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(90), "macbeth/stab_combo_2_hold_1_right.fbxanim");
		temp:add(enemy_dir(45.1), "macbeth/stab_combo_2_hold_1_right.fbxanim");
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_hold_1.fbxanim"); 
		temp:add(enemy_dir(-44.9), "macbeth/stab_combo_2_hold_1.fbxanim");
		temp:add(enemy_dir(-45.1), "macbeth/stab_combo_2_hold_1_left.fbxanim");
		temp:add(enemy_dir(-90), "macbeth/stab_combo_2_hold_1_left.fbxanim");
		
		temp = addComboState(nil, hold, 2, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_hold_2.fbxanim");
		
		temp = addComboState(nil, hold, 2, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_hold_3.fbxanim");
		--}
		
		--{ hold combo 4 
		temp = addComboState(nil, hold, 4, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(90), "macbeth/stab_combo_2_hold_1_right.fbxanim");
		temp:add(enemy_dir(45.1), "macbeth/stab_combo_2_hold_1_right.fbxanim");
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_hold_1.fbxanim"); 
		temp:add(enemy_dir(-44.9), "macbeth/stab_combo_2_hold_1.fbxanim");
		temp:add(enemy_dir(-45.1), "macbeth/stab_combo_2_hold_1_left.fbxanim");
		temp:add(enemy_dir(-90), "macbeth/stab_combo_2_hold_1_left.fbxanim");
		
		temp = addComboState(nil, hold, 4, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_hold_2.fbxanim");
		
		temp = addComboState(nil, hold, 4, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_hold_2.fbxanim");
		
		temp = addComboState(nil, hold, 4, 4)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_hold_2.fbxanim");
		--}
		
		--{ hold combo 3
		s_fall_stab_hold = addComboState(nil, hold, 3, 1)
		s_fall_stab_hold:add(enemy_dir(0), "macbeth/fall_stab_1.fbxanim");
		--}
		
		--{hold combo 5
		temp = addComboState(nil, hold, 5, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(90), "macbeth/stab_combo_2_hold_1_right.fbxanim");
		temp:add(enemy_dir(45.1), "macbeth/stab_combo_2_hold_1_right.fbxanim");
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_hold_1.fbxanim"); 
		temp:add(enemy_dir(-44.9), "macbeth/stab_combo_2_hold_1.fbxanim");
		temp:add(enemy_dir(-45.1), "macbeth/stab_combo_2_hold_1_left.fbxanim");
		temp:add(enemy_dir(-90), "macbeth/stab_combo_2_hold_1_left.fbxanim");
		
		temp = addComboState(nil, hold, 5, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_1.fbxanim");
		
		temp = addComboState(nil, hold, 5, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2.fbxanim");
		
		temp = addComboState(nil, hold, 5, 4)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_3.fbxanim");
		
		
		--hold combo 6
		temp = addComboState(nil, hold, 6, 1)
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_hold.fbxanim");
		
		temp = addComboState(nil, hold, 6, 2)
		temp:blendTime(600);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_hold_2.fbxanim");
		
		temp = addComboState(nil, hold, 6, 3)
		temp:blendTime(600);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_hold_2.fbxanim");
		
		temp = addComboState(nil, hold, 6, 4)
		temp:blendTime(600);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_hold_2.fbxanim");
		
		
		--hold combo 7
		temp = addComboState(nil, hold, 7, 1)
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_hold.fbxanim");
		
		temp = addComboState(nil, hold, 7, 2)
		temp:blendTime(600);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_hold_2.fbxanim");
		
		temp = addComboState(nil, hold, 7, 3)
		temp:blendTime(600);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_hold_2.fbxanim");
		
		temp = addComboState(nil, hold, 7, 4)
		temp:blendTime(600);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_hold_3.fbxanim");
		
		--}
		
		--hold combo 8
		temp = addComboState(nil, hold, 8, 1)
		temp:add(enemy_dir(90), "macbeth/stab_combo_2_hold_1_right.fbxanim");
		temp:add(enemy_dir(45.1), "macbeth/stab_combo_2_hold_1_right.fbxanim");
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_hold_1.fbxanim"); 
		temp:add(enemy_dir(-44.9), "macbeth/stab_combo_2_hold_1.fbxanim");
		temp:add(enemy_dir(-45.1), "macbeth/stab_combo_2_hold_1_left.fbxanim");
		temp:add(enemy_dir(-90), "macbeth/stab_combo_2_hold_1_left.fbxanim");
		
		temp = addComboState(nil, hold, 8, 2)
		temp:blendTime(600);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_hold_2.fbxanim");
		
		temp = addComboState(nil, hold, 8, 3)
		temp:blendTime(600);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_hold_2.fbxanim");
		
		temp = addComboState(nil, hold, 8, 4)
		temp:blendTime(600);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_hold_2.fbxanim");
		
		--}
		
	--}
	
	
	--{ UNSTAB
		-- --{ unstab combo 1 repeat 1,2
		-- temp = addComboState(nil, unstab, 1, 1) 
		-- temp:blendTime(200);
		-- temp:add(enemy_dir(110), "macbeth/stab_combo_unstab_1_right.fbxanim");
		-- temp:add(enemy_dir(45.1),  "macbeth/stab_combo_unstab_1_right.fbxanim");
		-- temp:add(enemy_dir(44.9), "macbeth/stab_combo_unstab_1.fbxanim");
		-- temp:add(enemy_dir(-44.9), "macbeth/stab_combo_unstab_1.fbxanim");
		-- temp:add(enemy_dir(-45.1), "macbeth/stab_combo_unstab_1_left.fbxanim");
		-- temp:add(enemy_dir(-110), "macbeth/stab_combo_unstab_1_left.fbxanim");
		-- table.insert(combo_unstab_table, temp); 
		
		-- temp = addComboState(nil, unstab, 1, 2)
		-- temp:blendTime(200);
		-- temp:add(enemy_dir(110), "macbeth/stab_combo_unstab_2_right.fbxanim");
		-- temp:add(enemy_dir(45.1),  "macbeth/stab_combo_unstab_2_right.fbxanim");
		-- temp:add(enemy_dir(44.9),  "macbeth/stab_combo_unstab_2.fbxanim");
		-- temp:add(enemy_dir(-44.9),  "macbeth/stab_combo_unstab_2.fbxanim");
		-- temp:add(enemy_dir(-45.1), "macbeth/stab_combo_unstab_2_left.fbxanim");
		-- temp:add(enemy_dir(-110), "macbeth/stab_combo_unstab_2_left.fbxanim");
		-- table.insert(combo_unstab_table, temp);
		-- --}
		
		--{ unstab combo 1 repeat 1,2
		temp = addComboState(nil, unstab, 1, 1) 
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_6_unstab_1.fbxanim");
		table.insert(combo_unstab_table, temp); 
		
		temp = addComboState(nil, unstab, 1, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0),  "macbeth/stab_combo_6_unstab_2.fbxanim");
		table.insert(combo_unstab_table, temp);
		--}
		
		--{ unstab combo 2 repeat 1,2
		temp = addComboState(nil, unstab, 2, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(90), "macbeth/stab_combo_2_unstab_1_right.fbxanim");
		temp:add(enemy_dir(45.1),  "macbeth/stab_combo_2_unstab_1_right.fbxanim");
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_unstab_1.fbxanim");
		temp:add(enemy_dir(-44.9), "macbeth/stab_combo_2_unstab_1.fbxanim");
		temp:add(enemy_dir(-45.1), "macbeth/stab_combo_2_unstab_1_left.fbxanim");
		temp:add(enemy_dir(-90), "macbeth/stab_combo_2_unstab_1_left.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 2, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0),  "macbeth/stab_combo_2_unstab_2.fbxanim");
		table.insert(combo_unstab_table, temp);
		--}
		
		--{ unstab combo 3
		temp = addComboState(stab_interrupted, unstab, 3, 1) 
		temp:blendTime(200);
		temp:add(enemy_dir(0),  "macbeth/fall_stab_end_2.fbxanim");
		table.insert(fall_stab_unstab_table, temp);
		
		--{ unstab combo 4 repeat 1,2
		temp = addComboState(nil, unstab, 4, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(90), "macbeth/stab_combo_2_unstab_1_right.fbxanim");
		temp:add(enemy_dir(45.1),  "macbeth/stab_combo_2_unstab_1_right.fbxanim");
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_unstab_1.fbxanim");
		temp:add(enemy_dir(-44.9), "macbeth/stab_combo_2_unstab_1.fbxanim");
		temp:add(enemy_dir(-45.1), "macbeth/stab_combo_2_unstab_1_left.fbxanim");
		temp:add(enemy_dir(-90), "macbeth/stab_combo_2_unstab_1_left.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 4, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_unstab_1.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 4, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_unstab_1.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 4, 4)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_unstab_1.fbxanim");
		table.insert(combo_unstab_table, temp);
		--}
		
		--{ unstab combo 5 repeat 1,2
		temp = addComboState(nil, unstab, 5, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(90), "macbeth/stab_combo_2_unstab_1_right.fbxanim");
		temp:add(enemy_dir(45.1),  "macbeth/stab_combo_2_unstab_1_right.fbxanim");
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_unstab_1.fbxanim");
		temp:add(enemy_dir(-44.9), "macbeth/stab_combo_2_unstab_1.fbxanim");
		temp:add(enemy_dir(-45.1), "macbeth/stab_combo_2_unstab_1_left.fbxanim");
		temp:add(enemy_dir(-90), "macbeth/stab_combo_2_unstab_1_left.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 5, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0),  "macbeth/stab_combo_unstab_1.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 5, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_unstab_2.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 5, 4)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_unstab_2.fbxanim");
		table.insert(combo_unstab_table, temp);
		--}
		
		
		--{unstab combo 6
		temp = addComboState(nil, unstab, 6, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_unstab.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 6, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_unstab.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 6, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_unstab.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 6, 4)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_unstab.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		
		--{unstab combo 7
		temp = addComboState(nil, unstab, 7, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_unstab.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 7, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_unstab.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 7, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_unstab_1.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 7, 4)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_unstab_2.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		
		--{unstab combo 8
		temp = addComboState(nil, unstab, 8, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(90), "macbeth/stab_combo_2_unstab_1_right.fbxanim");
		temp:add(enemy_dir(45.1),  "macbeth/stab_combo_2_unstab_1_right.fbxanim");
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_unstab_1.fbxanim");
		temp:add(enemy_dir(-44.9), "macbeth/stab_combo_2_unstab_1.fbxanim");
		temp:add(enemy_dir(-45.1), "macbeth/stab_combo_2_unstab_1_left.fbxanim");
		temp:add(enemy_dir(-90), "macbeth/stab_combo_2_unstab_1_left.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 8, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_unstab_1.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 8, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_unstab.fbxanim");
		table.insert(combo_unstab_table, temp);
		
		temp = addComboState(nil, unstab, 8, 4)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_unstab.fbxanim");
		table.insert(combo_unstab_table, temp);
	
	
	--{ RESTAB
		-- --{ restab combo 1 repeat 1,2
		-- temp = addComboState(nil, restab, 1, 1)
		-- temp:blendTime(100);
		-- temp:add(enemy_dir(110), "macbeth/stab_combo_restab_1_right.fbxanim");
		-- temp:add(enemy_dir(45.1), "macbeth/stab_combo_restab_1_right.fbxanim");
		-- temp:add(enemy_dir(44.9), "macbeth/stab_combo_restab_1.fbxanim");
		-- temp:add(enemy_dir(-44.9), "macbeth/stab_combo_restab_1.fbxanim");
		-- temp:add(enemy_dir(-45.1), "macbeth/stab_combo_restab_1_left.fbxanim");
		-- temp:add(enemy_dir(-110), "macbeth/stab_combo_restab_1_left.fbxanim");
		
		-- temp = addComboState(nil, restab, 1, 2) 
		-- temp:blendTime(100); 
		-- temp:add(enemy_dir(110), "macbeth/stab_combo_restab_2_right.fbxanim");
		-- temp:add(enemy_dir(45.1), "macbeth/stab_combo_restab_2_right.fbxanim");
		-- temp:add(enemy_dir(44.9), "macbeth/stab_combo_restab_2.fbxanim");
		-- temp:add(enemy_dir(-44.9), "macbeth/stab_combo_restab_2.fbxanim");
		-- temp:add(enemy_dir(-45.1), "macbeth/stab_combo_restab_2_left.fbxanim");
		-- temp:add(enemy_dir(-110), "macbeth/stab_combo_restab_2_left.fbxanim");
		-- --}
		
		--{ restab combo 1 repeat 1,2
		temp = addComboState(nil, restab, 1, 1)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_6_restab_1.fbxanim");

		temp = addComboState(nil, restab, 1, 2) 
		temp:blendTime(100); 
		temp:add(enemy_dir(0), "macbeth/stab_combo_6_restab_2.fbxanim");
		--}
		
		--{ restab combo 2 repeat 1,2
		
		temp = addComboState(nil, restab, 2, 1)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_restab_1.fbxanim");
		
		temp = addComboState(nil, restab, 2, 2)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_restab_2.fbxanim");
		--}
		
		--{ restab combo 4 repeat 1,2
		
		temp = addComboState(nil, restab, 4, 1)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_restab_1.fbxanim");
		
		temp = addComboState(nil, restab, 4, 2)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_restab_1.fbxanim");
		
		temp = addComboState(nil, restab, 4, 3)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_restab_1.fbxanim");
		--}
		
		--{ restab combo 5 repeat 1,2
		
		temp = addComboState(nil, restab, 5, 1)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_restab_1.fbxanim");
		
		temp = addComboState(nil, restab, 5, 2)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_restab_2.fbxanim");
		
		temp = addComboState(nil, restab, 5, 3)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_restab_2.fbxanim");
		--}
		
		--{ restab combo 6
		temp = addComboState(nil, restab, 6, 1)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_restab.fbxanim");
		
		temp = addComboState(nil, restab, 6, 2)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_restab.fbxanim");
		
		temp = addComboState(nil, restab, 6, 3)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_restab.fbxanim");
		
		
		--{ restab combo 7
		temp = addComboState(nil, restab, 7, 1)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_restab.fbxanim");
		
		temp = addComboState(nil, restab, 7, 2)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_restab_1.fbxanim");
		
		temp = addComboState(nil, restab, 7, 3)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_restab_2.fbxanim");
		
		
		--{ restab combo 8
		temp = addComboState(nil, restab, 8, 1)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_restab_1.fbxanim");
		
		temp = addComboState(nil, restab, 8, 2) 
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_restab.fbxanim");
		
		temp = addComboState(nil, restab, 8, 3)
		temp:blendTime(100);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_restab.fbxanim");
		
	
	
	--{ END
		-- --{ end combo 1 repeat 1,2,3
		-- temp = addComboState(nil, stop, 1, 1)
		-- temp:blendTime(200);
		-- temp:add(enemy_dir(110),  "macbeth/stab_combo_end_1_right.fbxanim");
		-- temp:add(enemy_dir(45.1), "macbeth/stab_combo_end_1_right.fbxanim");
		-- temp:add(enemy_dir(44.9), "macbeth/stab_combo_end_1.fbxanim");
		-- temp:add(enemy_dir(-44.9), "macbeth/stab_combo_end_1.fbxanim");
		-- temp:add(enemy_dir(-45.1), "macbeth/stab_combo_end_1_left.fbxanim");
		-- temp:add(enemy_dir(-110), "macbeth/stab_combo_end_1_left.fbxanim");
		-- table.insert(combo_end_table, temp);
		
		-- temp = addComboState(nil, stop, 1, 2)
		-- temp:blendTime(200);
		-- temp:add(enemy_dir(110),  "macbeth/stab_combo_end_1_right.fbxanim");
		-- temp:add(enemy_dir(45.1), "macbeth/stab_combo_end_1_right.fbxanim");
		-- temp:add(enemy_dir(44.9), "macbeth/stab_combo_end_1.fbxanim");
		-- temp:add(enemy_dir(-44.9), "macbeth/stab_combo_end_1.fbxanim");
		-- temp:add(enemy_dir(-45.1), "macbeth/stab_combo_end_1_left.fbxanim");
		-- temp:add(enemy_dir(-110), "macbeth/stab_combo_end_1_left.fbxanim");
		-- table.insert(combo_end_table, temp);
		
		-- temp = addComboState(nil, stop, 1, 3)
		-- temp:blendTime(200);
		-- temp:add(enemy_dir(110),  "macbeth/stab_combo_end_2_right.fbxanim");
		-- temp:add(enemy_dir(45.1), "macbeth/stab_combo_end_2_right.fbxanim");
		-- temp:add(enemy_dir(44.9), "macbeth/stab_combo_end_2.fbxanim"); 
		-- temp:add(enemy_dir(-44.9), "macbeth/stab_combo_end_2.fbxanim");
		-- temp:add(enemy_dir(-45.1), "macbeth/stab_combo_end_2_left.fbxanim");
		-- temp:add(enemy_dir(-110), "macbeth/stab_combo_end_2_left.fbxanim");
		-- table.insert(combo_end_table, temp);
		-- --}
		
		--{ end combo 1 repeat 1,2,3
		temp = addComboState(nil, stop, 1, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_6_end_1.fbxanim");
	
		table.insert(combo_end_table, temp);
		temp = addComboState(nil, stop, 1, 2)
		temp:blendTime(200);

		temp:add(enemy_dir(0), "macbeth/stab_combo_6_end_1.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 1, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_6_end_2.fbxanim"); 

		table.insert(combo_end_table, temp);
		--}
		
		--{ end combo 2 repeat 1,2,3
		temp = addComboState(nil, stop, 2, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(90), "macbeth/stab_combo_2_end_1_right.fbxanim");
		temp:add(enemy_dir(45.1), "macbeth/stab_combo_2_end_1_right.fbxanim"); 
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_end_1.fbxanim");
		temp:add(enemy_dir(-44.9), "macbeth/stab_combo_2_end_1.fbxanim");
		temp:add(enemy_dir(-45.1), "macbeth/stab_combo_2_end_1_left.fbxanim");
		temp:add(enemy_dir(-90), "macbeth/stab_combo_2_end_1_left.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 2, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 2, 2)
		temp:blendTime(0);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 2, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_3.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 2, 3)
		temp:blendTime(0);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_3.fbxanim");
		table.insert(combo_end_table, temp);
		--}
		
		--{ end combo 4 repeat 1,2,3
		temp = addComboState(nil, stop, 4, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(90), "macbeth/stab_combo_2_end_1_right.fbxanim");
		temp:add(enemy_dir(45.1), "macbeth/stab_combo_2_end_1_right.fbxanim"); 
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_end_1.fbxanim");
		temp:add(enemy_dir(-44.9), "macbeth/stab_combo_2_end_1.fbxanim");
		temp:add(enemy_dir(-45.1), "macbeth/stab_combo_2_end_1_left.fbxanim");
		temp:add(enemy_dir(-90), "macbeth/stab_combo_2_end_1_left.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 4, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 4, 2)
		temp:blendTime(0);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 4, 3) 
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 4, 3)
		temp:blendTime(0);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 4, 4) 
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 4, 4)
		temp:blendTime(0);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		--}
		
		--{ end combo 5 repeat 1,2,3
		temp = addComboState(nil, stop, 5, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(90), "macbeth/stab_combo_2_end_1_right.fbxanim");
		temp:add(enemy_dir(45.1), "macbeth/stab_combo_2_end_1_right.fbxanim"); 
		temp:add(enemy_dir(44.9), "macbeth/stab_combo_2_end_1.fbxanim");
		temp:add(enemy_dir(-44.9), "macbeth/stab_combo_2_end_1.fbxanim");
		temp:add(enemy_dir(-45.1), "macbeth/stab_combo_2_end_1_left.fbxanim");
		temp:add(enemy_dir(-90), "macbeth/stab_combo_2_end_1_left.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 5, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_end_1.fbxanim");
		table.insert(combo_end_table, temp);
		 
		temp = addComboState(stab_interrupted, stop, 5, 2)
		temp:blendTime(0);
		temp:add(enemy_dir(0), "macbeth/stab_combo_end_1.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 5, 3) 
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_end_1.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 5, 3)
		temp:blendTime(0);
		temp:add(enemy_dir(0), "macbeth/stab_combo_end_1.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 5, 4) 
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_end_1.fbxanim");
		table.insert(combo_end_table, temp); 
		
		temp = addComboState(stab_interrupted, stop, 5, 4) 
		temp:blendTime(0);
		temp:add(enemy_dir(0), "macbeth/stab_combo_end_1.fbxanim");
		table.insert(combo_end_table, temp);
		--}
		
		--end combo 6 
		temp = addComboState(nil, stop, 6, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 6, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 6, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 6, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 6, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 6, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 6, 4)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 6, 4)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end.fbxanim");
		table.insert(combo_end_table, temp);
		--}
		
		--end combo 7 
		temp = addComboState(nil, stop, 7, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 7, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 7, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 7, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 7, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 7, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 7, 4)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_3.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 7, 4)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_3.fbxanim");
		table.insert(combo_end_table, temp);
		--}
		
		
		--end combo 8 
		temp = addComboState(nil, stop, 8, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_1.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 8, 1)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_1.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 8, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 8, 2)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_2_end_2.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 8, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 8, 3)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 8, 4)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end.fbxanim");
		table.insert(combo_end_table, temp);
		
		temp = addComboState(stab_interrupted, stop, 8, 4)
		temp:blendTime(200);
		temp:add(enemy_dir(0), "macbeth/stab_combo_5_end.fbxanim");
		table.insert(combo_end_table, temp);
		--}
		
		
		--{ end combo 3
		temp = addComboState(nil, stop, 3, 1) 
		temp:blendTime(300);
		temp:from(s_fall_stab_hold)
		temp:add(enemy_dir(0), "macbeth/fall_stab_end_1.fbxanim");
		table.insert(combo_end_table, temp);  
		
		temp = addComboState(stab_interrupted, stop, 3, 1)
		temp:blendTime(300);
		temp:add(enemy_dir(0), "macbeth/fall_stab_end_2.fbxanim");
		temp:addEnterEvent("EventAnimStabTargetFollowStart");
		temp:addExitEvent("EventAnimStabTargetFollowEnd"); 
		table.insert(combo_end_table, temp);
		
		temp = addComboState(nil, stop, 3, 1, fast_stop)
		temp:blendTime(300);
		temp:from(s_fall_stab_start)
		temp:add(enemy_dir(0), "macbeth/fall_stab_end_2.fbxanim");
		temp:addEnterEvent("EventAnimStabTargetFollowStart");
		temp:addExitEvent("EventAnimStabTargetFollowEnd");
		table.insert(combo_end_table, temp);
		--}


--{STAND

	--{ Animation: s_stand_start
	s_stand_start = addState(stand, "s_stand_start");
	-- s_stand_start:from(running);
	s_stand_start:blendTime(400);
	s_stand_start:loop(false);
	s_stand_start:add(slope(-30), "macbeth/m_stand_start_down_30.fbxanim");
	s_stand_start:add(slope(0), "macbeth/m_stand_start_new.fbxanim");
	s_stand_start:add(slope(30), "macbeth/m_stand_start_up_30.fbxanim");
	-- s_stand_start:add("stand_face_test.fbxanim");
	table.insert(standing, s_stand_start);
	--}

	--{ Animation: s_stand
	s_stand = addState(stand, "s_stand");
	s_stand:from(standing);
	s_stand:blendTime(500);
	s_stand:loopBlendTime(300);
	s_stand:loop(true);
	-- s_stand:add("stand_scenery.fbxanim");
	s_stand:add(slope(-30), "macbeth/m_stand_down_30.fbxanim");
	s_stand:add(slope(0), "macbeth/m_stand_new.fbxanim");
	s_stand:add(slope(30), "macbeth/m_stand_up_30.fbxanim");
	table.insert(standing, s_stand);
	--}
	
--}

	
--{ JUMP_ATTACK
	
	--{ Animation: s_fall_stab_ready_start
	s_fall_stab_ready_start = addState(fall+fall_stab_ready, "s_fall_stab_ready_start");
	s_fall_stab_ready_start:blendTime(300);
	s_fall_stab_ready_start:loop(false); 
	s_fall_stab_ready_start:add( "macbeth/fall_stab_fall_start_1.fbxanim");
	s_fall_stab_ready_start:addEnterEvent("EventAnimAttackEnter");
	s_fall_stab_ready_start:addExitEvent("EventAnimAttackExit");
	s_fall_stab_ready_start:addFinishedEvent("EventAnimAttackFinished");
	table.insert(fall_attacking, s_fall_stab_ready_start);
	--}
	
	--{ Animation: s_fall_stab_ready
	s_fall_stab_ready = addState(fall+fall_stab_ready, "s_fall_stab_ready");
	s_fall_stab_ready:blendTime(0);
	s_fall_stab_ready:loop(true);
	s_fall_stab_ready:from(s_fall_stab_ready_start);
	s_fall_stab_ready:add( "macbeth/fall_stab_fall_1.fbxanim");
	s_fall_stab_ready:addEnterEvent("EventAnimAttackEnter");
	s_fall_stab_ready:addExitEvent("EventAnimAttackExit");
	s_fall_stab_ready:addFinishedEvent("EventAnimAttackFinished");
	table.insert(fall_attacking, s_fall_stab_ready);

	--}
	
	--{ Animation: s_jump_crush_start
	s_jump_crush_start = addState(fall+fall_crush_ready, "s_jump_crush_start");
	s_jump_crush_start:blendTime(200); 
	s_jump_crush_start:loop(false);
	s_jump_crush_start:add( "macbeth/jump_crush_start.fbxanim");
	table.insert(fall_attacking, s_jump_crush_start);

	--}
	
	--{ Animation: s_jump_crush
	--s_jump_crush = addState(fall_crush, "s_jump_crush");
	s_jump_crush = addState(fall_crush, "s_jump_crush");
	s_jump_crush:blendTime(200);
	s_jump_crush:loop(false);
	s_jump_crush:add( "macbeth/jump_crush.fbxanim");
	--s_jump_crush:absoluteRootMotionPosition(true);
	--s_jump_crush:absoluteRootMotionRotation(true);
	--s_jump_crush:add( "macbeth/heavy_crush.fbxanim");
	s_jump_crush:addExitEvent("EventAnimFallCrushExit");
	s_jump_crush:addFinishedEvent("EventAnimFallCrushFinished"); 
	table.insert(fall_attacking, s_jump_crush);

	--}
	
	--{ Animation: s_jump_crush_heavy
	--s_jump_crush_heavy = addState(fall_crush, "s_jump_crush_heavy");
	s_jump_crush_heavy = addState(fall_crush+heavy, "s_jump_crush_heavy");
	s_jump_crush_heavy:blendTime(200);
	s_jump_crush_heavy:loop(false);  
	s_jump_crush_heavy:absoluteRootMotionPosition(true)
	s_jump_crush_heavy:absoluteRootMotionRotation(true)
	s_jump_crush_heavy:add( "macbeth/heavy_crush.fbxanim");
	s_jump_crush_heavy:addExitEvent("EventAnimFallCrushExit");
	s_jump_crush_heavy:addFinishedEvent("EventAnimFallCrushFinished");
	table.insert(fall_attacking, s_jump_crush_heavy);

	--}
	
--}

--{ THROW

	--{ Animation: s_throw_start
	s_throw_start = addState(throw_start, "s_throw_start");
	s_throw_start:blendTime(300);
	s_throw_start:loop(false);
	s_throw_start:add( "macbeth/throw_start.fbxanim");
	table.insert(throwing, s_throw_start);
	--}
	
	--{ Animation: s_throw_hold
	s_throw_hold = addState(throw_hold, "s_throw_hold");
	s_throw_hold:blendTime(300);
	s_throw_hold:loop(false);
	s_throw_hold:add( "macbeth/throw_loop.fbxanim");
	table.insert(throwing, s_throw_hold);
	--}
	
	--{ Animation: s_throw_end
	s_throw_end = addState(throw_end, "s_throw_end");
	s_throw_end:blendTime(100);
	s_throw_end:loop(false);
	s_throw_end:add( "macbeth/throw_end.fbxanim");
	table.insert(throwing, s_throw_end);
	--}

--{ SLASH ATTACKS

	


	--{ Animation: s_slash_crouch_start
	s_slash_crouch_start = addState(slash_attack_1, "s_slash_crouch_start");
	--s_slash_crouch_start:from(standing); 
	--s_slash_crouch_start:from(crouching);
	
	s_slash_crouch_start:blendTime(100);
	s_slash_crouch_start:loop(false);
	s_slash_crouch_start:absoluteRootMotionPosition(false);
	s_slash_crouch_start:absoluteRootMotionRotation(false);
	s_slash_crouch_start:add( "macbeth/slash_attack_crouch_start.fbxanim");
	--s_slash_crouch_start:add( "macbeth/slash_jump_run.fbxanim");
	s_slash_crouch_start:addEnterEvent("EventAnimSlashAttackEnter");
	s_slash_crouch_start:addExitEvent("EventAnimSlashAttackExit"); 
	s_slash_crouch_start:addFinishedEvent("EventAnimAttackFinished");
	--s_slash_crouch_start:alwaysFinishAnimation(true);
	table.insert(slashing, s_slash_crouch_start);
	--}
	
	--{ Animation: s_slash_fail
	s_slash_fail = addState(stab_fail, "s_slash_fail");
	s_slash_fail:blendTime(0);
	s_slash_fail:loop(false);
	s_slash_fail:absoluteRootMotionPosition(true)
	s_slash_fail:absoluteRootMotionRotation(true)
	s_slash_fail:addExitEvent("EventAnimSlashFailEnd");
	s_slash_fail:add( "macbeth/stab_fail_01.fbxanim");
	table.insert(slashing, s_slash_fail);
	--}
	
	
	--{ Animation: s_slash_crouch_run_start
	s_slash_crouch_run_start = addState(slash_attack_1+crouch+run, "s_slash_crouch_run_start");
	--s_slash_crouch_run_start:from(standing); 
	--s_slash_crouch_run_start:from(crouching);
	
	s_slash_crouch_run_start:blendTime(100);
	s_slash_crouch_run_start:loop(false);
	s_slash_crouch_run_start:absoluteRootMotionPosition(false);
	s_slash_crouch_run_start:absoluteRootMotionRotation(false);
	s_slash_crouch_run_start:add( "macbeth/slash_attack_crouch_start.fbxanim");
	--s_slash_crouch_run_start:add( "macbeth/slash_jump_run.fbxanim");
	s_slash_crouch_run_start:addEnterEvent("EventAnimSlashAttackEnter");
	s_slash_crouch_run_start:addExitEvent("EventAnimSlashAttackExit"); 
	s_slash_crouch_run_start:addFinishedEvent("EventAnimAttackFinished");
	--s_slash_crouch_run_start:alwaysFinishAnimation(true);
	table.insert(slashing, s_slash_crouch_run_start);
	--}
	 
	-- --{ Animation: s_slash_crouch_start_run 
	-- s_slash_crouch_start_run = addState(slash_attack_1, "s_slash_crouch_start_run"); 
	-- s_slash_crouch_start_run:from(running);
	-- s_slash_crouch_start_run:blendTime(100); 
	-- s_slash_crouch_start_run:loop(false); 
	-- s_slash_crouch_start_run:add( "macbeth/slash_jump_run.fbxanim"); 

	-- s_slash_crouch_start_run:addEnterEvent("EventAnimSlashAttackEnter");
	-- s_slash_crouch_start_run:addExitEvent("EventAnimSlashAttackExit");
	-- s_slash_crouch_start_run:addFinishedEvent("EventAnimAttackFinished");
	-- --s_slash_crouch_start_run:alwaysFinishAnimation(true);
	-- table.insert(slashing, s_slash_crouch_start_run);
	-- --}
	
	--{ Animation: s_slash_crouch_1
	s_slash_crouch_1 = addState(slash_attack_1, "s_slash_crouch_1");
	--s_slash_crouch_1:from(s_slash_crouch_2);
	s_slash_crouch_1:blendTime(100);
	s_slash_crouch_1:loop(false);
	s_slash_crouch_1:absoluteRootMotionPosition(false); 
	s_slash_crouch_1:absoluteRootMotionRotation(false);
	s_slash_crouch_1:add( "macbeth/slash_attack_crouch_1.fbxanim");
	--s_slash_crouch_1:addEnterEvent("EventAnimStaggerTypelethal_attack_1");
	s_slash_crouch_1:addEnterEvent("EventAnimSlashAttackEnter");
	
	s_slash_crouch_1:addExitEvent("EventAnimSlashAttackExit");
	s_slash_crouch_1:addFinishedEvent("EventAnimAttackFinished");
	--s_slash_crouch_1:alwaysFinishAnimation(true);
	table.insert(slashing, s_slash_crouch_1);
	--}
	
	--{ Animation: s_slash_crouch_2
	s_slash_crouch_2 = addState(slash_attack_1, "s_slash_crouch_2");
	s_slash_crouch_2:from(s_slash_crouch_1);
	--s_slash_crouch_2:from(s_slash_crouch_start_run);
	
	s_slash_crouch_2:from(s_slash_crouch_start);
	s_slash_crouch_2:blendTime(100);
	s_slash_crouch_2:loop(false);
	s_slash_crouch_2:absoluteRootMotionPosition(false);
	s_slash_crouch_2:absoluteRootMotionRotation(false);
	s_slash_crouch_2:add( "macbeth/slash_attack_crouch_2.fbxanim");
	--s_slash_crouch_2:addEnterEvent("EventAnimStaggerTypelethal_attack_1");
	s_slash_crouch_2:addEnterEvent("EventAnimSlashAttackEnter");
	s_slash_crouch_2:addExitEvent("EventAnimSlashAttackExit");
	s_slash_crouch_2:addFinishedEvent("EventAnimAttackFinished");
	--s_slash_crouch_2:alwaysFinishAnimation(true);
	table.insert(slashing, s_slash_crouch_2); 
	--}

	--{ Animation: s_slash_crouch_end_1
	s_slash_crouch_end_1 = addState(slash_attack_1, "s_slash_crouch_end_1");
	s_slash_crouch_end_1:blendTime(100);
	s_slash_crouch_end_1:from(s_slash_crouch_1);
	s_slash_crouch_end_1:loop(false);
	s_slash_crouch_end_1:absoluteRootMotionPosition(false);
	s_slash_crouch_end_1:absoluteRootMotionRotation(false);
	s_slash_crouch_end_1:add( "macbeth/slash_attack_crouch_end_2.fbxanim");
	--s_slash_crouch_end_1:addEnterEvent("EventAnimStaggerTypelethal_attack_1");
	s_slash_crouch_end_1:addEnterEvent("EventAnimSlashAttackEnter");
	s_slash_crouch_end_1:addExitEvent("EventAnimSlashAttackExit");
	s_slash_crouch_end_1:addFinishedEvent("EventAnimAttackFinished");
	table.insert(slashing, s_slash_crouch_end_1);
	--}
	 
	--{ Animation: s_slash_crouch_end_2
	s_slash_crouch_end_2 = addState(slash_attack_1, "s_slash_crouch_end_2");
	s_slash_crouch_end_2:blendTime(100);
	s_slash_crouch_end_2:from(s_slash_crouch_2);
	--s_slash_crouch_end_2:from(s_slash_crouch_loop);
	s_slash_crouch_end_2:loop(false);
	s_slash_crouch_end_2:absoluteRootMotionPosition(false);
	s_slash_crouch_end_2:absoluteRootMotionRotation(false);
	s_slash_crouch_end_2:add( "macbeth/slash_attack_crouch_end_1.fbxanim");
	--s_slash_crouch_end_2:addEnterEvent("EventAnimStaggerTypelethal_attack_1");
	s_slash_crouch_end_2:addEnterEvent("EventAnimSlashAttackEnter");
	s_slash_crouch_end_2:addExitEvent("EventAnimSlashAttackExit");
	s_slash_crouch_end_2:addFinishedEvent("EventAnimAttackFinished");
	table.insert(slashing, s_slash_crouch_end_2);
	--} 
	
	--s_slash_crouch_2:from(s_slash_crouch_end_1);
	--s_slash_crouch_1:from(s_slash_crouch_end_2);
	s_slash_crouch_1:from(s_slash_crouch_2);
	
	--{ Animation: s_slash_to_stand
	s_slash_to_stand = addState(stand, "s_slash_to_stand");
	s_slash_to_stand:blendTime(600);
	s_slash_to_stand:from(slashing);
	--s_slash_to_stand:from(s_slash_crouch_loop);
	s_slash_to_stand:loop(false);
	s_slash_to_stand:absoluteRootMotionPosition(false);
	s_slash_to_stand:absoluteRootMotionRotation(false);
	s_slash_to_stand:add( "macbeth/slash_attack_crouch_end_1.fbxanim");
	--s_slash_to_stand:add( "macbeth/slash_attack_crouch_2.fbxanim");
	--s_slash_to_stand:addEnterEvent("EventAnimStaggerTypelethal_attack_1");
	s_slash_to_stand:addEnterEvent("EventAnimSlashAttackEnter");
	s_slash_to_stand:addExitEvent("EventAnimSlashAttackExit");
	s_slash_to_stand:addFinishedEvent("EventAnimAttackFinished");
	table.insert(standing, s_slash_to_stand);
	--}
	
	--{ Animation: s_from_slash_end_to_stand 
	s_from_slash_end_to_stand = addState(stand, "s_from_slash_end_to_stand");
	s_from_slash_end_to_stand:blendTime(600);
	s_from_slash_end_to_stand:from(s_slash_to_stand);
	--s_from_slash_end_to_stand:from(s_slash_crouch_loop);
	s_from_slash_end_to_stand:loop(false);
	s_from_slash_end_to_stand:absoluteRootMotionPosition(false);
	s_from_slash_end_to_stand:absoluteRootMotionRotation(false);
	s_from_slash_end_to_stand:add( "macbeth/m_left_handed_crouch_end.fbxanim");
	--s_from_slash_end_to_stand:add( "macbeth/slash_attack_crouch_2.fbxanim");
	--s_from_slash_end_to_stand:addEnterEvent("EventAnimStaggerTypelethal_attack_1");
	table.insert(standing, s_from_slash_end_to_stand);
	--}
	
	s_slash_crouch_1:from(s_slash_crouch_2);
	
	--{ Animation: s_slash_to_crouch
	s_slash_to_crouch = addState(crouch, "s_slash_to_crouch");
	s_slash_to_crouch:blendTime(600);
	s_slash_to_crouch:from(slashing);
	--s_slash_to_crouch:from(s_slash_crouch_loop);
	s_slash_to_crouch:loop(false);
	s_slash_to_crouch:absoluteRootMotionPosition(false);
	s_slash_to_crouch:absoluteRootMotionRotation(false);
	s_slash_to_crouch:add( "macbeth/slash_attack_crouch_end_1.fbxanim");
	--s_slash_to_crouch:add( "macbeth/slash_attack_crouch_2.fbxanim");
	--s_slash_to_crouch:addEnterEvent("EventAnimStaggerTypelethal_attack_1");
	s_slash_to_crouch:addEnterEvent("EventAnimSlashAttackEnter");
	s_slash_to_crouch:addExitEvent("EventAnimSlashAttackExit");
	s_slash_to_crouch:addFinishedEvent("EventAnimAttackFinished");
	table.insert(crouching, s_slash_to_crouch);
	--} 
	
	--{ Animation: s_run_from_slash
	s_run_from_slash = addState(run, "s_run_from_slash");
	s_run_from_slash:from(slashing);
	s_run_from_slash:synchronizedStartTimeGroup(5);
	s_run_from_slash:blendTime(350);
	--s_run_from_slash:speedFactor(3);
	s_run_from_slash:loopBlendTime(200);
	s_run_from_slash:loop(true);
	-- s_run_from_slash:add(run_lean(0.0), "run.fbxanim");
	s_run_from_slash:add(slope(-30.0), "macbeth/m_run_down_30.fbxanim");
	s_run_from_slash:add(slope(0.0), "macbeth/m_run_new.fbxanim");
	s_run_from_slash:add(slope(30.0), "macbeth/m_run_up_30.fbxanim");
	-- s_run_from_slash:add(slope(-30.0), "run_down_30.fbxanim");
	-- s_run_from_slash:add(slope(0.0), "run_new.fbxanim");
	-- s_run_from_slash:add(slope(30.0), "run_up_30.fbxanim");
	table.insert(running, s_run_from_slash);
	--}
	
	--{ Animation: s_run_slash
	s_run_slash = addState(slash_attack_1+run, "s_run_slash");
	--s_run_slash:from(s_slash_crouch_2);
	s_run_slash:blendTime(150);
	s_run_slash:loop(false);
	--s_run_slash:synchronizedStartTimeGroup(5);
	s_run_slash:absoluteRootMotionPosition(false); 
	s_run_slash:absoluteRootMotionRotation(false);
	s_run_slash:add( "macbeth/m_run_slash.fbxanim");
	--s_run_slash:addEnterEvent("EventAnimStaggerTypelethal_attack_1");
	s_run_slash:addEnterEvent("EventAnimSlashAttackEnter");
	
	s_run_slash:addExitEvent("EventAnimSlashAttackExit");
	s_run_slash:addFinishedEvent("EventAnimAttackFinished");
	--s_run_slash:alwaysFinishAnimation(true);
	table.insert(slashing, s_run_slash);
	--}
	
	--}
	--{ADDITIVE SLASH
		-- --{ Animation: s_run_start_additive_slash_base
		-- s_run_start_additive_slash_base = addState(slash_attack_1+run, "s_run_start_additive_slash_base");
		-- s_run_start_additive_slash_base:blendTime(300);
		-- s_run_start_additive_slash_base:loop(false); 
		-- --s_run_start_additive_slash_base:speedFactor(3); 

		-- -- s_run_start_additive_slash_base:add("run_and_stop_test_run.fbxanim");
		-- -- s_run_start_additive_slash_base:add("run_start_mocap_test5.fbxanim");
		-- --s_run_start_additive_slash_base:add(slope(-30), "macbeth/m_run_start_down_30.fbxanim");
		-- s_run_start_additive_slash_base:add(slope(0), "macbeth/m_run_start_new.fbxanim");
		-- --s_run_start_additive_slash_base:add(slope(30), "macbeth/m_run_start_up_30.fbxanim");
		-- -- s_run_start_additive_slash_base:add(slope(-30), "run_start_down_30.fbxanim");
		-- -- s_run_start_additive_slash_base:add(slope(0), "run_start_new.fbxanim"); 
		-- -- s_run_start_additive_slash_base:add(slope(30), "run_start_up_30.fbxanim");
		-- -- s_run_start_additive_slash_base:add(rope_force(0), "run_back_rope.fbxanim");
		-- -- s_run_start_additive_slash_base:add(rope_force(5), "run_back_rope_force.fbxanim");
		-- table.insert(running, s_run_start_additive_slash_base); 
		-- --}
	
		-- --{ Animation: s_run_slash_additive_base
		-- s_run_slash_additive_base = addState(slash_attack_1+run, "s_run_slash_additive_base");
		-- s_run_slash_additive_base:from(running);
		-- s_run_slash_additive_base:synchronizedStartTimeGroup(5);
		-- s_run_slash_additive_base:blendTime(200);
		-- --s_run_slash_additive_base:speedFactor(3);
		-- s_run_slash_additive_base:loopBlendTime(200);
		-- s_run_slash_additive_base:loop(true);
		-- -- s_run_slash_additive_base:add(run_lean(0.0), "run.fbxanim");
		-- --s_run_slash_additive_base:add(slope(-30.0), "macbeth/m_additive_base_run_down_30.fbxanim");
		-- s_run_slash_additive_base:add(slope(0.0), "macbeth/m_additive_base_run_new.fbxanim");
		-- s_run_slash_additive_base:addEnterEvent("EventAnimSlashAttackEnter");
		-- s_run_slash_additive_base:addExitEvent("EventAnimSlashAttackExit");
		-- s_run_slash_additive_base:addFinishedEvent("EventAnimAttackFinished");
		-- --s_run_slash_additive_base:add(slope(30.0), "macbeth/m_additive_base_run_up_30.fbxanim");
		-- -- s_run_slash_additive_base:add(slope(-30.0), "run_down_30.fbxanim");
		-- -- s_run_slash_additive_base:add(slope(0.0), "run_new.fbxanim");
		-- -- s_run_slash_additive_base:add(slope(30.0), "run_up_30.fbxanim"); 
		-- table.insert(running, s_run_slash_additive_base);
		-- table.insert(slashing, s_run_slash_additive_base);
		-- --}
	
		-- --{ Animation: s_slash_additive_run
		-- s_slash_additive_run = addState(slash_attack_1+run+additive_slash_attack, "s_slash_additive_run", 1);
		-- --s_slash_additive_run:from(standing); 
		-- --s_slash_additive_run:from(crouching);
		-- --s_slash_additive_run:from(running); 
		
		-- s_slash_additive_run:blendTime(150); 
		-- s_slash_additive_run:loop(false);
		-- s_slash_additive_run:restart(true);
		-- s_slash_additive_run:absoluteRootMotionPosition(false);
		-- s_slash_additive_run:absoluteRootMotionRotation(false);
		-- s_slash_additive_run:add( "macbeth/slash_attack_additive_crouch_1.fbxanim");
		-- --s_slash_additive_run:addEnterEvent("EventAnimStaggerTypelethal_attack_1");
		-- s_slash_additive_run:addEnterEvent("EventAnimSlashAttackEnter");
		-- s_slash_additive_run:addExitEvent("EventAnimSlashAttackExit");
		-- s_slash_additive_run:addFinishedEvent("EventAnimAttackFinished");
		-- s_slash_additive_run:addReference("macbeth/slash_attack_additive_ref.fbxanim");
		-- table.insert(slashing, s_slash_additive_run);
		
	--}
	--}
	
--}

--{PUSH

	--{ Animation: s_push_start
	s_push_start = addState(push, "s_push_start");
	s_push_start:blendTime(300);
	s_push_start:loopBlendTime(300);
	s_push_start:loop(false);
	s_push_start:add(push_speed(0.0), 0.7, "push_start.fbxanim");
	s_push_start:add(push_speed(0.5), 0.7, "push_start.fbxanim");
	s_push_start:add(push_speed(1.0), 1.2, "push_start.fbxanim");
	s_push_start:add(push_speed(2.0), 2.2, "push_start.fbxanim");
	s_push_start:add(push_speed(3.0), 2.2, "push_start.fbxanim");
	table.insert(pushing, s_push_start);
	--}
 
	--{ Animation: s_push
	s_push = addState(push, "s_push");
	s_push:from(pushing); 
	s_push:blendTime(300);
	s_push:loopBlendTime(300);
	s_push:loop(true);
	s_push:add(push_speed(0.0), 0.7, "push.fbxanim");
	s_push:add(push_speed(0.5), 0.7, "push.fbxanim");
	s_push:add(push_speed(1.0), 1.2, "push.fbxanim");
	s_push:add(push_speed(2.0), 2.2, "push.fbxanim");
	s_push:add(push_speed(3.0), 2.2, "push.fbxanim");
	table.insert(pushing, s_push);
	--}

	--{ Animation: push_end
	push_end = addState(stand, "push_end");
	push_end:from(pushing);
	push_end:blendTime(300);
	push_end:loop(false);
	push_end:add(push_speed(0.0), 0.7, "push_end.fbxanim");
	push_end:add(push_speed(0.5), 0.7, "push_end.fbxanim");
	push_end:add(push_speed(1.0), 1.2, "push_end.fbxanim");
	push_end:add(push_speed(2.0), 2.2, "push_end.fbxanim");
	push_end:add(push_speed(3.0), 2.2, "push_end.fbxanim");
	table.insert(standing, push_end);
	--}
--}

--{ Animation: s_stand_over_ledge
s_stand_over_ledge = addState(stand+over_ledge, "s_stand_over_ledge");
-- s_stand_over_ledge:from(running);
-- s_stand_over_ledge:from(jumping);
-- s_stand_over_ledge:from(falling);
s_stand_over_ledge:blendTime(300);
s_stand_over_ledge:loop(false);
-- s_stand_over_ledge:add("stand_over_ledge_scenery.fbxanim");
s_stand_over_ledge:add("macbeth/m_stand_over_ledge.fbxanim");
-- s_stand_over_ledge:add("ledge_climb_over_ledge.fbxanim");
table.insert(standing, s_stand_over_ledge);
--}

--{ Animation: s_stand_over_ledge_loop
s_stand_over_ledge_loop = addState(stand+over_ledge, "s_stand_over_ledge_loop");
s_stand_over_ledge_loop:from(s_stand_over_ledge);
s_stand_over_ledge_loop:blendTime(500);
s_stand_over_ledge_loop:loopBlendTime(300);
s_stand_over_ledge_loop:loop(true);
s_stand_over_ledge_loop:add("macbeth/m_stand_over_ledge_2.fbxanim");
table.insert(standing, s_stand_over_ledge_loop);
--}

--{ Animation: s_wall_jump_left
s_wall_jump_left = addState(wall_jump+turn_left, "s_wall_jump_left");
s_wall_jump_left:blendTime(200);
s_wall_jump_left:restart(true);
s_wall_jump_left:loop(false);
-- s_wall_jump_left:add("wall_jump_test4.fbxanim");
s_wall_jump_left:add("wall_jump_left.fbxanim");
s_wall_jump_left:addExitEvent("EventAnimTurnComplete");
s_wall_jump_left:addFinishedEvent("EventAnimTurnComplete");
table.insert(jumping, s_wall_jump_left);
--}

--{ Animation: s_wall_jump_right
s_wall_jump_right = addState(wall_jump+turn_right, "s_wall_jump_right");
s_wall_jump_right:blendTime(200);
s_wall_jump_right:restart(true);
s_wall_jump_right:loop(false);
-- s_wall_jump_right:add("wall_jump_test4.fbxanim");
s_wall_jump_right:add("wall_jump_right.fbxanim");
s_wall_jump_right:addExitEvent("EventAnimTurnComplete");
s_wall_jump_right:addFinishedEvent("EventAnimTurnComplete");
table.insert(jumping, s_wall_jump_right);
--}


--{LAND

	--{ Animation: s_land
	s_land = addState(stand, "s_land");
	s_land:from(falling);
	s_land:from(jumping);
	s_land:from(s_wall_jump_left);
	s_land:from(s_wall_jump_right);
	-- s_land:from(s_ledge_climb);
	s_land:blendTime(100);
	-- s_land:transitionFilterTime(200);
	s_land:loop(false);
	--s_land:add("land_new.fbxanim");
	s_land:add("macbeth/m_landing.fbxanim");
	table.insert(crouching, s_land);
	table.insert(standing, s_land);
	--}

	--{ Animation: s_land_high
	s_land_high = addState(roll, "s_land_high");
	--s_land_high:synchronizedStartTimeGroup(10);
	s_land_high:blendTime(200);
	--s_land_high:from(running);
	s_land_high:addFinishedEvent("EventAnimRollComplete");
	s_land_high:addExitEvent("EventAnimRollComplete");
	s_land_high:loop(false);
	s_land_high:add("macbeth/m_roll_new.fbxanim");
	--table.insert(crouching, s_land_high);
	--}
	
	-- --{ Animation: s_land_run
	-- s_land_run = addState(roll+run, "s_land_run");
	-- --s_land_run:synchronizedStartTimeGroup(10);
	-- s_land_run:blendTime(200);
	-- --s_land_run:from(running);
	-- s_land_run:addFinishedEvent("EventAnimRollComplete");
	-- s_land_run:addExitEvent("EventAnimRollComplete");
	-- s_land_run:loop(false);
	-- s_land_run:add("roll_new.fbxanim");
	-- --table.insert(crouching, s_land_run);
	-- --}
	
	
	-- --{ Animation: s_land_stand
	-- s_land_stand = addState(roll+stand, "s_land_stand");
	-- --s_land_stand:synchronizedStartTimeGroup(10);
	-- s_land_stand:blendTime(200);
	-- --s_land_stand:from(running);
	-- s_land_stand:addFinishedEvent("EventAnimRollComplete");
	-- s_land_stand:addExitEvent("EventAnimRollComplete");
	-- s_land_stand:loop(false);
	-- s_land_stand:add("roll_new.fbxanim");
	-- --table.insert(crouching, s_land_stand);
	-- --}

	
	-- --{ Animation: s_land_crouch
	-- s_land_crouch = addState(roll+crouch, "s_land_crouch");
	-- --s_land_crouch:synchronizedStartTimeGroup(10);
	-- s_land_crouch:blendTime(200);
	-- --s_land_crouch:from(running);
	-- s_land_crouch:addFinishedEvent("EventAnimRollComplete");
	-- s_land_crouch:addExitEvent("EventAnimRollComplete");
	-- s_land_crouch:loop(false);
	-- s_land_crouch:add("roll_new.fbxanim");
	-- --table.insert(crouching, s_land_crouch);
	-- --}
	
	-- --{ Animation: s_land_crouch_walk
	-- s_land_crouch_walk = addState(roll+crouch+run, "s_land_crouch_walk");
	-- --s_land_crouch_walk:synchronizedStartTimeGroup(10);
	-- s_land_crouch_walk:blendTime(200);
	-- --s_land_crouch_walk:from(running);
	-- s_land_crouch_walk:addFinishedEvent("EventAnimRollComplete");
	-- s_land_crouch_walk:addExitEvent("EventAnimRollComplete");
	-- s_land_crouch_walk:loop(false);
	-- s_land_crouch_walk:add("roll_new.fbxanim");
	-- --table.insert(crouching, s_land_crouch_walk);
	-- --}

--}
 

--}			CROUCH
		
		
		--if sneaking_distance > 3.0 then sneaking_distance = 3.0 end
		
		--{ Animation: s_crouch_start 
		s_crouch_start = addState(crouch, "s_crouch_start");
		s_crouch_start:from(standing);
		--s_crouch_start:from(slashing);
		--s_crouch_start:from(crouching);
		s_crouch_start:blendTime(300);
		s_crouch_start:loop(false);
		s_crouch_start:synchronizedStartTimeGroup(123);
		--s_crouch_start:add("macbeth/m_crouch_start.fbxanim");
		-- s_crouch_start:add("macbeth/m_left_handed_crouch_start.fbxanim");
		s_crouch_start:add(sneaking_distance(3000), "macbeth/m_left_handed_crouch_start.fbxanim");
		s_crouch_start:add(sneaking_distance(3.0), "macbeth/m_left_handed_crouch_start.fbxanim");
		s_crouch_start:add(sneaking_distance(1.5), "macbeth/m_left_handed_crouch_start_stab_pose.fbxanim");
		s_crouch_start:add(sneaking_distance(0), "macbeth/m_left_handed_crouch_start_stab_pose.fbxanim");
		--s_crouch_start:add("crouch2.fbxanim");
		table.insert(crouching, s_crouch_start);
		--}
		
		-- --{ Animation: s_crouch_2
		-- s_crouch_2 = addState(crouch, "s_crouch_2"); 
		-- --s_crouch_2:from(standing); 
		-- s_crouch_2:blendTime(200);
		-- s_crouch_2:loop(false);
		-- s_crouch_2:synchronizedStartTimeGroup(124);
		-- --s_crouch_2:add("macbeth/m_crouch_start.fbxanim");
		-- s_crouch_2:add("macbeth/m_left_handed_crouch_loop.fbxanim");
		-- --s_crouch_2:add("crouch2.fbxanim");
		-- table.insert(crouching, s_crouch_2);
		-- --}
		
		--{ Animation: s_crouch_from_attacking
		s_crouch_from_attacking = addState(crouch, "s_crouch_from_attacking"); 
		s_crouch_from_attacking:from(attacking, -1000);  
		s_crouch_from_attacking:blendTime(200);
		s_crouch_from_attacking:loop(false);
		s_crouch_from_attacking:synchronizedStartTimeGroup(124);
		--s_crouch_from_attacking:add("macbeth/m_crouch_start.fbxanim");
		-- s_crouch_from_attacking:add("macbeth/m_left_handed_crouch_loop.fbxanim");
		s_crouch_from_attacking:add(sneaking_distance(3000), "macbeth/m_left_handed_crouch_loop.fbxanim");
		s_crouch_from_attacking:add(sneaking_distance(3.0), "macbeth/m_left_handed_crouch_loop.fbxanim");
		s_crouch_from_attacking:add(sneaking_distance(1.5), "macbeth/m_left_handed_crouch_loop_stab_pose.fbxanim");
		s_crouch_from_attacking:add(sneaking_distance(0), "macbeth/m_left_handed_crouch_loop_stab_pose.fbxanim");
		--s_crouch_from_attacking:add("crouch2.fbxanim");
		table.insert(crouching, s_crouch_from_attacking);
		--}
		
		--{ Animation: s_crouch_loop
		s_crouch_loop = addState(crouch, "s_crouch_loop");
		s_crouch_loop:from(crouching);  
		s_crouch_loop:blendTime(600);
		s_crouch_loop:loop(true);
		s_crouch_loop:loopBlendTime(600);
		s_crouch_loop:synchronizedStartTimeGroup(125);
		--s_crouch_loop:mirror(true);
		--s_crouch_loop:synchronizedStartTimeGroup(26);
		--s_crouch_loop:add("crouch_loop.fbxanim");
		--s_crouch_loop:add("macbeth/m_crouch_loop.fbxanim");
		-- s_crouch_loop:add("macbeth/m_left_handed_crouch_loop.fbxanim");
		s_crouch_loop:add(sneaking_distance(3000), "macbeth/m_left_handed_crouch_loop.fbxanim");
		s_crouch_loop:add(sneaking_distance(3.0), "macbeth/m_left_handed_crouch_loop.fbxanim");
		s_crouch_loop:add(sneaking_distance(1.5), "macbeth/m_left_handed_crouch_loop_stab_pose.fbxanim");
		s_crouch_loop:add(sneaking_distance(0), "macbeth/m_left_handed_crouch_loop_stab_pose.fbxanim");
		table.insert(crouching, s_crouch_loop);
		--}
		
		--{ Animation: s_crouch_loop_from_turning
		s_crouch_loop_from_turning = addState(crouch, "s_crouch_loop_from_turning");
		s_crouch_loop_from_turning:from(turn_crouching, -10000); 
		s_crouch_loop_from_turning:blendTime(2000);
		s_crouch_loop_from_turning:loop(false);
		s_crouch_loop_from_turning:loopBlendTime(600);
		s_crouch_loop_from_turning:synchronizedStartTimeGroup(125);
		--s_crouch_loop_from_turning:synchronizedStartTimeGroup(26);
		--s_crouch_loop_from_turning:add("crouch_loop.fbxanim");
		--s_crouch_loop_from_turning:add("macbeth/m_crouch_loop.fbxanim");
		-- s_crouch_loop_from_turning:add("macbeth/m_left_handed_crouch_loop.fbxanim");
		
		s_crouch_loop_from_turning:add(sneaking_distance(3000), "macbeth/m_left_handed_crouch_loop.fbxanim");
		s_crouch_loop_from_turning:add(sneaking_distance(3.0), "macbeth/m_left_handed_crouch_loop.fbxanim");
		s_crouch_loop_from_turning:add(sneaking_distance(1.5), "macbeth/m_left_handed_crouch_loop_stab_pose.fbxanim");
		s_crouch_loop_from_turning:add(sneaking_distance(0), "macbeth/m_left_handed_crouch_loop_stab_pose.fbxanim");
		table.insert(crouching, s_crouch_loop_from_turning);
		--}
		
		--{ Animation: s_walk_start_crouching
		s_walk_start_crouching = addState(run+crouch, "s_walk_start_crouching");
		s_walk_start_crouching:blendTime(300);
		s_walk_start_crouching:blendMode(3)
		--s_walk_start_crouching:from(standing);
		--s_walk_start_crouching:from(s_crouch_loop);
		--s_walk_start_crouching:from(s_crouch);
		--s_walk_start_crouching:synchronizedStartTimeGroup(26);
		--s_walk_start_crouching:speedFactor(1.0);
		--s_walk_start_crouching:add("crouch_walk_new.fbxanim");
		--s_walk_start_crouching:add("crouch_walk_start.fbxanim");
		
		-- s_walk_start_crouching:add("macbeth/m_crouch_walk_start.fbxanim"); 
		
		s_walk_start_crouching:add(sneaking_distance(3000), "macbeth/m_crouch_walk_start.fbxanim");
		s_walk_start_crouching:add(sneaking_distance(3.0),"macbeth/m_crouch_walk_start.fbxanim");
		s_walk_start_crouching:add(sneaking_distance(1.5),"macbeth/m_crouch_walk_start_stab_pose.fbxanim");
		s_walk_start_crouching:add(sneaking_distance(0),"macbeth/m_crouch_walk_start_stab_pose.fbxanim");
		table.insert(crouching, s_walk_start_crouching);
		--}
		
		--{ Animation: s_walk_start_turning_left_crouching
		s_walk_start_turning_left_crouching = addState(run+crouch+turn_left, "s_walk_start_turning_left_crouching");
		s_walk_start_turning_left_crouching:restart(true);
		--s_walk_start_turning_left_crouching:from(crouching);
		s_walk_start_turning_left_crouching:blendTime(300);
		s_walk_start_turning_left_crouching:synchronizedStartTimeGroup(26); --SYNC WITH S_RUN_START_TURNING_LEFT
		--s_walk_start_turning_left_crouching:synchronizedStartTimeGroup(2); --SYNC WITH S_CROUCH_STAND_TURN_LEFT
		--s_walk_start_turning_left_crouching:add("macbeth/m_crouch_turn_left.fbxanim");
		s_walk_start_turning_left_crouching:add("macbeth/m_crouch_start_walk_turn_left.fbxanim");
		s_walk_start_turning_left_crouching:addFinishedEvent("EventAnimTurnComplete");
		s_walk_start_turning_left_crouching:addExitEvent("EventAnimTurnComplete");
		table.insert(crouching, s_walk_start_turning_left_crouching);
		--}
		
		--{ Animation: s_walk_start_turning_right_crouching
		s_walk_start_turning_right_crouching = addState(run+crouch+turn_right, "s_walk_start_turning_right_crouching");
		s_walk_start_turning_right_crouching:restart(true);
		--s_walk_start_turning_right_crouching:from(crouching);
		s_walk_start_turning_right_crouching:blendTime(300); 
		s_walk_start_turning_right_crouching:synchronizedStartTimeGroup(25); --SYNC WITH S_RUN_START_TURNING_LEFT
		--s_walk_start_turning_right_crouching:synchronizedStartTimeGroup(1); --SYNC WITH S_CROUCH_STAND_TURN_RIGHT
		--s_walk_start_turning_right_crouching:add("crouch_walk_start_turning_right.fbxanim");
		--s_walk_start_turning_right_crouching:add("macbeth/m_crouch_turn_right.fbxanim");
		s_walk_start_turning_right_crouching:add("macbeth/m_crouch_start_walk_turn_right.fbxanim");
		s_walk_start_turning_right_crouching:addFinishedEvent("EventAnimTurnComplete");
		s_walk_start_turning_right_crouching:addExitEvent("EventAnimTurnComplete");
		table.insert(crouching, s_walk_start_turning_right_crouching);
		--}
		
		--{ Animation: s_crouch_from_run 
		s_crouch_from_run = addState(run+crouch, "s_crouch_from_run");
		s_crouch_from_run:blendTime(300);
		s_crouch_from_run:from(running);
		s_crouch_from_run:add("crouch_from_run.fbxanim");
		--s_crouch_from_run:add("macbeth/m_crouch_from_run.fbxanim");
		table.insert(crouching, s_crouch_from_run);
		--}
		
		--{ Animation: s_crouch_loading_walk
		s_crouch_loading_walk = addState(crouch+run+additive, "s_crouch_loading_walk");
		-- s_crouch_loading_walk = addState(run+crouch+load, "s_crouch_loading_walk");
		s_crouch_loading_walk:blendTime(300);
		--s_crouch_loading_walk:speedFactor(1.0);
		s_crouch_loading_walk:loop(true);
		s_crouch_loading_walk:loopBlendTime(300);
		-- s_crouch_loading_walk:speedFactor(1.0);
		s_crouch_loading_walk:add(run_direction(-180), "crouch_loading_walk_back.fbxanim");
		s_crouch_loading_walk:add(run_direction(-90), "crouch_loading_walk_left.fbxanim");
		s_crouch_loading_walk:add(run_direction(0), "crouch_loading_walk_forward.fbxanim");
		s_crouch_loading_walk:add(run_direction(90), "crouch_loading_walk_right.fbxanim");
		s_crouch_loading_walk:add(run_direction(180), "crouch_loading_walk_back.fbxanim");
		table.insert(crouching, s_crouch_loading_walk);
		--}
		
		-- --{ Animation: s_crouch_from_run_end
		-- s_crouch_from_run_end = addState(run, "s_crouch_from_run_end");
		-- s_crouch_from_run_end:synchronizedStartTimeGroup(10);
		-- s_crouch_from_run_end:blendTime(200);
		-- --s_crouch_from_run_end:from(s_crouch_from_run);
		-- s_crouch_from_run_end:loop(false);
		-- s_crouch_from_run_end:add("roll_new.fbxanim");
		-- table.insert(crouching, s_crouch_from_run_end);
		-- --}
		
		--{ Animation: s_walk_crouching
		s_walk_crouching = addState(run+crouch, "s_walk_crouching");
		s_walk_crouching:blendTime(600);
		--s_walk_crouching:speedFactor(1.0);
		s_walk_crouching:from(s_walk_start_crouching);
		s_walk_crouching:from(s_walk_start_turning_left_crouching); 
		s_walk_crouching:from(s_walk_start_turning_right_crouching);
		s_walk_crouching:from(s_crouch_from_run);
		s_walk_crouching:loop(true);
		--s_walk_crouching:speedFactor(0.7);
		s_walk_crouching:loopBlendTime(300);
		-- s_walk_crouching:speedFactor(1.0);
		--s_walk_crouching:add("crouch_walk.fbxanim");
		-- s_walk_crouching:add(sneaking_distance(0), "macbeth/m_crouch_walk_loop.fbxanim");
		
		s_walk_crouching:add(sneaking_distance(3000), "macbeth/m_crouch_walk_loop.fbxanim");
		s_walk_crouching:add(sneaking_distance(3.0), "macbeth/m_crouch_walk_loop.fbxanim");
		s_walk_crouching:add(sneaking_distance(1.5), "macbeth/m_crouch_walk_loop_stab_pose.fbxanim");
		s_walk_crouching:add(sneaking_distance(0), "macbeth/m_crouch_walk_loop_stab_pose.fbxanim");
		table.insert(crouching, s_walk_crouching);
		--}
		
		--{ Animation: s_crouch_from_walk
		s_crouch_from_walk = addState(crouch+stand, "s_crouch_from_walk");
		s_crouch_from_walk:from(s_walk_crouching);
		s_crouch_from_walk:from(s_walk_start_crouching);
		--s_crouch_from_walk:from(s_walk_start_turning_left_crouching);
		--s_crouch_from_walk:from(s_walk_start_turning_right_crouching);
		--s_crouch_from_walk:from(s_crouch_from_run);
		s_crouch_from_walk:from(attacking);
		s_crouch_from_walk:blendTime(300);
		s_crouch_from_walk:loop(false);
		--s_crouch_from_walk:add("crouch_from_walk.fbxanim");
		-- s_crouch_from_walk:add("macbeth/m_left_handed_crouch_start_2.fbxanim");
		
		s_crouch_from_walk:add(sneaking_distance(3000), "macbeth/m_left_handed_crouch_start_2.fbxanim");
		s_crouch_from_walk:add(sneaking_distance(3.0), "macbeth/m_left_handed_crouch_start_2.fbxanim");
		s_crouch_from_walk:add(sneaking_distance(1.5), "macbeth/m_left_handed_crouch_start_stab_pose_2.fbxanim");
		s_crouch_from_walk:add(sneaking_distance(0), "macbeth/m_left_handed_crouch_start_stab_pose_2.fbxanim");
		--s_crouch_from_walk:add("macbeth/m_walk_start_crouching.fbxanim"); 
		table.insert(crouching, s_crouch_from_walk);
		--}
		
		--{ Animation: s_crouch_from_turn_left
		s_crouch_from_turn_left = addState(crouch+stand, "s_crouch_from_turn_left");
		s_crouch_from_turn_left:from(s_walk_start_turning_left_crouching, -100);
		--s_crouch_from_turn_left:from(s_crouch_from_turn_left);
		s_crouch_from_turn_left:synchronizedStartTimeGroup(26);
		s_crouch_from_turn_left:speedFactor(0.7);
		s_crouch_from_turn_left:blendTime(300);
		s_crouch_from_turn_left:loop(false);
		--s_crouch_from_turn_left:add("macbeth/m_crouch_stand_turn_left.fbxanim");
		
		s_crouch_from_turn_left:add(sneaking_distance(3000), "macbeth/m_crouch_stand_turn_left.fbxanim");
		s_crouch_from_turn_left:add(sneaking_distance(3.0), "macbeth/m_crouch_stand_turn_left.fbxanim");
		s_crouch_from_turn_left:add(sneaking_distance(1.5), "macbeth/m_crouch_stand_turn_left_stab_pose.fbxanim");
		s_crouch_from_turn_left:add(sneaking_distance(0), "macbeth/m_crouch_stand_turn_left_stab_pose.fbxanim");
		--s_crouch_from_turn_left:addFinishedEvent("EventAnimTurnComplete");  
		--s_crouch_from_turn_left:addExitEvent("EventAnimTurnComplete");
		--s_crouch_from_turn_left:add("macbeth/m_crouch_start_walk_turn_left.fbxanim");
		table.insert(crouching, s_crouch_from_turn_left);
		table.insert(turn_crouching, s_crouch_from_turn_left);
		--}
		
		--{ Animation: s_crouch_from_turn_right
		s_crouch_from_turn_right = addState(crouch+stand, "s_crouch_from_turn_right");
		s_crouch_from_turn_right:from(s_walk_start_turning_right_crouching, -100);
		--s_crouch_from_turn_right:from(s_crouch_from_turn_right);
		s_crouch_from_turn_right:synchronizedStartTimeGroup(25);  
		s_crouch_from_turn_right:speedFactor(0.7);
		s_crouch_from_turn_right:blendTime(300);
		s_crouch_from_turn_right:loop(false); 
		s_crouch_from_turn_right:add("macbeth/m_crouch_stand_turn_right.fbxanim"); 
		
		s_crouch_from_turn_right:add(sneaking_distance(3000), "macbeth/m_crouch_stand_turn_right.fbxanim");
		s_crouch_from_turn_right:add(sneaking_distance(3.0), "macbeth/m_crouch_stand_turn_right.fbxanim");
		s_crouch_from_turn_right:add(sneaking_distance(1.5), "macbeth/m_crouch_stand_turn_right_stab_pose.fbxanim");
		s_crouch_from_turn_right:add(sneaking_distance(0), "macbeth/m_crouch_stand_turn_right_stab_pose.fbxanim");
		--s_crouch_from_turn_right:addFinishedEvent("EventAnimTurnComplete");
		--s_crouch_from_turn_right:addExitEvent("EventAnimTurnComplete");
		--s_crouch_from_turn_right:add("macbeth/m_crouch_start_walk_turn_right.fbxanim");
		table.insert(crouching, s_crouch_from_turn_right);
		table.insert(turn_crouching, s_crouch_from_turn_right);
		--}
		
		--{ Animation: s_crouch_end
		s_crouch_end = addState(stand, "s_crouch_end");
		s_crouch_end:from(s_crouch_start);
		s_crouch_end:from(s_crouch_loop); 
		s_crouch_end:from(crouching);
		--s_crouch_end:from(s_crouch_from_walk); 
		s_crouch_end:from(s_land); 
		--s_crouch_end:from(falling);
		-- s_crouch_end:from(on_ledge);
		s_crouch_end:blendTime(200);
		s_crouch_end:loop(false);
		s_crouch_end:synchronizedStartTimeGroup(126);
		-- s_crouch_end:add("crouch2_end.fbxanim");
		--s_crouch_end:add("stand_up_from_crouch.fbxanim");
		--s_crouch_end:add("macbeth/m_crouch_end.fbxanim");
		s_crouch_end:add("macbeth/m_left_handed_crouch_end.fbxanim");
	
		table.insert(standing, s_crouch_end);
		--} 
		
--{	DRAG CORPSE


	--{HEAD
	 
		--{ Animation: s_lift_corpse
		s_lift_corpse = addState(lift_corpse+drag_corpse, "s_lift_corpse"); 
		s_lift_corpse:blendTime(300);
		s_lift_corpse:loop(false); 
		--s_lift_corpse:restart(true);
		--s_lift_corpse:speedFactor(1.3);
		s_lift_corpse:absoluteRootMotionPosition(true); 
		s_lift_corpse:absoluteRootMotionRotation(true);
		s_lift_corpse:addFinishedEvent("EventAnimLiftEnded");
		-- s_lift_corpse:add(enemy_dir(91), "macbeth/lift_corpse_1_left.fbxanim");
		-- s_lift_corpse:add(enemy_dir(90), "macbeth/lift_corpse_1_left.fbxanim");
		-- s_lift_corpse:add(enemy_dir(0), "macbeth/lift_corpse_1.fbxanim");
		-- s_lift_corpse:add(enemy_dir(-90), "macbeth/lift_corpse_1_right.fbxanim");
		-- s_lift_corpse:add(enemy_dir(-91), "macbeth/lift_corpse_1_right.fbxanim");
		s_lift_corpse:add(enemy_dir(0), "macbeth/lift_corpse_1.fbxanim");
		--s_lift_corpse:add(enemy_dir(0), "macbeth/corpse_pickup_feet_01.fbxanim");
		--s_lift_corpse:add(enemy_dir(0), "macbeth/pick_up_corpse_start_moving.fbxanim");
		
		table.insert(dragging_corpse, s_lift_corpse);
		--}
		
		--{ Animation: s_drag_corpse_idle
		s_drag_corpse_idle = addState(drag_corpse, "s_drag_corpse_idle"); 
		s_drag_corpse_idle:blendTime(300);
		s_drag_corpse_idle:loopBlendTime(600);
		s_drag_corpse_idle:loop(true);
		s_drag_corpse_idle:add("macbeth/corpse_drag_stand.fbxanim");
		--s_drag_corpse_idle:add("macbeth/corpse_drag_stand_feet.fbxanim");
		table.insert(dragging_corpse, s_drag_corpse_idle);
		--}
		
		--{ Animation: s_drag_corpse_start
		s_drag_corpse_start = addState(drag_corpse+run, "s_drag_corpse_start");
		--s_drag_corpse_start:from(crouching);
		s_drag_corpse_start:blendTime(300);
		s_drag_corpse_start:speedFactor(1.15);
		s_drag_corpse_start:loop(false);
		s_drag_corpse_start:add("macbeth/corpse_drag_start.fbxanim");
		--s_drag_corpse_start:add("macbeth/corpse_drag_start_feet.fbxanim");
		table.insert(dragging_corpse, s_drag_corpse_start);
		--}
		
		--{ Animation: s_drag_corpse_loop 
		s_drag_corpse_loop = addState(drag_corpse+run, "s_drag_corpse_loop");
		s_drag_corpse_loop:from(s_drag_corpse_start);
		s_drag_corpse_loop:blendTime(300);
		s_drag_corpse_loop:loopBlendTime(300);
		s_drag_corpse_loop:speedFactor(1.15);
		s_drag_corpse_loop:loop(true);
		s_drag_corpse_loop:add("macbeth/corpse_drag_loop.fbxanim"); 
		--s_drag_corpse_loop:add("macbeth/corpse_drag_loop_feet.fbxanim"); 
		table.insert(dragging_corpse, s_drag_corpse_loop);
		--}
		
		-- --{ Animation: s_drag_corpse_end
		-- s_drag_corpse_end = addState(drag_corpse, "s_drag_corpse_end");
		-- s_drag_corpse_end:from(s_drag_corpse_start);
		-- s_drag_corpse_end:from(s_drag_corpse_loop);
		-- s_drag_corpse_end:from(s_drag_corpse_turn_left);
		-- s_drag_corpse_end:from(s_drag_corpse_turn_right);
		-- s_drag_corpse_end:blendTime(300); 
		-- s_drag_corpse_end:loop(false);
		-- s_drag_corpse_end:add("macbeth/corpse_drag_end.fbxanim");
		-- table.insert(dragging_corpse, s_drag_corpse_end); 
		-- --}
		
		--{ Animation: s_drop_corpse
		s_drop_corpse = addState(drag_corpse+drop_corpse, "s_drop_corpse");
		s_drop_corpse:blendTime(300);
		s_drop_corpse:speedFactor(2);
		s_drop_corpse:loop(false);
		s_drop_corpse:add("macbeth/drop_corpse_1.fbxanim");
		--s_drop_corpse:add("macbeth/corpse_drop_feet_01.fbxanim");
		table.insert(standing, s_drop_corpse); 
		--}
		
	--}
	--{FEET
	
		--{ Animation: s_lift_corpse_feet
		s_lift_corpse_feet = addState(lift_corpse+drag_corpse+feet_drag, "s_lift_corpse_feet"); 
		s_lift_corpse_feet:blendTime(300); 
		s_lift_corpse_feet:speedFactor(2); 
		s_lift_corpse_feet:loop(false); 
		s_lift_corpse_feet:absoluteRootMotionPosition(true); 
		s_lift_corpse_feet:absoluteRootMotionRotation(true);
		s_lift_corpse_feet:addFinishedEvent("EventAnimLiftEnded");
		s_lift_corpse_feet:add(enemy_dir(0), "macbeth/corpse_pickup_feet_01.fbxanim"); 
		table.insert(dragging_corpse, s_lift_corpse_feet);
		--}
		
		--{ Animation: s_drag_corpse_feet_idle
		s_drag_corpse_feet_idle = addState(drag_corpse+feet_drag, "s_drag_corpse_feet_idle"); 
		s_drag_corpse_feet_idle:blendTime(600);
		s_drag_corpse_feet_idle:loopBlendTime(600);
		s_drag_corpse_feet_idle:loop(true);
		s_drag_corpse_feet_idle:add("macbeth/corpse_drag_stand_feet.fbxanim");
		table.insert(dragging_corpse, s_drag_corpse_feet_idle);
		--}
		
		--{ Animation: s_drag_corpse_feet_start
		s_drag_corpse_feet_start = addState(drag_corpse+run+feet_drag, "s_drag_corpse_feet_start");
		--s_drag_corpse_feet_start:from(crouching);
		s_drag_corpse_feet_start:blendTime(300);
		s_drag_corpse_feet_start:speedFactor(1.15);
		s_drag_corpse_feet_start:loop(false); 
		s_drag_corpse_feet_start:add("macbeth/corpse_drag_start_feet.fbxanim");
		table.insert(dragging_corpse, s_drag_corpse_feet_start);
		--}
		
		--{ Animation: s_drag_corpse_feet_loop 
		s_drag_corpse_feet_loop = addState(drag_corpse+run+feet_drag, "s_drag_corpse_feet_loop");
		s_drag_corpse_feet_loop:from(s_drag_corpse_feet_start);
		s_drag_corpse_feet_loop:blendTime(300);
		s_drag_corpse_feet_loop:loopBlendTime(300);
		s_drag_corpse_feet_loop:speedFactor(1.15);
		s_drag_corpse_feet_loop:loop(true);
		s_drag_corpse_feet_loop:add("macbeth/corpse_drag_loop_feet.fbxanim"); 
		table.insert(dragging_corpse, s_drag_corpse_feet_loop);
		--}
		
		--{ Animation: s_drop_corpse_feet
		s_drop_corpse_feet = addState(drag_corpse+drop_corpse+feet_drag, "s_drop_corpse_feet");
		s_drop_corpse_feet:blendTime(300);
		s_drop_corpse_feet:loop(false);
		s_drop_corpse_feet:add("macbeth/corpse_drop_feet_01.fbxanim"); 
		table.insert(standing, s_drop_corpse_feet); 
		--}
	--}
--}


		--{ BOW ANIMS
		
						-- --{ Animation: s_run_combat_start
						-- s_run_combat_start = addState(run+combat, "s_run_combat_start");
						-- s_run_combat_start:blendTime(400);
						-- s_run_combat_start:loop(false);
						-- s_run_combat_start:add(run_direction(0), "run_start_combat_front_new.fbxanim");
						-- -- s_run_combat_start:add(run_direction(0), "run_start_combat_test.fbxanim");
						-- table.insert(running, s_run_combat_start);
						-- --}


						-- --{ Animation: s_run_combat_start_turning_left
						-- s_run_combat_start_turning_left = addState(run+combat+turn_left, "s_run_combat_start_turning_left");
						-- s_run_combat_start_turning_left:blendTime(400);
						-- s_run_combat_start_turning_left:loop(false);
						-- s_run_combat_start_turning_left:add(run_direction(0), "run_start_turning_left_combat_front.fbxanim");
						-- s_run_combat_start_turning_left:addFinishedEvent("EventAnimTurnComplete");
						-- s_run_combat_start_turning_left:addExitEvent("EventAnimTurnComplete");
						-- table.insert(running, s_run_combat_start_turning_left);
						-- --}

						-- --{ Animation: s_run_combat_start_turning_right
						-- s_run_combat_start_turning_right = addState(run+combat+turn_right, "s_run_combat_start_turning_right");
						-- s_run_combat_start_turning_right:blendTime(400);
						-- s_run_combat_start_turning_right:loop(false);
						-- s_run_combat_start_turning_right:add(run_direction(0), "run_start_turning_right_combat_front.fbxanim");
						-- s_run_combat_start_turning_right:addFinishedEvent("EventAnimTurnComplete");
						-- s_run_combat_start_turning_right:addExitEvent("EventAnimTurnComplete");
						-- table.insert(running, s_run_combat_start_turning_right);
						-- --}


						-- --{ Animation: s_run_combat
						-- s_run_combat = addState(run+combat, "s_run_combat");
						-- s_run_combat:from(s_run_combat_start);
						-- s_run_combat:blendTime(300);
						-- s_run_combat:loopBlendTime(300);
						-- s_run_combat:synchronizedStartTimeGroup(5);
						-- s_run_combat:loop(true);
						-- -- s_run_combat:add(run_direction(-180), "run_combat_back_base.fbxanim");
						-- -- s_run_combat:add(run_direction(-90), "run_combat_left_base.fbxanim");
						-- s_run_combat:add(run_direction(0), "run_combat_front_new.fbxanim");
						-- -- s_run_combat:add(run_direction(0), "run_combat_front_base.fbxanim");
						-- -- s_run_combat:add(run_direction(90), "run_combat_right_base.fbxanim");
						-- -- s_run_combat:add(run_direction(180), "run_combat_back_base.fbxanim");
						-- table.insert(running, s_run_combat);
						-- --}

						-- --{ Animation: s_fall_combat_base
						-- s_fall_combat_base = addState(fall+combat, "s_fall_combat_base");
						-- s_fall_combat_base:blendTime(200);
						-- s_fall_combat_base:loop(false);
						-- s_fall_combat_base:add("jump_combat_base.fbxanim");
						-- table.insert(falling, s_fall_combat_base);
						-- --}
						-- --{ Animation: s_fall_combat_turn_right_base
						-- s_fall_combat_turn_right_base = addState(fall+combat+turn_right, "s_fall_combat_turn_right_base");
						-- s_fall_combat_turn_right_base:blendTime(200);
						-- s_fall_combat_turn_right_base:loop(false);
						-- s_fall_combat_turn_right_base:add("jump_combat_turn_right_base.fbxanim");
						-- s_fall_combat_turn_right_base:addFinishedEvent("EventAnimTurnComplete");
						-- s_fall_combat_turn_right_base:addExitEvent("EventAnimTurnComplete");
						-- table.insert(falling, s_fall_combat_turn_right_base);
						-- --}
						-- --{ Animation: s_fall_combat_turn_left_base
						-- s_fall_combat_turn_left_base = addState(fall+combat+turn_left, "s_fall_combat_turn_left_base");
						-- s_fall_combat_turn_left_base:blendTime(200);
						-- s_fall_combat_turn_left_base:loop(false);
						-- s_fall_combat_turn_left_base:add("jump_combat_turn_left_base.fbxanim");
						-- s_fall_combat_turn_left_base:addFinishedEvent("EventAnimTurnComplete");
						-- s_fall_combat_turn_left_base:addExitEvent("EventAnimTurnComplete");
						-- table.insert(falling, s_fall_combat_turn_left_base);
						-- --}


						-- --{ Animation: s_jump_combat_base
						-- s_jump_combat_base = addState(jump+combat, "s_jump_combat_base");
						-- s_jump_combat_base:blendTime(200);
						-- s_jump_combat_base:loop(false);
						-- s_jump_combat_base:add("jump_combat_base.fbxanim");
						-- table.insert(jumping, s_jump_combat_base);
						-- --}
						-- --{ Animation: s_jump_combat_turn_right_base
						-- s_jump_combat_turn_right_base = addState(jump+combat+turn_right, "s_jump_combat_turn_right_base");
						-- s_jump_combat_turn_right_base:blendTime(200);
						-- s_jump_combat_turn_right_base:loop(false);
						-- s_jump_combat_turn_right_base:add("jump_combat_turn_right_base.fbxanim");
						-- s_jump_combat_turn_right_base:addFinishedEvent("EventAnimTurnComplete");
						-- s_jump_combat_turn_right_base:addExitEvent("EventAnimTurnComplete");
						-- table.insert(jumping, s_jump_combat_turn_right_base);
						-- --}
						-- --{ Animation: s_jump_combat_turn_left_base
						-- s_jump_combat_turn_left_base = addState(jump+combat+turn_left, "s_jump_combat_turn_left_base");
						-- s_jump_combat_turn_left_base:blendTime(200);
						-- s_jump_combat_turn_left_base:loop(false);
						-- s_jump_combat_turn_left_base:add("jump_combat_turn_left_base.fbxanim");
						-- s_jump_combat_turn_left_base:addFinishedEvent("EventAnimTurnComplete");
						-- s_jump_combat_turn_left_base:addExitEvent("EventAnimTurnComplete");
						-- table.insert(jumping, s_jump_combat_turn_left_base);
						-- --}


						-- --{ Animation: s_run_combat_base
						-- s_run_combat_base = addState(run+combat+additive, "s_run_combat_base");
						-- -- s_run_combat_base:blendTime(0);
						-- s_run_combat_base:blendTime(400);
						-- s_run_combat_base:synchronizedStartTimeGroup(5);
						-- s_run_combat_base:loop(true);
						-- -- s_run_combat_base:loop(false);
						-- s_run_combat_base:add(run_direction(-180), "run_combat_back_base.fbxanim");
						-- s_run_combat_base:add(run_direction(-90), "run_combat_left_base.fbxanim");
						-- s_run_combat_base:add(run_direction(0), "run_combat_front_base.fbxanim");
						-- s_run_combat_base:add(run_direction(0), "run_combat_front_base.fbxanim");
						-- s_run_combat_base:add(run_direction(90), "run_combat_right_base.fbxanim");
						-- s_run_combat_base:add(run_direction(180), "run_combat_back_base.fbxanim");

						-- -- s_run_combat_base:add(run_direction(-180), "run_combat_turn_right_back_base.fbxanim");
						-- -- s_run_combat_base:add(run_direction(-90), "run_combat_turn_right_left_base.fbxanim");
						-- -- s_run_combat_base:add(run_direction(0), "run_combat_turn_right_front_base.fbxanim");
						-- -- s_run_combat_base:add(run_direction(0), "run_combat_turn_right_front_base.fbxanim");
						-- -- s_run_combat_base:add(run_direction(90), "run_combat_turn_right_right_base.fbxanim");
						-- -- s_run_combat_base:add(run_direction(180), "run_combat_turn_right_back_base.fbxanim");
						-- -- s_run_combat_base:add(run_direction(-180), "run_combat_turn_left_back_base.fbxanim");
						-- -- s_run_combat_base:add(run_direction(-90), "run_combat_turn_left_left_base.fbxanim");
						-- -- s_run_combat_base:add(run_direction(0), "run_combat_turn_left_front_base.fbxanim");
						-- -- s_run_combat_base:add(run_direction(0), "run_combat_turn_left_front_base.fbxanim");
						-- -- s_run_combat_base:add(run_direction(90), "run_combat_turn_left_right_base.fbxanim");
						-- -- s_run_combat_base:add(run_direction(180), "run_combat_turn_left_back_base.fbxanim");
						-- table.insert(running, s_run_combat_base);
						-- --}



						-- --{ Animation: s_run_combat_turn_right_base
						-- s_run_combat_turn_right_base = addState(run+combat+additive+turn_right, "s_run_combat_turn_right_base");
						-- s_run_combat_turn_right_base:blendTime(200);
						-- s_run_combat_turn_right_base:loop(false);
						-- s_run_combat_turn_right_base:add(run_direction(-180), "run_combat_turn_right_back_base.fbxanim");
						-- s_run_combat_turn_right_base:add(run_direction(-90), "run_combat_turn_right_left_base.fbxanim");
						-- s_run_combat_turn_right_base:add(run_direction(0), "run_combat_turn_right_front_base.fbxanim");
						-- s_run_combat_turn_right_base:add(run_direction(0), "run_combat_turn_right_front_base.fbxanim");
						-- s_run_combat_turn_right_base:add(run_direction(90), "run_combat_turn_right_right_base.fbxanim");
						-- s_run_combat_turn_right_base:add(run_direction(180), "run_combat_turn_right_back_base.fbxanim");
						-- table.insert(running, s_run_combat_turn_right_base);

						-- s_run_combat_turn_right_base:addFinishedEvent("EventAnimTurnComplete");
						-- s_run_combat_turn_right_base:addExitEvent("EventAnimTurnComplete");
						-- --}

						-- --{ Animation: s_run_combat_turn_left_base
						-- s_run_combat_turn_left_base = addState(run+combat+additive+turn_left, "s_run_combat_turn_left_base");
						-- s_run_combat_turn_left_base:blendTime(200);
						-- s_run_combat_turn_left_base:loop(false);
						-- s_run_combat_turn_left_base:add(run_direction(-180), "run_combat_turn_left_back_base.fbxanim");
						-- s_run_combat_turn_left_base:add(run_direction(-90), "run_combat_turn_left_left_base.fbxanim");
						-- s_run_combat_turn_left_base:add(run_direction(0), "run_combat_turn_left_front_base.fbxanim");
						-- s_run_combat_turn_left_base:add(run_direction(0), "run_combat_turn_left_front_base.fbxanim");
						-- s_run_combat_turn_left_base:add(run_direction(90), "run_combat_turn_left_right_base.fbxanim");
						-- s_run_combat_turn_left_base:add(run_direction(180), "run_combat_turn_left_back_base.fbxanim");
						-- table.insert(running, s_run_combat_turn_left_base);

						-- s_run_combat_turn_left_base:addFinishedEvent("EventAnimTurnComplete");
						-- s_run_combat_turn_left_base:addExitEvent("EventAnimTurnComplete");
						-- --}

						-- --{ Animation: s_temp_run_combat_base
						-- s_temp_run_combat_base = addState(run+combat+additive, "s_temp_run_combat_base");
						-- s_temp_run_combat_base:from(s_run_combat_turn_right_base);
						-- s_temp_run_combat_base:from(s_run_combat_turn_left_base);
						-- s_temp_run_combat_base:synchronizedStartTimeGroup(5);
						-- s_temp_run_combat_base:loop(true);
						-- s_temp_run_combat_base:add(run_direction(-180), "run_combat_back_base.fbxanim");
						-- s_temp_run_combat_base:add(run_direction(-90), "run_combat_left_base.fbxanim");
						-- s_temp_run_combat_base:add(run_direction(0), "run_combat_front_base.fbxanim");
						-- s_temp_run_combat_base:add(run_direction(0), "run_combat_front_base.fbxanim");
						-- s_temp_run_combat_base:add(run_direction(90), "run_combat_right_base.fbxanim");
						-- s_temp_run_combat_base:add(run_direction(180), "run_combat_back_base.fbxanim");

						-- table.insert(running, s_temp_run_combat_base);
						-- --}

						-- --{ Animation: s_stand_loading
						-- s_stand_loading = addState(stand+load, "s_stand_loading");
						-- s_stand_loading:blendTime(300);
						-- s_stand_loading:loop(false);

						-- s_stand_loading:add(aim_horizontal(-45.0), aim(90.0), "stand_loading_right_up_90.fbxanim");
						-- s_stand_loading:add(aim_horizontal(-45.0), aim(45.0), "stand_loading_right_up_45.fbxanim");
						-- s_stand_loading:add(aim_horizontal(-45.0), aim(0.0), "stand_loading_right.fbxanim");
						-- s_stand_loading:add(aim_horizontal(-45.0), aim(-45.0), "stand_loading_right_down_45.fbxanim");
						-- s_stand_loading:add(aim_horizontal(-45.0), aim(-72.0), "stand_loading_right_down_80.fbxanim");

						-- s_stand_loading:add(aim_horizontal(0.0), aim(90.0), "stand_loading_up_90.fbxanim");
						-- s_stand_loading:add(aim_horizontal(0.0), aim(45.0), "stand_loading_up_45.fbxanim"); -- THIS
						-- s_stand_loading:add(aim_horizontal(0.0), aim(0.0), "stand_loading_center.fbxanim");
						-- s_stand_loading:add(aim_horizontal(0.0), aim(-45.0), "stand_loading_down_45.fbxanim"); -- THIS
						-- s_stand_loading:add(aim_horizontal(0.0), aim(-72.0), "stand_loading_down_80.fbxanim");

						-- s_stand_loading:add(aim_horizontal(45.0), aim(90.0), "stand_loading_left_up_90.fbxanim");
						-- s_stand_loading:add(aim_horizontal(45.0), aim(45.0), "stand_loading_left_up_45.fbxanim");
						-- s_stand_loading:add(aim_horizontal(45.0), aim(0.0), "stand_loading_left.fbxanim");
						-- s_stand_loading:add(aim_horizontal(45.0), aim(-45.0), "stand_loading_left_down_45.fbxanim");
						-- s_stand_loading:add(aim_horizontal(45.0), aim(-72.0), "stand_loading_left_down_80.fbxanim");
						-- table.insert(standing, s_stand_loading);
						-- table.insert(loading, s_stand_loading);
						-- --}

						-- --{ Animation: s_stand_loading_loop
						-- s_stand_loading_loop = addState(stand+load, "s_stand_loading_loop");
						-- s_stand_loading_loop:from(loading);
						-- s_stand_loading_loop:blendTime(300);
						-- s_stand_loading_loop:loop(true);

						-- s_stand_loading_loop:add(aim_horizontal(-45.0), aim(90.0), "stand_loading_loop_right_up_90.fbxanim");
						-- s_stand_loading_loop:add(aim_horizontal(-45.0), aim(45.0), "stand_loading_loop_right_up_45.fbxanim");
						-- s_stand_loading_loop:add(aim_horizontal(-45.0), aim(0.0), "stand_loading_loop_right.fbxanim");
						-- s_stand_loading_loop:add(aim_horizontal(-45.0), aim(-45.0), "stand_loading_loop_right_down_45.fbxanim");
						-- s_stand_loading_loop:add(aim_horizontal(-45.0), aim(-72.0), "stand_loading_loop_right_down_80.fbxanim");

						-- s_stand_loading_loop:add(aim_horizontal(0.0), aim(90.0), "stand_loading_loop_up_90.fbxanim");
						-- s_stand_loading_loop:add(aim_horizontal(0.0), aim(45.0), "stand_loading_loop_up_45.fbxanim"); -- THIS
						-- s_stand_loading_loop:add(aim_horizontal(0.0), aim(0.0), "stand_loading_loop_center.fbxanim");
						-- s_stand_loading_loop:add(aim_horizontal(0.0), aim(-45.0), "stand_loading_loop_down_45.fbxanim"); -- THIS
						-- s_stand_loading_loop:add(aim_horizontal(0.0), aim(-72.0), "stand_loading_loop_down_80.fbxanim");

						-- s_stand_loading_loop:add(aim_horizontal(45.0), aim(90.0), "stand_loading_loop_left_up_90.fbxanim");
						-- s_stand_loading_loop:add(aim_horizontal(45.0), aim(45.0), "stand_loading_loop_left_up_45.fbxanim");
						-- s_stand_loading_loop:add(aim_horizontal(45.0), aim(0.0), "stand_loading_loop_left.fbxanim");
						-- s_stand_loading_loop:add(aim_horizontal(45.0), aim(-45.0), "stand_loading_loop_left_down_45.fbxanim");
						-- s_stand_loading_loop:add(aim_horizontal(45.0), aim(-72.0), "stand_loading_loop_left_down_80.fbxanim");
						-- table.insert(standing, s_stand_loading_loop);
						-- table.insert(loading, s_stand_loading_loop);
						-- --}

						-- --{ Animation: s_stand_start_left_loading
						-- s_stand_start_left_loading = addState(stand+load+turn_left, "s_stand_start_left_loading");
						-- s_stand_start_left_loading:blendTime(300);
						-- s_stand_start_left_loading:loop(false);

						-- s_stand_start_left_loading:add(aim_horizontal(-45.0), aim(90.0), "stand_start_left_loading_right_up_90.fbxanim");
						-- s_stand_start_left_loading:add(aim_horizontal(-45.0), aim(45.0), "stand_start_left_loading_right_up_45.fbxanim");
						-- s_stand_start_left_loading:add(aim_horizontal(-45.0), aim(0.0), "stand_start_left_loading_right.fbxanim");
						-- s_stand_start_left_loading:add(aim_horizontal(-45.0), aim(-45.0), "stand_start_left_loading_right_down_45.fbxanim");
						-- s_stand_start_left_loading:add(aim_horizontal(-45.0), aim(-72.0), "stand_start_left_loading_right_down_80.fbxanim");

						-- s_stand_start_left_loading:add(aim_horizontal(0.0), aim(90.0), "stand_start_left_loading_up_90.fbxanim");
						-- s_stand_start_left_loading:add(aim_horizontal(0.0), aim(45.0), "stand_start_left_loading_up_45.fbxanim");
						-- s_stand_start_left_loading:add(aim_horizontal(0.0), aim(0.0), "stand_start_left_loading_center.fbxanim");
						-- s_stand_start_left_loading:add(aim_horizontal(0.0), aim(-45.0), "stand_start_left_loading_down_45.fbxanim");
						-- s_stand_start_left_loading:add(aim_horizontal(0.0), aim(-72.0), "stand_start_left_loading_down_80.fbxanim");

						-- s_stand_start_left_loading:add(aim_horizontal(45.0), aim(90.0), "stand_start_left_loading_left_up_90.fbxanim");
						-- s_stand_start_left_loading:add(aim_horizontal(45.0), aim(45.0), "stand_start_left_loading_left_up_45.fbxanim");
						-- s_stand_start_left_loading:add(aim_horizontal(45.0), aim(0.0), "stand_start_left_loading_left.fbxanim");
						-- s_stand_start_left_loading:add(aim_horizontal(45.0), aim(-45.0), "stand_start_left_loading_left_down_45.fbxanim");
						-- s_stand_start_left_loading:add(aim_horizontal(45.0), aim(-72.0), "stand_start_left_loading_left_down_80.fbxanim");

						-- s_stand_start_left_loading:addExitEvent("EventAnimTurnComplete");
						-- s_stand_start_left_loading:addFinishedEvent("EventAnimTurnComplete");
						-- table.insert(standing, s_stand_start_left_loading);
						-- table.insert(loading, s_stand_start_left_loading);
						-- --}

						-- --{ Animation: s_spin_start_left_loading
						-- s_spin_start_left_loading = addState(stand+load+turn_left, "s_spin_start_left_loading");
						-- s_spin_start_left_loading:blendTime(300);
						-- s_spin_start_left_loading:from(loading);
						-- -- s_spin_start_left_loading:restart(true);
						-- s_spin_start_left_loading:loop(false);

						-- s_spin_start_left_loading:add(aim_horizontal(-45.0), aim(90.0), "spin_start_left_loading_right_up_90.fbxanim");
						-- s_spin_start_left_loading:add(aim_horizontal(-45.0), aim(45.0), "spin_start_left_loading_right_up_45.fbxanim");
						-- s_spin_start_left_loading:add(aim_horizontal(-45.0), aim(0.0), "spin_start_left_loading_right.fbxanim");
						-- s_spin_start_left_loading:add(aim_horizontal(-45.0), aim(-45.0), "spin_start_left_loading_right_down_45.fbxanim");
						-- s_spin_start_left_loading:add(aim_horizontal(-45.0), aim(-72.0), "spin_start_left_loading_right_down_80.fbxanim");

						-- s_spin_start_left_loading:add(aim_horizontal(0.0), aim(90.0), "spin_start_left_loading_up_90.fbxanim");
						-- s_spin_start_left_loading:add(aim_horizontal(0.0), aim(45.0), "spin_start_left_loading_up_45.fbxanim");
						-- s_spin_start_left_loading:add(aim_horizontal(0.0), aim(0.0), "spin_start_left_loading_center.fbxanim");
						-- s_spin_start_left_loading:add(aim_horizontal(0.0), aim(-45.0), "spin_start_left_loading_down_45.fbxanim");
						-- s_spin_start_left_loading:add(aim_horizontal(0.0), aim(-72.0), "spin_start_left_loading_down_80.fbxanim");

						-- s_spin_start_left_loading:add(aim_horizontal(45.0), aim(90.0), "spin_start_left_loading_left_up_90.fbxanim");
						-- s_spin_start_left_loading:add(aim_horizontal(45.0), aim(45.0), "spin_start_left_loading_left_up_45.fbxanim");
						-- s_spin_start_left_loading:add(aim_horizontal(45.0), aim(0.0), "spin_start_left_loading_left.fbxanim");
						-- s_spin_start_left_loading:add(aim_horizontal(45.0), aim(-45.0), "spin_start_left_loading_left_down_45.fbxanim");
						-- s_spin_start_left_loading:add(aim_horizontal(45.0), aim(-72.0), "spin_start_left_loading_left_down_80.fbxanim");
						-- table.insert(standing, s_spin_start_left_loading);
						-- table.insert(loading, s_spin_start_left_loading);
						-- --}

						-- --{ Animation: s_spin_left_loading
						-- s_spin_left_loading = addState(stand+load+turn_left, "s_spin_left_loading");
						-- s_spin_left_loading:blendTime(300);
						-- s_spin_left_loading:loopBlendTime(300);
						-- s_spin_left_loading:from(s_spin_start_left_loading);
						-- s_spin_left_loading:restart(true);
						-- s_spin_left_loading:loop(true);

						-- s_spin_left_loading:add(aim_horizontal(-45.0), aim(90.0), "spin_left_loading_right_up_90.fbxanim");
						-- s_spin_left_loading:add(aim_horizontal(-45.0), aim(45.0), "spin_left_loading_right_up_45.fbxanim");
						-- s_spin_left_loading:add(aim_horizontal(-45.0), aim(0.0), "spin_left_loading_right.fbxanim");
						-- s_spin_left_loading:add(aim_horizontal(-45.0), aim(-45.0), "spin_left_loading_right_down_45.fbxanim");
						-- s_spin_left_loading:add(aim_horizontal(-45.0), aim(-72.0), "spin_left_loading_right_down_80.fbxanim");

						-- s_spin_left_loading:add(aim_horizontal(0.0), aim(90.0), "spin_left_loading_up_90.fbxanim");
						-- s_spin_left_loading:add(aim_horizontal(0.0), aim(45.0), "spin_left_loading_up_45.fbxanim");
						-- s_spin_left_loading:add(aim_horizontal(0.0), aim(0.0), "spin_left_loading_center.fbxanim");
						-- s_spin_left_loading:add(aim_horizontal(0.0), aim(-45.0), "spin_left_loading_down_45.fbxanim");
						-- s_spin_left_loading:add(aim_horizontal(0.0), aim(-72.0), "spin_left_loading_down_80.fbxanim");

						-- s_spin_left_loading:add(aim_horizontal(45.0), aim(90.0), "spin_left_loading_left_up_90.fbxanim");
						-- s_spin_left_loading:add(aim_horizontal(45.0), aim(45.0), "spin_left_loading_left_up_45.fbxanim");
						-- s_spin_left_loading:add(aim_horizontal(45.0), aim(0.0), "spin_left_loading_left.fbxanim");
						-- s_spin_left_loading:add(aim_horizontal(45.0), aim(-45.0), "spin_left_loading_left_down_45.fbxanim");
						-- s_spin_left_loading:add(aim_horizontal(45.0), aim(-72.0), "spin_left_loading_left_down_80.fbxanim");
						-- table.insert(standing, s_spin_left_loading);
						-- table.insert(loading, s_spin_left_loading);
						-- --}

						-- --{ Animation: s_spin_end_left_loading
						-- s_spin_end_left_loading = addState(stand+load, "s_spin_end_left_loading");
						-- s_spin_end_left_loading:blendTime(200);
						-- s_spin_end_left_loading:from(s_spin_left_loading);
						-- s_spin_end_left_loading:from(s_spin_start_left_loading);
						-- -- s_spin_end_left_loading:reend(true);
						-- s_spin_end_left_loading:loop(false);

						-- s_spin_end_left_loading:add(aim_horizontal(-45.0), aim(90.0), "spin_end_left_loading_right_up_90.fbxanim");
						-- s_spin_end_left_loading:add(aim_horizontal(-45.0), aim(45.0), "spin_end_left_loading_right_up_45.fbxanim");
						-- s_spin_end_left_loading:add(aim_horizontal(-45.0), aim(0.0), "spin_end_left_loading_right.fbxanim");
						-- s_spin_end_left_loading:add(aim_horizontal(-45.0), aim(-45.0), "spin_end_left_loading_right_down_45.fbxanim");
						-- s_spin_end_left_loading:add(aim_horizontal(-45.0), aim(-72.0), "spin_end_left_loading_right_down_80.fbxanim");

						-- s_spin_end_left_loading:add(aim_horizontal(0.0), aim(90.0), "spin_end_left_loading_up_90.fbxanim");
						-- s_spin_end_left_loading:add(aim_horizontal(0.0), aim(45.0), "spin_end_left_loading_up_45.fbxanim");
						-- s_spin_end_left_loading:add(aim_horizontal(0.0), aim(0.0), "spin_end_left_loading_center.fbxanim");
						-- s_spin_end_left_loading:add(aim_horizontal(0.0), aim(-45.0), "spin_end_left_loading_down_45.fbxanim");
						-- s_spin_end_left_loading:add(aim_horizontal(0.0), aim(-72.0), "spin_end_left_loading_down_80.fbxanim");

						-- s_spin_end_left_loading:add(aim_horizontal(45.0), aim(90.0), "spin_end_left_loading_left_up_90.fbxanim");
						-- s_spin_end_left_loading:add(aim_horizontal(45.0), aim(45.0), "spin_end_left_loading_left_up_45.fbxanim");
						-- s_spin_end_left_loading:add(aim_horizontal(45.0), aim(0.0), "spin_end_left_loading_left.fbxanim");
						-- s_spin_end_left_loading:add(aim_horizontal(45.0), aim(-45.0), "spin_end_left_loading_left_down_45.fbxanim");
						-- s_spin_end_left_loading:add(aim_horizontal(45.0), aim(-72.0), "spin_end_left_loading_left_down_80.fbxanim");
						-- table.insert(standing, s_spin_end_left_loading);
						-- table.insert(loading, s_spin_end_left_loading);
						-- --}

						-- --{ Animation: s_spin_start_right_loading
						-- s_spin_start_right_loading = addState(stand+load+turn_right, "s_spin_start_right_loading");
						-- s_spin_start_right_loading:blendTime(300);
						-- s_spin_start_right_loading:from(loading);
						-- -- s_spin_start_right_loading:restart(true);
						-- s_spin_start_right_loading:loop(false);

						-- s_spin_start_right_loading:add(aim_horizontal(-45.0), aim(90.0), "spin_start_right_loading_right_up_90.fbxanim");
						-- s_spin_start_right_loading:add(aim_horizontal(-45.0), aim(45.0), "spin_start_right_loading_right_up_45.fbxanim");
						-- s_spin_start_right_loading:add(aim_horizontal(-45.0), aim(0.0), "spin_start_right_loading_right.fbxanim");
						-- s_spin_start_right_loading:add(aim_horizontal(-45.0), aim(-45.0), "spin_start_right_loading_right_down_45.fbxanim");
						-- s_spin_start_right_loading:add(aim_horizontal(-45.0), aim(-72.0), "spin_start_right_loading_right_down_80.fbxanim");

						-- s_spin_start_right_loading:add(aim_horizontal(0.0), aim(90.0), "spin_start_right_loading_up_90.fbxanim");
						-- s_spin_start_right_loading:add(aim_horizontal(0.0), aim(45.0), "spin_start_right_loading_up_45.fbxanim");
						-- s_spin_start_right_loading:add(aim_horizontal(0.0), aim(0.0), "spin_start_right_loading_center.fbxanim");
						-- s_spin_start_right_loading:add(aim_horizontal(0.0), aim(-45.0), "spin_start_right_loading_down_45.fbxanim");
						-- s_spin_start_right_loading:add(aim_horizontal(0.0), aim(-72.0), "spin_start_right_loading_down_80.fbxanim");

						-- s_spin_start_right_loading:add(aim_horizontal(45.0), aim(90.0), "spin_start_right_loading_left_up_90.fbxanim");
						-- s_spin_start_right_loading:add(aim_horizontal(45.0), aim(45.0), "spin_start_right_loading_left_up_45.fbxanim");
						-- s_spin_start_right_loading:add(aim_horizontal(45.0), aim(0.0), "spin_start_right_loading_left.fbxanim");
						-- s_spin_start_right_loading:add(aim_horizontal(45.0), aim(-45.0), "spin_start_right_loading_left_down_45.fbxanim");
						-- s_spin_start_right_loading:add(aim_horizontal(45.0), aim(-72.0), "spin_start_right_loading_left_down_80.fbxanim");
						-- table.insert(standing, s_spin_start_right_loading);
						-- table.insert(loading, s_spin_start_right_loading);
						-- --}

						-- --{ Animation: s_spin_right_loading
						-- s_spin_right_loading = addState(stand+load+turn_right, "s_spin_right_loading");
						-- s_spin_right_loading:blendTime(300);
						-- s_spin_right_loading:loopBlendTime(300);
						-- s_spin_right_loading:from(s_spin_start_right_loading);
						-- s_spin_right_loading:restart(true);
						-- s_spin_right_loading:loop(true);

						-- s_spin_right_loading:add(aim_horizontal(-45.0), aim(90.0), "spin_right_loading_right_up_90.fbxanim");
						-- s_spin_right_loading:add(aim_horizontal(-45.0), aim(45.0), "spin_right_loading_right_up_45.fbxanim");
						-- s_spin_right_loading:add(aim_horizontal(-45.0), aim(0.0), "spin_right_loading_right.fbxanim");
						-- s_spin_right_loading:add(aim_horizontal(-45.0), aim(-45.0), "spin_right_loading_right_down_45.fbxanim");
						-- s_spin_right_loading:add(aim_horizontal(-45.0), aim(-72.0), "spin_right_loading_right_down_80.fbxanim");

						-- s_spin_right_loading:add(aim_horizontal(0.0), aim(90.0), "spin_right_loading_up_90.fbxanim");
						-- s_spin_right_loading:add(aim_horizontal(0.0), aim(45.0), "spin_right_loading_up_45.fbxanim");
						-- s_spin_right_loading:add(aim_horizontal(0.0), aim(0.0), "spin_right_loading_center.fbxanim");
						-- s_spin_right_loading:add(aim_horizontal(0.0), aim(-45.0), "spin_right_loading_down_45.fbxanim");
						-- s_spin_right_loading:add(aim_horizontal(0.0), aim(-72.0), "spin_right_loading_down_80.fbxanim");

						-- s_spin_right_loading:add(aim_horizontal(45.0), aim(90.0), "spin_right_loading_left_up_90.fbxanim");
						-- s_spin_right_loading:add(aim_horizontal(45.0), aim(45.0), "spin_right_loading_left_up_45.fbxanim");
						-- s_spin_right_loading:add(aim_horizontal(45.0), aim(0.0), "spin_right_loading_left.fbxanim");
						-- s_spin_right_loading:add(aim_horizontal(45.0), aim(-45.0), "spin_right_loading_left_down_45.fbxanim");
						-- s_spin_right_loading:add(aim_horizontal(45.0), aim(-72.0), "spin_right_loading_left_down_80.fbxanim");
						-- table.insert(standing, s_spin_right_loading);
						-- table.insert(loading, s_spin_right_loading);
						-- --}

						-- --{ Animation: s_spin_end_right_loading
						-- s_spin_end_right_loading = addState(stand+load, "s_spin_end_right_loading");
						-- s_spin_end_right_loading:blendTime(200);
						-- s_spin_end_right_loading:from(s_spin_right_loading);
						-- s_spin_end_right_loading:from(s_spin_start_right_loading);
						-- -- s_spin_end_right_loading:reend(true);
						-- s_spin_end_right_loading:loop(false);

						-- s_spin_end_right_loading:add(aim_horizontal(-45.0), aim(90.0), "spin_end_right_loading_right_up_90.fbxanim");
						-- s_spin_end_right_loading:add(aim_horizontal(-45.0), aim(45.0), "spin_end_right_loading_right_up_45.fbxanim");
						-- s_spin_end_right_loading:add(aim_horizontal(-45.0), aim(0.0), "spin_end_right_loading_right.fbxanim");
						-- s_spin_end_right_loading:add(aim_horizontal(-45.0), aim(-45.0), "spin_end_right_loading_right_down_45.fbxanim");
						-- s_spin_end_right_loading:add(aim_horizontal(-45.0), aim(-72.0), "spin_end_right_loading_right_down_80.fbxanim");

						-- s_spin_end_right_loading:add(aim_horizontal(0.0), aim(90.0), "spin_end_right_loading_up_90.fbxanim");
						-- s_spin_end_right_loading:add(aim_horizontal(0.0), aim(45.0), "spin_end_right_loading_up_45.fbxanim");
						-- s_spin_end_right_loading:add(aim_horizontal(0.0), aim(0.0), "spin_end_right_loading_center.fbxanim");
						-- s_spin_end_right_loading:add(aim_horizontal(0.0), aim(-45.0), "spin_end_right_loading_down_45.fbxanim");
						-- s_spin_end_right_loading:add(aim_horizontal(0.0), aim(-72.0), "spin_end_right_loading_down_80.fbxanim");

						-- s_spin_end_right_loading:add(aim_horizontal(45.0), aim(90.0), "spin_end_right_loading_left_up_90.fbxanim");
						-- s_spin_end_right_loading:add(aim_horizontal(45.0), aim(45.0), "spin_end_right_loading_left_up_45.fbxanim");
						-- s_spin_end_right_loading:add(aim_horizontal(45.0), aim(0.0), "spin_end_right_loading_left.fbxanim");
						-- s_spin_end_right_loading:add(aim_horizontal(45.0), aim(-45.0), "spin_end_right_loading_left_down_45.fbxanim");
						-- s_spin_end_right_loading:add(aim_horizontal(45.0), aim(-72.0), "spin_end_right_loading_left_down_80.fbxanim");
						-- table.insert(standing, s_spin_end_right_loading);
						-- table.insert(loading, s_spin_end_right_loading);
						-- --}

						-- --{ Animation: s_stand_start_right_loading
						-- s_stand_start_right_loading = addState(stand+load+turn_right, "s_stand_start_right_loading");
						-- s_stand_start_right_loading:blendTime(300);
						-- s_stand_start_right_loading:loop(false);

						-- s_stand_start_right_loading:add(aim_horizontal(-45.0), aim(90.0), "stand_start_right_loading_right_up_90.fbxanim");
						-- s_stand_start_right_loading:add(aim_horizontal(-45.0), aim(45.0), "stand_start_right_loading_right_up_45.fbxanim");
						-- s_stand_start_right_loading:add(aim_horizontal(-45.0), aim(0.0), "stand_start_right_loading_right.fbxanim");
						-- s_stand_start_right_loading:add(aim_horizontal(-45.0), aim(-45.0), "stand_start_right_loading_right_down_45.fbxanim");
						-- s_stand_start_right_loading:add(aim_horizontal(-45.0), aim(-72.0), "stand_start_right_loading_right_down_80.fbxanim");

						-- s_stand_start_right_loading:add(aim_horizontal(0.0), aim(90.0), "stand_start_right_loading_up_90.fbxanim");
						-- s_stand_start_right_loading:add(aim_horizontal(0.0), aim(45.0), "stand_start_right_loading_up_45.fbxanim");
						-- s_stand_start_right_loading:add(aim_horizontal(0.0), aim(0.0), "stand_start_right_loading_center.fbxanim");
						-- s_stand_start_right_loading:add(aim_horizontal(0.0), aim(-45.0), "stand_start_right_loading_down_45.fbxanim");
						-- s_stand_start_right_loading:add(aim_horizontal(0.0), aim(-72.0), "stand_start_right_loading_down_80.fbxanim");

						-- s_stand_start_right_loading:add(aim_horizontal(45.0), aim(90.0), "stand_start_right_loading_left_up_90.fbxanim");
						-- s_stand_start_right_loading:add(aim_horizontal(45.0), aim(45.0), "stand_start_right_loading_left_up_45.fbxanim");
						-- s_stand_start_right_loading:add(aim_horizontal(45.0), aim(0.0), "stand_start_right_loading_left.fbxanim");
						-- s_stand_start_right_loading:add(aim_horizontal(45.0), aim(-45.0), "stand_start_right_loading_left_down_45.fbxanim");
						-- s_stand_start_right_loading:add(aim_horizontal(45.0), aim(-72.0), "stand_start_right_loading_left_down_80.fbxanim");
						-- s_stand_start_right_loading:addExitEvent("EventAnimTurnComplete");
						-- s_stand_start_right_loading:addFinishedEvent("EventAnimTurnComplete");
						-- table.insert(standing, s_stand_start_right_loading);
						-- table.insert(loading, s_stand_start_right_loading);
						-- --}

						-- --{ Animation: s_run_end_combat
						-- s_run_end_combat = addState(stand+combat, "s_run_end_combat");
						-- s_run_end_combat:from(running);
						-- s_run_end_combat:blendTime(400);
						-- s_run_end_combat:loop(false);
						-- -- s_run_end_combat:add("run_end_combat_front.fbxanim");
						-- s_run_end_combat:add("stand_combat_start_new.fbxanim");
						-- -- table.insert(standing, s_run_end_combat);
						-- table.insert(in_combat, s_run_end_combat);
						-- --}


						-- --{ Animation: s_stand_combat_start
						-- s_stand_combat_start = addState(stand+combat, "s_stand_combat_start");
						-- s_stand_combat_start:from(standing);
						-- s_stand_combat_start:blendTime(300);
						-- s_stand_combat_start:loop(false);
						-- s_stand_combat_start:add("stand_combat_start.fbxanim");
						-- -- table.insert(standing, s_stand_combat_start);
						-- table.insert(in_combat, s_stand_combat_start);
						-- --}

						-- --{ Animation: s_stand_combat
						-- s_stand_combat = addState(stand+combat, "s_stand_combat");
						-- s_stand_combat:blendTime(300);
						-- s_stand_combat:loopBlendTime(500);
						-- s_stand_combat:loop(true);
						-- -- s_stand_combat:add("stand_combat.fbxanim");
						-- s_stand_combat:add("stand_combat_new.fbxanim");
						-- -- table.insert(standing, s_stand_combat);
						-- table.insert(in_combat, s_stand_combat);
						-- --}

						-- --{ Animation: s_stand_shoot
						-- s_stand_shoot = addState(stand+combat, "s_stand_shoot");
						-- s_stand_shoot:synchronizedStartTimeGroup(10);
						-- -- From definitions later
						-- s_stand_shoot:blendTime(100);
						-- s_stand_shoot:loop(false);

						-- s_stand_shoot:add(aim_horizontal(-45.0), aim(90.0), "stand_shoot_right_up_90.fbxanim");
						-- s_stand_shoot:add(aim_horizontal(-45.0), aim(45.0), "stand_shoot_right_up_45.fbxanim");
						-- s_stand_shoot:add(aim_horizontal(-45.0), aim(0.0), "stand_shoot_right.fbxanim");
						-- s_stand_shoot:add(aim_horizontal(-45.0), aim(-45.0), "stand_shoot_right_down_45.fbxanim");
						-- s_stand_shoot:add(aim_horizontal(-45.0), aim(-72.0), "stand_shoot_right_down_80.fbxanim");

						-- s_stand_shoot:add(aim_horizontal(0.0), aim(90.0), "stand_shoot_up_90.fbxanim");
						-- s_stand_shoot:add(aim_horizontal(0.0), aim(45.0), "stand_shoot_up_45.fbxanim");
						-- s_stand_shoot:add(aim_horizontal(0.0), aim(0.0), "stand_shoot_center.fbxanim");
						-- s_stand_shoot:add(aim_horizontal(0.0), aim(-45.0), "stand_shoot_down_45.fbxanim");
						-- s_stand_shoot:add(aim_horizontal(0.0), aim(-72.0), "stand_shoot_down_80.fbxanim");

						-- s_stand_shoot:add(aim_horizontal(45.0), aim(90.0), "stand_shoot_left_up_90.fbxanim");
						-- s_stand_shoot:add(aim_horizontal(45.0), aim(45.0), "stand_shoot_left_up_45.fbxanim");
						-- s_stand_shoot:add(aim_horizontal(45.0), aim(0.0), "stand_shoot_left.fbxanim");
						-- s_stand_shoot:add(aim_horizontal(45.0), aim(-45.0), "stand_shoot_left_down_45.fbxanim");
						-- s_stand_shoot:add(aim_horizontal(45.0), aim(-72.0), "stand_shoot_left_down_80.fbxanim");

						-- s_stand_shoot:addEnterEvent("EventAnimStaggerTypelethal_attack_1");
						-- -- s_stand_shoot:add(aim(90.0), "stand_shoot_up_90.fbxanim");
						-- -- s_stand_shoot:add(aim(45.0), "stand_shoot_up_45.fbxanim");
						-- -- s_stand_shoot:add(aim(0.0), "stand_shoot_center.fbxanim");
						-- -- s_stand_shoot:add(aim(-45.0), "stand_shoot_down_45.fbxanim");
						-- -- s_stand_shoot:add(aim(-72.0), "stand_shoot_down_80.fbxanim");
						-- -- table.insert(standing, s_stand_shoot);
						-- -- s_stand_shoot:addEnterEvent("EventAnimStaggerTypearrow")
						-- table.insert(in_combat, s_stand_shoot);
						-- --}

						-- --{ Animation: s_stand_shoot_end
						-- s_stand_shoot_end = addState(stand+combat, "s_stand_shoot_end");
						-- s_stand_shoot_end:from(s_stand_shoot);
						-- s_stand_shoot_end:blendTime(100);
						-- s_stand_shoot_end:loop(false);

						-- s_stand_shoot_end:add(aim_horizontal(-45.0), aim(90.0), "stand_shoot_end_right_up_90.fbxanim");
						-- s_stand_shoot_end:add(aim_horizontal(-45.0), aim(45.0), "stand_shoot_end_right_up_45.fbxanim");
						-- s_stand_shoot_end:add(aim_horizontal(-45.0), aim(0.0), "stand_shoot_end_right.fbxanim");
						-- s_stand_shoot_end:add(aim_horizontal(-45.0), aim(-45.0), "stand_shoot_end_right_down_45.fbxanim");
						-- s_stand_shoot_end:add(aim_horizontal(-45.0), aim(-72.0), "stand_shoot_end_right_down_80.fbxanim");

						-- s_stand_shoot_end:add(aim_horizontal(0.0), aim(90.0), "stand_shoot_end_up_90.fbxanim");
						-- s_stand_shoot_end:add(aim_horizontal(0.0), aim(45.0), "stand_shoot_end_up_45.fbxanim");
						-- s_stand_shoot_end:add(aim_horizontal(0.0), aim(0.0), "stand_shoot_end_center.fbxanim");
						-- s_stand_shoot_end:add(aim_horizontal(0.0), aim(-45.0), "stand_shoot_end_down_45.fbxanim");
						-- s_stand_shoot_end:add(aim_horizontal(0.0), aim(-72.0), "stand_shoot_end_down_80.fbxanim");

						-- s_stand_shoot_end:add(aim_horizontal(45.0), aim(90.0), "stand_shoot_end_left_up_90.fbxanim");
						-- s_stand_shoot_end:add(aim_horizontal(45.0), aim(45.0), "stand_shoot_end_left_up_45.fbxanim");
						-- s_stand_shoot_end:add(aim_horizontal(45.0), aim(0.0), "stand_shoot_end_left.fbxanim");
						-- s_stand_shoot_end:add(aim_horizontal(45.0), aim(-45.0), "stand_shoot_end_left_down_45.fbxanim");
						-- s_stand_shoot_end:add(aim_horizontal(45.0), aim(-72.0), "stand_shoot_end_left_down_80.fbxanim");

						-- -- s_stand_shoot_end:add(aim(90.0), "stand_shoot_end_up_90.fbxanim");
						-- -- s_stand_shoot_end:add(aim(45.0), "stand_shoot_end_up_45.fbxanim");
						-- -- s_stand_shoot_end:add(aim(0.0), "stand_shoot_end_center.fbxanim");
						-- -- s_stand_shoot_end:add(aim(-45.0), "stand_shoot_end_down_45.fbxanim");
						-- -- s_stand_shoot_end:add(aim(-72.0), "stand_shoot_end_down_80.fbxanim");
						-- -- table.insert(standing, s_stand_shoot_end);
						-- table.insert(in_combat, s_stand_shoot_end);
						-- --}

						-- --{ Animation: s_stand_reloading_start
						-- s_stand_reloading_start = addState(stand+load, "s_stand_reloading_start");
						-- s_stand_reloading_start:from(s_stand_shoot);
						-- s_stand_reloading_start:blendTime(200);
						-- -- s_stand_reloading_start:synchronizedStartTime();
						-- s_stand_reloading_start:synchronizedStartTimeGroup(10);
						-- s_stand_reloading_start:loop(false);

						-- s_stand_reloading_start:add(aim_horizontal(-45.0), aim(90.0), "stand_reloading_start_right_up_90.fbxanim");
						-- s_stand_reloading_start:add(aim_horizontal(-45.0), aim(45.0), "stand_reloading_start_right_up_45.fbxanim");
						-- s_stand_reloading_start:add(aim_horizontal(-45.0), aim(0.0), "stand_reloading_start_right.fbxanim");
						-- s_stand_reloading_start:add(aim_horizontal(-45.0), aim(-45.0), "stand_reloading_start_right_down_45.fbxanim");
						-- s_stand_reloading_start:add(aim_horizontal(-45.0), aim(-72.0), "stand_reloading_start_right_down_80.fbxanim");

						-- s_stand_reloading_start:add(aim_horizontal(0.0), aim(90.0), "stand_reloading_start_up_90.fbxanim");
						-- s_stand_reloading_start:add(aim_horizontal(0.0), aim(45.0), "stand_reloading_start_up_45.fbxanim");
						-- s_stand_reloading_start:add(aim_horizontal(0.0), aim(0.0), "stand_reloading_start_center.fbxanim");
						-- s_stand_reloading_start:add(aim_horizontal(0.0), aim(-45.0), "stand_reloading_start_down_45.fbxanim");
						-- s_stand_reloading_start:add(aim_horizontal(0.0), aim(-72.0), "stand_reloading_start_down_80.fbxanim");

						-- s_stand_reloading_start:add(aim_horizontal(45.0), aim(90.0), "stand_reloading_start_left_up_90.fbxanim");
						-- s_stand_reloading_start:add(aim_horizontal(45.0), aim(45.0), "stand_reloading_start_left_up_45.fbxanim");
						-- s_stand_reloading_start:add(aim_horizontal(45.0), aim(0.0), "stand_reloading_start_left.fbxanim");
						-- s_stand_reloading_start:add(aim_horizontal(45.0), aim(-45.0), "stand_reloading_start_left_down_45.fbxanim");
						-- s_stand_reloading_start:add(aim_horizontal(45.0), aim(-72.0), "stand_reloading_start_left_down_80.fbxanim");

						-- -- s_stand_reloading_start:add(aim(90.0), "stand_reloading_start_up_90.fbxanim");
						-- -- s_stand_reloading_start:add(aim(45.0), "stand_reloading_start_up_45.fbxanim");
						-- -- s_stand_reloading_start:add(aim(0.0), "stand_reloading_start_center.fbxanim");
						-- -- s_stand_reloading_start:add(aim(-45.0), "stand_reloading_start_down_45.fbxanim");
						-- -- s_stand_reloading_start:add(aim(-72.0), "stand_reloading_start_down_80.fbxanim");
						-- table.insert(standing, s_stand_reloading_start);
						-- table.insert(loading, s_stand_reloading_start);
						-- --}

						-- --{ Animation: s_stand_reloading
						-- s_stand_reloading = addState(stand+load, "s_stand_reloading");
						-- s_stand_reloading:from(s_stand_reloading_start);
						-- s_stand_reloading:blendTime(0);
						-- s_stand_reloading:loop(false);

						-- s_stand_reloading:add(aim_horizontal(-45.0), aim(90.0), "stand_reloading_right_up_90.fbxanim");
						-- s_stand_reloading:add(aim_horizontal(-45.0), aim(45.0), "stand_reloading_right_up_45.fbxanim");
						-- s_stand_reloading:add(aim_horizontal(-45.0), aim(0.0), "stand_reloading_right.fbxanim");
						-- s_stand_reloading:add(aim_horizontal(-45.0), aim(-45.0), "stand_reloading_right_down_45.fbxanim");
						-- s_stand_reloading:add(aim_horizontal(-45.0), aim(-72.0), "stand_reloading_right_down_80.fbxanim");

						-- s_stand_reloading:add(aim_horizontal(0.0), aim(90.0), "stand_reloading_up_90.fbxanim");
						-- s_stand_reloading:add(aim_horizontal(0.0), aim(45.0), "stand_reloading_up_45.fbxanim");
						-- s_stand_reloading:add(aim_horizontal(0.0), aim(0.0), "stand_reloading_center.fbxanim");
						-- s_stand_reloading:add(aim_horizontal(0.0), aim(-45.0), "stand_reloading_down_45.fbxanim");
						-- s_stand_reloading:add(aim_horizontal(0.0), aim(-72.0), "stand_reloading_down_80.fbxanim");

						-- s_stand_reloading:add(aim_horizontal(45.0), aim(90.0), "stand_reloading_left_up_90.fbxanim");
						-- s_stand_reloading:add(aim_horizontal(45.0), aim(45.0), "stand_reloading_left_up_45.fbxanim");
						-- s_stand_reloading:add(aim_horizontal(45.0), aim(0.0), "stand_reloading_left.fbxanim");
						-- s_stand_reloading:add(aim_horizontal(45.0), aim(-45.0), "stand_reloading_left_down_45.fbxanim");
						-- s_stand_reloading:add(aim_horizontal(45.0), aim(-72.0), "stand_reloading_left_down_80.fbxanim");

						-- -- s_stand_reloading:add(aim(90.0), "stand_reloading_up_90.fbxanim");
						-- -- s_stand_reloading:add(aim(45.0), "stand_reloading_up_45.fbxanim");
						-- -- s_stand_reloading:add(aim(0.0), "stand_reloading_center.fbxanim");
						-- -- s_stand_reloading:add(aim(-45.0), "stand_reloading_down_45.fbxanim");
						-- -- s_stand_reloading:add(aim(-72.0), "stand_reloading_down_80.fbxanim");
						-- table.insert(standing, s_stand_reloading);
						-- table.insert(loading, s_stand_reloading);
						-- --}
						-- s_stand_shoot:from(s_stand_loading);
						-- s_stand_shoot:from(s_stand_loading_loop);
						-- s_stand_shoot:from(s_stand_start_left_loading);
						-- s_stand_shoot:from(s_stand_start_right_loading);
						-- s_stand_shoot:from(s_stand_start_right_loading);
						-- s_stand_shoot:from(s_stand_reloading_start);
						-- s_stand_shoot:from(s_stand_reloading);
						-- s_stand_shoot:from(s_spin_start_right_loading);
						-- s_stand_shoot:from(s_spin_right_loading);
						-- s_stand_shoot:from(s_spin_end_right_loading);
						-- s_stand_shoot:from(s_spin_start_left_loading);
						-- s_stand_shoot:from(s_spin_left_loading);
						-- s_stand_shoot:from(s_spin_end_left_loading);

						-- --{ Animation: s_stand_combat_end
						-- s_stand_combat_end = addState(stand, "s_stand_combat_end");
						-- s_stand_combat_end:from(in_combat);
						-- s_stand_combat_end:blendTime(300);
						-- s_stand_combat_end:loop(false);
						-- s_stand_combat_end:add("stand_combat_end.fbxanim");
						-- table.insert(standing, s_stand_combat_end);
						-- --}





						-- --{ Animation: s_additive_loading
						-- s_additive_loading = addState(run+load, "s_additive_loading", 1);
						-- s_additive_loading:blendTime(300);
						-- s_additive_loading:loop(false);
						-- s_additive_loading:add(aim(90.0), "additive_loading_up_90.fbxanim");
						-- s_additive_loading:add(aim(45.0), "additive_loading_up_45.fbxanim");
						-- s_additive_loading:add(aim(0.0), "additive_loading_center.fbxanim");
						-- s_additive_loading:add(aim(-45.0), "additive_loading_down_45.fbxanim");
						-- s_additive_loading:add(aim(-72.0), "additive_loading_down_80.fbxanim");
						-- s_additive_loading:addReference("additive_combat2.fbxanim");
						-- s_additive_loading:setContextOnEnter("additive", true);
						-- table.insert(running, s_additive_loading);
						-- table.insert(loading, s_additive_loading);
						-- --}



						-- --{ Animation: s_additive_jump_loading
						-- s_additive_jump_loading = addState(fall+load, "s_additive_jump_loading", 1);
						-- s_additive_jump_loading:blendTime(300);
						-- s_additive_jump_loading:loop(false);
						-- s_additive_jump_loading:add(aim(90.0), "additive_loading_up_90.fbxanim");
						-- s_additive_jump_loading:add(aim(45.0), "additive_loading_up_45.fbxanim");
						-- s_additive_jump_loading:add(aim(0.0), "additive_loading_center.fbxanim");
						-- s_additive_jump_loading:add(aim(-45.0), "additive_loading_down_45.fbxanim");
						-- s_additive_jump_loading:add(aim(-72.0), "additive_loading_down_80.fbxanim");
						-- s_additive_jump_loading:addReference("additive_combat.fbxanim");
						-- s_additive_jump_loading:setContextOnEnter("additive", true);
						-- table.insert(running, s_additive_jump_loading);
						-- table.insert(loading, s_additive_jump_loading);
						-- --}


						-- --{ Animation: s_additive_layer_one_default
						-- s_additive_layer_one_default = addState(default, "s_additive_layer_one_default", 1);
						-- s_additive_layer_one_default:blendTime(300);
						-- s_additive_layer_one_default:loop(true);
						-- s_additive_layer_one_default:add("additive_loading_center.fbxanim");
						-- s_additive_layer_one_default:addReference("additive_loading_center.fbxanim");
						-- s_additive_layer_one_default:setContextOnEnter("additive", false);
						-- table.insert(running, s_additive_layer_one_default);
						-- --}
						
						
		--{


--{ HAIR


-- --{ Animation: s_crouch
		-- s_crouch = addState(crouch, "s_crouch");
		-- s_crouch:from(standing);
		-- s_crouch:blendTime(300);
		-- s_crouch:loop(false);
		-- --s_crouch:add("macbeth/m_crouch_start.fbxanim");
		-- s_crouch:add("macbeth/m_left_handed_crouch_start.fbxanim");
		-- --s_crouch:add("crouch2.fbxanim");
		-- table.insert(crouching, s_crouch);
		-- --}
		
		-- --{ Animation: s_crouch_2
		-- s_crouch_2 = addState(crouch, "s_crouch_2");
		-- --s_crouch_2:from(standing);
		-- s_crouch_2:blendTime(500);
		-- s_crouch_2:loop(false);
		-- --s_crouch_2:add("macbeth/m_crouch_start.fbxanim");
		-- s_crouch_2:add("macbeth/m_left_handed_crouch_loop.fbxanim");
		-- --s_crouch_2:add("crouch2.fbxanim");
		-- table.insert(crouching, s_crouch_2);
		-- --}

		-- --{ Animation: s_crouch_loop
		-- s_crouch_loop = addState(crouch, "s_crouch_loop");
		-- s_crouch_loop:from(crouching);
		-- s_crouch_loop:blendTime(1000);
		-- s_crouch_loop:loop(true);
		-- s_crouch_loop:loopBlendTime(300);
		-- --s_crouch_loop:add("crouch_loop.fbxanim");
		-- --s_crouch_loop:add("macbeth/m_crouch_loop.fbxanim");
		-- s_crouch_loop:add("macbeth/m_left_handed_crouch_loop.fbxanim");
		-- table.insert(crouching, s_crouch_loop);
		-- --}



	--{ Animation: s_additive_hair_crouch_start
	s_additive_hair_crouch_start = addState(crouch, "s_additive_hair_crouch_start", 3);
	s_additive_hair_crouch_start:blendTime(300);
	s_additive_hair_crouch_start:from(standing);
	s_additive_hair_crouch_start:loop(false);
	--s_additive_hair_crouch_start:add("macbeth/m_walk_start_crouching_hair_additive.fbxanim");
	-- s_additive_hair_crouch_start:add(neck_angle_axis(40), neck_angle_up(40), "macbeth/hair_additive_flowing_l_d.fbxanim");
	-- s_additive_hair_crouch_start:add(neck_angle_axis(40), neck_angle_up(0), "macbeth/hair_additive_flowing_c_d.fbxanim");
	-- s_additive_hair_crouch_start:add(neck_angle_axis(40), neck_angle_up(-40), "macbeth/hair_additive_flowing_r_d.fbxanim");

	-- s_additive_hair_crouch_start:add(neck_angle_axis(0), neck_angle_up(70), "macbeth/hair_additive_flowing_l.fbxanim");
	-- s_additive_hair_crouch_start:add(neck_angle_axis(0), neck_angle_up(0), "macbeth/hair_additive_flowing_c.fbxanim");
	-- s_additive_hair_crouch_start:add(neck_angle_axis(0), neck_angle_up(-70), "macbeth/hair_additive_flowing_r.fbxanim");

	-- s_additive_hair_crouch_start:add(neck_angle_axis(-40), neck_angle_up(40), "macbeth/hair_additive_flowing_l_u.fbxanim");
	-- s_additive_hair_crouch_start:add(neck_angle_axis(-40), neck_angle_up(0), "macbeth/hair_additive_flowing_c_u.fbxanim");
	-- s_additive_hair_crouch_start:add(neck_angle_axis(-40), neck_angle_up(-40), "macbeth/hair_additive_flowing_r_u.fbxanim");
	s_additive_hair_crouch_start:add("macbeth/tpose_hair_up.fbxanim");
	s_additive_hair_crouch_start:addReference("macbeth/tpose_hair_up.fbxanim"); 
	--}
	
	--{ Animation: s_additive_hair_crouch
	s_additive_hair_crouch = addState(crouch, "s_additive_hair_crouch", 3);
	s_additive_hair_crouch:blendTime(300);
	s_additive_hair_crouch:loop(true);
	--s_additive_hair_crouch:add("macbeth/m_walk_crouching_hair_additive.fbxanim");
	-- s_additive_hair_crouch:add(neck_angle_axis(70*2), neck_angle_up(70*2), "macbeth/hair_additive_idle_l_d.fbxanim");
	-- s_additive_hair_crouch:add(neck_angle_axis(70*2), neck_angle_up(0), "macbeth/hair_additive_idle_c_d.fbxanim");
	-- s_additive_hair_crouch:add(neck_angle_axis(70*2), neck_angle_up(-70*2), "macbeth/hair_additive_idle_r_d.fbxanim");
    
	-- s_additive_hair_crouch:add(neck_angle_axis(0), neck_angle_up(70*2), "macbeth/hair_additive_idle_l.fbxanim");
	-- s_additive_hair_crouch:add(neck_angle_axis(0), neck_angle_up(0), "macbeth/hair_additive_idle_c.fbxanim");
	-- s_additive_hair_crouch:add(neck_angle_axis(0), neck_angle_up(-70*2), "macbeth/hair_additive_idle_r.fbxanim");
    
	-- s_additive_hair_crouch:add(neck_angle_axis(-70*2), neck_angle_up(70*2), "macbeth/hair_additive_idle_l_u.fbxanim");
	-- s_additive_hair_crouch:add(neck_angle_axis(-70*2), neck_angle_up(0), "macbeth/hair_additive_idle_c_u.fbxanim");
	-- s_additive_hair_crouch:add(neck_angle_axis(-70*2), neck_angle_up(-70*2), "macbeth/hair_additive_idle_r_u.fbxanim");
	s_additive_hair_crouch:add("macbeth/tpose_crouch_stand.fbxanim");
	s_additive_hair_crouch:addReference("macbeth/tpose_crouch_stand.fbxanim"); 
	--}
	
	--{ Animation: s_additive_hair_crouch_2
	s_additive_hair_crouch_2 = addState(crouch, "s_additive_hair_crouch_2", 3);
	s_additive_hair_crouch_2:blendTime(300);
	s_additive_hair_crouch_2:from(crouching);
	s_additive_hair_crouch_2:loop(true);
	--s_additive_hair_crouch_2:add("macbeth/m_walk_crouching_hair_additive.fbxanim");
	-- s_additive_hair_crouch_2:add(neck_angle_axis(70*2), neck_angle_up(70*2), "macbeth/hair_additive_idle_l_d.fbxanim");
	-- s_additive_hair_crouch_2:add(neck_angle_axis(70*2), neck_angle_up(0), "macbeth/hair_additive_idle_c_d.fbxanim");
	-- s_additive_hair_crouch_2:add(neck_angle_axis(70*2), neck_angle_up(-70*2), "macbeth/hair_additive_idle_r_d.fbxanim");
    
	-- s_additive_hair_crouch_2:add(neck_angle_axis(0), neck_angle_up(70*2), "macbeth/hair_additive_idle_l.fbxanim");
	-- s_additive_hair_crouch_2:add(neck_angle_axis(0), neck_angle_up(0), "macbeth/hair_additive_idle_c.fbxanim");
	-- s_additive_hair_crouch_2:add(neck_angle_axis(0), neck_angle_up(-70*2), "macbeth/hair_additive_idle_r.fbxanim");
    
	-- s_additive_hair_crouch_2:add(neck_angle_axis(-70*2), neck_angle_up(70*2), "macbeth/hair_additive_idle_l_u.fbxanim");
	-- s_additive_hair_crouch_2:add(neck_angle_axis(-70*2), neck_angle_up(0), "macbeth/hair_additive_idle_c_u.fbxanim");
	-- s_additive_hair_crouch_2:add(neck_angle_axis(-70*2), neck_angle_up(-70*2), "macbeth/hair_additive_idle_r_u.fbxanim");
	s_additive_hair_crouch_2:add("macbeth/tpose_crouch_stand.fbxanim");
	s_additive_hair_crouch_2:addReference("macbeth/tpose_crouch_stand.fbxanim"); 
	--}
	
	--{ Animation: s_additive_hair_crouch_walking
	s_additive_hair_crouch_walking = addState(crouch+run, "s_additive_hair_crouch_walking", 3);
	s_additive_hair_crouch_walking:blendTime(300);
	s_additive_hair_crouch_walking:loop(true);
	--s_additive_hair_crouch_walking:add("macbeth/m_walk_crouching_hair_additive.fbxanim");
	-- s_additive_hair_crouch_walking:add(neck_angle_axis(40), neck_angle_up(40), "macbeth/hair_additive_flowing_l_d.fbxanim");
	-- s_additive_hair_crouch_walking:add(neck_angle_axis(40), neck_angle_up(0), "macbeth/hair_additive_flowing_c_d.fbxanim");
	-- s_additive_hair_crouch_walking:add(neck_angle_axis(40), neck_angle_up(-40), "macbeth/hair_additive_flowing_r_d.fbxanim");

	-- s_additive_hair_crouch_walking:add(neck_angle_axis(0), neck_angle_up(70), "macbeth/hair_additive_flowing_l.fbxanim");
	-- s_additive_hair_crouch_walking:add(neck_angle_axis(0), neck_angle_up(0), "macbeth/hair_additive_flowing_c.fbxanim");
	-- s_additive_hair_crouch_walking:add(neck_angle_axis(0), neck_angle_up(-70), "macbeth/hair_additive_flowing_r.fbxanim");

	-- s_additive_hair_crouch_walking:add(neck_angle_axis(-40), neck_angle_up(40), "macbeth/hair_additive_flowing_l_u.fbxanim");
	-- s_additive_hair_crouch_walking:add(neck_angle_axis(-40), neck_angle_up(0), "macbeth/hair_additive_flowing_c_u.fbxanim");
	-- s_additive_hair_crouch_walking:add(neck_angle_axis(-40), neck_angle_up(-40), "macbeth/hair_additive_flowing_r_u.fbxanim");
	s_additive_hair_crouch_walking:add("macbeth/tpose_hair_up.fbxanim");
	s_additive_hair_crouch_walking:addReference("macbeth/tpose_hair_up.fbxanim"); 
	--}
	
	
	--{ Animation: s_additive_hair_idle
	s_additive_hair_idle = addState(stand, "s_additive_hair_idle", 3);
	s_additive_hair_idle:blendTime(1000);
	s_additive_hair_idle:loop(true);
	s_additive_hair_idle:loopBlendTime(300);
	s_additive_hair_idle:add("macbeth/tpose2.fbxanim");
	s_additive_hair_idle:addReference("macbeth/tpose2.fbxanim");
	--}
	
	--{ Animation: s_additive_ledge_move_right
	s_additive_ledge_move_right = addState(ledge+move_right, "s_additive_ledge_move_right", 3);
	s_additive_ledge_move_right:blendTime(1000);
	s_additive_ledge_move_right:loop(true);
	s_additive_ledge_move_right:loopBlendTime(300);
	s_additive_ledge_move_right:add("macbeth/tpose2.fbxanim");
	s_additive_ledge_move_right:addReference("macbeth/tpose2.fbxanim");
	--}
	
	--{ Animation: s_additive_ledge_move_right_corner_in
	s_additive_ledge_move_right_corner_in = addState(ledge+move_right+corner_in, "s_additive_ledge_move_right_corner_in", 3);
	s_additive_ledge_move_right_corner_in:blendTime(1000);
	s_additive_ledge_move_right_corner_in:loop(true);
	s_additive_ledge_move_right_corner_in:loopBlendTime(300);
	s_additive_ledge_move_right_corner_in:add("macbeth/tpose2.fbxanim");
	s_additive_ledge_move_right_corner_in:addReference("macbeth/tpose2.fbxanim");
	--}
	
	--{ Animation: s_additive_ledge_move_right_corner_out
	s_additive_ledge_move_right_corner_out = addState(ledge+move_right+corner_out, "s_additive_ledge_move_right_corner_out", 3);
	s_additive_ledge_move_right_corner_out:blendTime(1000);
	s_additive_ledge_move_right_corner_out:loop(true);
	s_additive_ledge_move_right_corner_out:loopBlendTime(300);
	s_additive_ledge_move_right_corner_out:add("macbeth/tpose2.fbxanim");
	s_additive_ledge_move_right_corner_out:addReference("macbeth/tpose2.fbxanim");
	--}
	
	--{ Animation: s_additive_ledge_move_left
	s_additive_ledge_move_left = addState(ledge+move_left, "s_additive_ledge_move_left", 3);
	s_additive_ledge_move_left:blendTime(1000);
	s_additive_ledge_move_left:loop(true);
	s_additive_ledge_move_left:loopBlendTime(300);
	s_additive_ledge_move_left:add("macbeth/tpose2.fbxanim");
	s_additive_ledge_move_left:addReference("macbeth/tpose2.fbxanim");
	--}
	
	--{ Animation: s_additive_ledge_move_left_corner_in
	s_additive_ledge_move_left_corner_in = addState(ledge+move_left+corner_in, "s_additive_ledge_move_left_corner_in", 3);
	s_additive_ledge_move_left_corner_in:blendTime(1000);
	s_additive_ledge_move_left_corner_in:loop(true);
	s_additive_ledge_move_left_corner_in:loopBlendTime(300);
	s_additive_ledge_move_left_corner_in:add("macbeth/tpose2.fbxanim");
	s_additive_ledge_move_left_corner_in:addReference("macbeth/tpose2.fbxanim");
	--}
	
	--{ Animation: s_additive_ledge_move_left_corner_out
	s_additive_ledge_move_left_corner_out = addState(ledge+move_left+corner_out, "s_additive_ledge_move_left_corner_out", 3);
	s_additive_ledge_move_left_corner_out:blendTime(1000);
	s_additive_ledge_move_left_corner_out:loop(true);
	s_additive_ledge_move_left_corner_out:loopBlendTime(300);
	s_additive_ledge_move_left_corner_out:add("macbeth/tpose2.fbxanim");
	s_additive_ledge_move_left_corner_out:addReference("macbeth/tpose2.fbxanim");
	--}

	--{ Animation: s_additive_hair_run
	s_additive_hair_run = addState(run, "s_additive_hair_run", 3);
	s_additive_hair_run:blendTime(1000);
	s_additive_hair_run:loop(true);
	s_additive_hair_run:loopBlendTime(300); 

	s_additive_hair_run:add(neck_angle_axis(40), neck_angle_up(40), "macbeth/hair_additive_flowing_l_d.fbxanim");
	s_additive_hair_run:add(neck_angle_axis(40), neck_angle_up(0), "macbeth/hair_additive_flowing_c_d.fbxanim");
	s_additive_hair_run:add(neck_angle_axis(40), neck_angle_up(-40), "macbeth/hair_additive_flowing_r_d.fbxanim");

	s_additive_hair_run:add(neck_angle_axis(0), neck_angle_up(70), "macbeth/hair_additive_flowing_l.fbxanim");
	s_additive_hair_run:add(neck_angle_axis(0), neck_angle_up(0), "macbeth/hair_additive_flowing_c.fbxanim");
	s_additive_hair_run:add(neck_angle_axis(0), neck_angle_up(-70), "macbeth/hair_additive_flowing_r.fbxanim");

	s_additive_hair_run:add(neck_angle_axis(-40), neck_angle_up(40), "macbeth/hair_additive_flowing_l_u.fbxanim");
	s_additive_hair_run:add(neck_angle_axis(-40), neck_angle_up(0), "macbeth/hair_additive_flowing_c_u.fbxanim");
	s_additive_hair_run:add(neck_angle_axis(-40), neck_angle_up(-40), "macbeth/hair_additive_flowing_r_u.fbxanim");

	s_additive_hair_run:addReference("macbeth/tpose.fbxanim");
	
	--}

	
	--{ Animation: s_additive_hair_rope
	s_additive_hair_rope = addState(fall+rope, "s_additive_hair_rope", 3);
	s_additive_hair_rope:blendTime(1000);
	s_additive_hair_rope:loop(true);
	s_additive_hair_rope:loopBlendTime(300); 

	s_additive_hair_rope:add(neck_angle_axis(40), neck_angle_up(40), "macbeth/hair_additive_flowing_l_d.fbxanim");
	s_additive_hair_rope:add(neck_angle_axis(40), neck_angle_up(0), "macbeth/hair_additive_flowing_c_d.fbxanim");
	s_additive_hair_rope:add(neck_angle_axis(40), neck_angle_up(-40), "macbeth/hair_additive_flowing_r_d.fbxanim");

	s_additive_hair_rope:add(neck_angle_axis(0), neck_angle_up(90), "macbeth/hair_additive_flowing_l.fbxanim");
	s_additive_hair_rope:add(neck_angle_axis(0), neck_angle_up(0), "macbeth/hair_additive_flowing_c.fbxanim");
	s_additive_hair_rope:add(neck_angle_axis(0), neck_angle_up(-90), "macbeth/hair_additive_flowing_r.fbxanim");

	s_additive_hair_rope:add(neck_angle_axis(-40), neck_angle_up(40), "macbeth/hair_additive_flowing_l_u.fbxanim");
	s_additive_hair_rope:add(neck_angle_axis(-40), neck_angle_up(0), "macbeth/hair_additive_flowing_c_u.fbxanim");
	s_additive_hair_rope:add(neck_angle_axis(-40), neck_angle_up(-40), "macbeth/hair_additive_flowing_r_u.fbxanim");

	s_additive_hair_rope:addReference("macbeth/tpose.fbxanim");
	
	--}

	--{ Animation: s_additive_hair_rope_slow
	s_additive_hair_rope_slow = addState(fall+rope+rope_slow, "s_additive_hair_rope_slow", 3);
	s_additive_hair_rope_slow:blendTime(1000);
	s_additive_hair_rope_slow:loop(true);
	s_additive_hair_rope_slow:loopBlendTime(300); 

	s_additive_hair_rope_slow:add(neck_angle_axis(70*2), neck_angle_up(70*2), "macbeth/hair_additive_idle_l_d.fbxanim");
	s_additive_hair_rope_slow:add(neck_angle_axis(70*2), neck_angle_up(0), "macbeth/hair_additive_idle_c_d.fbxanim");
	s_additive_hair_rope_slow:add(neck_angle_axis(70*2), neck_angle_up(-70*2), "macbeth/hair_additive_idle_r_d.fbxanim");

	s_additive_hair_rope_slow:add(neck_angle_axis(0), neck_angle_up(70*2), "macbeth/hair_additive_idle_l.fbxanim");
	s_additive_hair_rope_slow:add(neck_angle_axis(0), neck_angle_up(0), "macbeth/hair_additive_idle_c.fbxanim");
	s_additive_hair_rope_slow:add(neck_angle_axis(0), neck_angle_up(-70*2), "macbeth/hair_additive_idle_r.fbxanim");

	s_additive_hair_rope_slow:add(neck_angle_axis(-70*2), neck_angle_up(70*2), "macbeth/hair_additive_idle_l_u.fbxanim");
	s_additive_hair_rope_slow:add(neck_angle_axis(-70*2), neck_angle_up(0), "macbeth/hair_additive_idle_c_u.fbxanim");
	s_additive_hair_rope_slow:add(neck_angle_axis(-70*2), neck_angle_up(-70*2), "macbeth/hair_additive_idle_r_u.fbxanim");
	
	s_additive_hair_rope_slow:addReference("macbeth/tpose.fbxanim");
	
	--}
	
	--{ Animation: s_additive_hair_jump
	s_additive_hair_jump = addState(fall, "s_additive_hair_jump", 3);
	s_additive_hair_jump:blendTime(300);
	s_additive_hair_jump:loop(false);
	s_additive_hair_jump:add("macbeth/hair_additive_jump.fbxanim");
	s_additive_hair_jump:addReference("macbeth/tpose.fbxanim"); 
	--}
	
	--{ Animation: s_additive_hair_fall
	s_additive_hair_fall = addState(fall, "s_additive_hair_fall", 3);
	s_additive_hair_fall:from(s_additive_hair_jump);
	s_additive_hair_fall:blendTime(300);
	s_additive_hair_fall:loop(true);
	s_additive_hair_fall:add("macbeth/hair_additive_fall.fbxanim");
	s_additive_hair_fall:addReference("macbeth/tpose.fbxanim");
	--}
	
--}



--{ BOW COMBAT ANIMS
					-- --{ Animation: s_additive_combat
					-- s_additive_combat_crouch = addState(crouch+load+run, "s_additive_combat_crouch", 1);
					-- s_additive_combat_crouch:blendTime(300);
					-- s_additive_combat_crouch:loop(true);
					-- s_additive_combat_crouch:add("additive_loading_center.fbxanim");
					-- s_additive_combat_crouch:addReference("additive_loading_center.fbxanim");
					-- s_additive_combat_crouch:setContextOnEnter("additive", true);
					-- table.insert(running, s_additive_combat_crouch);
					-- --}

					-- --{ Animation: s_additive_combat2
					-- s_additive_combat2 = addState(stand, "s_additive_combat2", 1);
					-- s_additive_combat2:blendTime(300);
					-- s_additive_combat2:loop(true);
					-- s_additive_combat2:add("additive_combat.fbxanim");
					-- s_additive_combat2:addReference("additive_combat.fbxanim");
					-- s_additive_combat2:setContextOnEnter("additive", false);
					-- table.insert(running, s_additive_combat2);
					-- --}

					-- --{ Animation: s_additive_jump_shoot
					-- s_additive_jump_shoot = addState(fall+combat, "s_additive_jump_shoot", 1);
					-- s_additive_jump_shoot:synchronizedStartTimeGroup(10);
					-- s_additive_jump_shoot:from(loading);
					-- s_additive_jump_shoot:blendTime(100);
					-- s_additive_jump_shoot:loop(false);
					-- s_additive_jump_shoot:add(aim(90.0), "additive_shoot_up_90.fbxanim");
					-- s_additive_jump_shoot:add(aim(45.0), "additive_shoot_up_45.fbxanim");
					-- s_additive_jump_shoot:add(aim(0.0), "additive_shoot_center.fbxanim");
					-- s_additive_jump_shoot:add(aim(-45.0), "additive_shoot_down_45.fbxanim");
					-- s_additive_jump_shoot:add(aim(-72.0), "additive_shoot_down_80.fbxanim");
					-- s_additive_jump_shoot:addReference("additive_combat.fbxanim");
					-- s_additive_jump_shoot:setContextOnEnter("additive", true);
					-- table.insert(running, s_additive_jump_shoot);
					-- --}
					-- --{ Animation: s_additive_shoot
					-- s_additive_shoot = addState(run+combat, "s_additive_shoot", 1);
					-- s_additive_shoot:synchronizedStartTimeGroup(10);
					-- s_additive_shoot:from(loading);
					-- s_additive_shoot:blendTime(100);
					-- s_additive_shoot:loop(false);
					-- s_additive_shoot:add(aim(90.0), "additive_shoot_up_90.fbxanim");
					-- s_additive_shoot:add(aim(45.0), "additive_shoot_up_45.fbxanim");
					-- s_additive_shoot:add(aim(0.0), "additive_shoot_center.fbxanim");
					-- s_additive_shoot:add(aim(-45.0), "additive_shoot_down_45.fbxanim");
					-- s_additive_shoot:add(aim(-72.0), "additive_shoot_down_80.fbxanim");
					-- s_additive_shoot:addReference("additive_combat2.fbxanim");
					-- s_additive_shoot:setContextOnEnter("additive", true);
					-- table.insert(running, s_additive_shoot);
					-- --}

					-- --{ Animation: s_additive_shoot_end
					-- s_additive_shoot_end = addState(run+combat, "s_additive_shoot_end", 1);
					-- s_additive_shoot_end:from(s_additive_shoot);
					-- s_additive_shoot_end:blendTime(0);
					-- s_additive_shoot_end:loop(false);
					-- s_additive_shoot_end:add(aim(90.0), "additive_shoot_end_up_90.fbxanim");
					-- s_additive_shoot_end:add(aim(45.0), "additive_shoot_end_up_45.fbxanim");
					-- s_additive_shoot_end:add(aim(0.0), "additive_shoot_end_center.fbxanim");
					-- s_additive_shoot_end:add(aim(-45.0), "additive_shoot_end_down_45.fbxanim");
					-- s_additive_shoot_end:add(aim(-72.0), "additive_shoot_end_down_80.fbxanim");
					-- s_additive_shoot_end:addReference("additive_combat2.fbxanim");
					-- s_additive_shoot_end:setContextOnEnter("additive", true);
					-- table.insert(running, s_additive_shoot_end);
					-- --}

					-- --{ Animation: s_additive_reloading_start
					-- s_additive_reloading_start = addState(run+load, "s_additive_reloading_start", 1);
					-- s_additive_reloading_start:from(s_additive_shoot);
					-- s_additive_reloading_start:blendTime(200);
					-- s_additive_reloading_start:synchronizedStartTimeGroup(10);
					-- s_additive_reloading_start:loop(false);
					-- s_additive_reloading_start:add(aim(90.0), "additive_reloading_start_up_90.fbxanim");
					-- s_additive_reloading_start:add(aim(45.0), "additive_reloading_start_up_45.fbxanim");
					-- s_additive_reloading_start:add(aim(0.0), "additive_reloading_start_center.fbxanim");
					-- s_additive_reloading_start:add(aim(-45.0), "additive_reloading_start_down_45.fbxanim");
					-- s_additive_reloading_start:add(aim(-72.0), "additive_reloading_start_down_80.fbxanim");
					-- s_additive_reloading_start:addReference("additive_combat2.fbxanim");
					-- s_additive_reloading_start:setContextOnEnter("additive", true);
					-- table.insert(running, s_additive_reloading_start);
					-- table.insert(loading, s_additive_reloading_start);
					-- --}

					-- --{ Animation: s_additive_reloading
					-- s_additive_reloading = addState(run+load, "s_additive_reloading", 1);
					-- s_additive_reloading:from(s_additive_reloading_start);
					-- s_additive_reloading:blendTime(0);
					-- s_additive_reloading:loop(false);
					-- s_additive_reloading:add(aim(90.0), "additive_reloading_up_90.fbxanim");
					-- s_additive_reloading:add(aim(45.0), "additive_reloading_up_45.fbxanim");
					-- s_additive_reloading:add(aim(0.0), "additive_reloading_center.fbxanim");
					-- s_additive_reloading:add(aim(-45.0), "additive_reloading_down_45.fbxanim");
					-- s_additive_reloading:add(aim(-72.0), "additive_reloading_down_80.fbxanim");
					-- s_additive_reloading:addReference("additive_combat2.fbxanim");
					-- s_additive_reloading:setContextOnEnter("additive", true);
					-- table.insert(running, s_additive_reloading);
					-- table.insert(loading, s_additive_reloading);
					-- --}


--}


--{ ROPE SWING

	--{ Animation: s_rope_throw
	s_rope_throw = addState(stand+rope_throw, "s_rope_throw");
	-- s_rope_throw:from(running);
	s_rope_throw:blendTime(200);
	s_rope_throw:loop(false);
	s_rope_throw:add("rope_throw.fbxanim");
	table.insert(standing, s_rope_throw);
	--}

	--{ Animation: s_rope_throw_jumping
	s_rope_throw_jumping = addState(fall+rope_throw, "s_rope_throw_jumping");
	-- s_rope_throw_jumping:from(running);
	s_rope_throw_jumping:blendTime(300);
	s_rope_throw_jumping:loop(false);
	s_rope_throw_jumping:add("rope_throw_jumping.fbxanim");
	table.insert(standing, s_rope_throw_jumping);
	--}

	--{ Animation: s_rope_turn_left_start
	s_rope_turn_left_start = addState(rope+turn_left, "s_rope_turn_left_start");
	s_rope_turn_left_start:blendTime(400);
	s_rope_turn_left_start:loop(false);
	s_rope_turn_left_start:add("rope_swing_turn_left_start.fbxanim");
	s_rope_turn_left_start:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_turn_left_start);
	--}

	--{ Animation: s_rope_turn_left
	s_rope_turn_left = addState(rope+turn_left, "s_rope_turn_left");
	-- s_rope_turn_left:from(s_rope_turn_left_start);
	s_rope_turn_left:blendTime(400);
	s_rope_turn_left:loop(false);
	s_rope_turn_left:add("rope_swing_turn_left.fbxanim");
	s_rope_turn_left:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_turn_left);
	--}

	--{ Animation: s_rope_turn_right_start
	s_rope_turn_right_start = addState(rope+turn_right, "s_rope_turn_right_start");
	s_rope_turn_right_start:blendTime(400);
	s_rope_turn_right_start:loop(false);
	s_rope_turn_right_start:add("rope_swing_turn_right_start.fbxanim");
	s_rope_turn_right_start:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_turn_right_start);
	--}
 
	--{ Animation: s_rope_turn_right
	s_rope_turn_right = addState(rope+turn_right, "s_rope_turn_right");
	-- s_rope_turn_right:from(s_rope_turn_right_start);
	s_rope_turn_right:blendTime(400);
	s_rope_turn_right:loop(false);
	s_rope_turn_right:add("rope_swing_turn_right.fbxanim");
	s_rope_turn_right:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_turn_right);
	--}

	--{ Animation: s_rope_swing1
	s_rope_swing1 = addState(rope, "s_rope_swing1");
	s_rope_swing1:blendTime(700);
	s_rope_swing1:loop(false);
	s_rope_swing1:add("rope_swing1.fbxanim");
	s_rope_swing1:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_swing1);
	--}

	--{ Animation: s_rope_swing2
	s_rope_swing2 = addState(rope+rope_rising, "s_rope_swing2");
	s_rope_swing2:blendTime(700);
	s_rope_swing2:loop(false);
	s_rope_swing2:add("rope_swing2.fbxanim");
	s_rope_swing2:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_swing2);
	--}

	--{ Animation: s_rope_swing3
	s_rope_swing3 = addState(rope+rope_backward, "s_rope_swing3");
	s_rope_swing3:blendTime(700);
	s_rope_swing3:loop(false);
	s_rope_swing3:add("rope_swing3.fbxanim");
	s_rope_swing3:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_swing3);
	--}

	--{ Animation: s_rope_swing4
	s_rope_swing4 = addState(rope+rope_backward+rope_rising, "s_rope_swing4");
	s_rope_swing4:blendTime(700);
	s_rope_swing4:loop(false);
	s_rope_swing4:add("rope_swing4.fbxanim");
	s_rope_swing4:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_swing4);
	--}

	--{ Animation: s_rope_long_swing1
	s_rope_long_swing1 = addState(rope+rope_long, "s_rope_long_swing1");
	s_rope_long_swing1:blendTime(700);
	-- s_rope_long_swing1:blendTime(300);
	-- s_rope_long_swing1:speedFactor(0.5);
	s_rope_long_swing1:loop(false);
	s_rope_long_swing1:add("rope_long_swing1.fbxanim");
	-- s_rope_long_swing1:add("rope_swing_start_from_jump.fbxanim");
	s_rope_long_swing1:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_long_swing1);
	--}

	--{ Animation: s_rope_long_swing1_from_jump
	s_rope_long_swing1_from_jump = addState(rope+rope_long, "s_rope_long_swing1_from_jump");
	s_rope_long_swing1_from_jump:from(s_rope_throw_jumping);
	s_rope_long_swing1_from_jump:blendTime(300);
	s_rope_long_swing1_from_jump:loop(false);
	s_rope_long_swing1_from_jump:add("rope_swing_start_from_jump.fbxanim");
	s_rope_long_swing1_from_jump:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_long_swing1_from_jump);
	--}

	--{ Animation: s_rope_long_swing2
	s_rope_long_swing2 = addState(rope+rope_long+rope_rising, "s_rope_long_swing2");
	s_rope_long_swing2:blendTime(700);
	s_rope_long_swing2:loop(false);
	s_rope_long_swing2:add("rope_long_swing2.fbxanim");
	s_rope_long_swing2:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_long_swing2);
	--}

	--{ Animation: s_rope_long_swing3
	s_rope_long_swing3 = addState(rope+rope_long+rope_backward, "s_rope_long_swing3");
	s_rope_long_swing3:blendTime(700);
	s_rope_long_swing3:loop(false);
	s_rope_long_swing3:add("rope_long_swing3.fbxanim");
	s_rope_long_swing3:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_long_swing3);
	--}

	--{ Animation: s_rope_long_swing4
	s_rope_long_swing4 = addState(rope+rope_long+rope_backward+rope_rising, "s_rope_long_swing4");
	s_rope_long_swing4:blendTime(700);
	s_rope_long_swing4:loop(false);
	s_rope_long_swing4:add("rope_long_swing4.fbxanim");
	s_rope_long_swing4:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_long_swing4);
	--}


	--{ Animation: s_rope_slow_swing1
	s_rope_slow_swing1 = addState(rope+rope_slow, "s_rope_slow_swing1");
	s_rope_slow_swing1:blendTime(1200);
	s_rope_slow_swing1:loop(false);
	s_rope_slow_swing1:add("rope_slow_swing1.fbxanim");
	s_rope_slow_swing1:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_slow_swing1);
	--}

	--{ Animation: s_rope_slow_swing2
	s_rope_slow_swing2 = addState(rope+rope_slow+rope_rising, "s_rope_slow_swing2");
	s_rope_slow_swing2:blendTime(1200);
	s_rope_slow_swing2:loop(false);
	s_rope_slow_swing2:add("rope_slow_swing2.fbxanim");
	s_rope_slow_swing2:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_slow_swing2);
	--}

	--{ Animation: s_rope_slow_swing3
	s_rope_slow_swing3 = addState(rope+rope_slow+rope_backward, "s_rope_slow_swing3");
	s_rope_slow_swing3:blendTime(1200);
	s_rope_slow_swing3:loop(false);
	s_rope_slow_swing3:add("rope_slow_swing3.fbxanim");
	s_rope_slow_swing3:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_slow_swing3);
	--}

	--{ Animation: s_rope_slow_swing4
	s_rope_slow_swing4 = addState(rope+rope_slow+rope_backward+rope_rising, "s_rope_slow_swing4");
	s_rope_slow_swing4:blendTime(1200);
	s_rope_slow_swing4:loop(false);
	s_rope_slow_swing4:add("rope_slow_swing4.fbxanim");
	s_rope_slow_swing4:addIKTarget("rope", right_arm_ik);
	table.insert(on_rope, s_rope_slow_swing4);
	--}

	--{ Animation: s_rope_swing_jump
	s_rope_swing_jump = addState(jump, "s_rope_swing_jump");
	s_rope_swing_jump:from(on_rope);
	s_rope_swing_jump:blendTime(300);
	s_rope_swing_jump:loop(false);
	s_rope_swing_jump:add("rope_swing_jump_new.fbxanim");
	-- s_rope_swing_jump:add("rope_swing_jump_turning_left.fbxanim");
	-- table.insert(jumping, s_rope_swing_jump);
	s_rope_swing_jump:addIKTarget("rope", right_arm_ik);
	table.insert(falling, s_rope_swing_jump);
	--}

	--{ Animation: s_rope_swing_jump_turning_left
	s_rope_swing_jump_turning_left = addState(jump, "s_rope_swing_jump_turning_left");
	s_rope_swing_jump_turning_left:from(s_rope_turn_left);
	s_rope_swing_jump_turning_left:from(s_rope_swing_jump_turning_left);
	s_rope_swing_jump_turning_left:blendTime(300);
	s_rope_swing_jump_turning_left:loop(false);

	s_rope_swing_jump_turning_left:add("rope_swing_jump_turning_left.fbxanim");
	s_rope_swing_jump_turning_left:addIKTarget("rope", right_arm_ik);
	table.insert(falling, s_rope_swing_jump_turning_left);
	--}

	--{ Animation: s_rope_swing_jump_turning_right
	s_rope_swing_jump_turning_right = addState(jump, "s_rope_swing_jump_turning_right");
	s_rope_swing_jump_turning_right:from(s_rope_turn_right);
	s_rope_swing_jump_turning_right:from(s_rope_swing_jump_turning_right);
	s_rope_swing_jump_turning_right:blendTime(300);
	s_rope_swing_jump_turning_right:loop(false);

	s_rope_swing_jump_turning_right:add("rope_swing_jump_turning_right.fbxanim");
	s_rope_swing_jump_turning_right:addIKTarget("rope", right_arm_ik);
	table.insert(falling, s_rope_swing_jump_turning_right);
	--}
--}



--{ RUN
	--{ Animation: s_run_start
	s_run_start = addState(run, "s_run_start");
	s_run_start:blendTime(300);
	s_run_start:loop(false);
	--s_run_start:speedFactor(3); 

	-- s_run_start:add("run_and_stop_test_run.fbxanim");
	-- s_run_start:add("run_start_mocap_test5.fbxanim");
	s_run_start:add(slope(-30), "macbeth/m_run_start_down_30.fbxanim");
	s_run_start:add(slope(0), "macbeth/m_run_start_new.fbxanim");
	s_run_start:add(slope(30), "macbeth/m_run_start_up_30.fbxanim");
	-- s_run_start:add(slope(-30), "run_start_down_30.fbxanim");
	-- s_run_start:add(slope(0), "run_start_new.fbxanim");
	-- s_run_start:add(slope(30), "run_start_up_30.fbxanim");
	-- s_run_start:add(rope_force(0), "run_back_rope.fbxanim");
	-- s_run_start:add(rope_force(5), "run_back_rope_force.fbxanim");
	table.insert(running, s_run_start);
	--}



	--{ Animation: s_run_start_turning 
	s_run_start_turning = addState(run+turn_right, "s_run_start_turning");
	s_run_start_turning:blendTime(300);
	s_run_start_turning:loop(false);
	s_run_start_turning:restart(true);
	s_run_start_turning:synchronizedStartTimeGroup(25); --SYNC WITH S_WALK_START_TURNING_LEFT_CROUCHING

	-- s_run_start_turning:add("run_start_turning_right.fbxanim");
	s_run_start_turning:add(slope(-30.0), "macbeth/m_run_start_turning_right_down_30.fbxanim");
	s_run_start_turning:add(slope(0.0), "macbeth/m_run_start_turning_right_new.fbxanim");
	s_run_start_turning:add(slope(30.0), "macbeth/m_run_start_turning_right_up_30.fbxanim");
	-- s_run_start_turning:add(slope(-30.0), "run_start_turning_right_down_30.fbxanim");
	-- s_run_start_turning:add(slope(0.0), "run_start_turning_right_new.fbxanim");
	-- s_run_start_turning:add(slope(30.0), "run_start_turning_right_up_30.fbxanim");
	s_run_start_turning:addExitEvent("EventAnimTurnComplete");
	s_run_start_turning:addFinishedEvent("EventAnimTurnComplete");
	table.insert(running, s_run_start_turning);
	--}

	--{ Animation: s_run_start_turning_left
	s_run_start_turning_left = addState(run+turn_left, "s_run_start_turning_left");
	s_run_start_turning_left:blendTime(300); 
	s_run_start_turning_left:loop(false);
	s_run_start_turning_left:restart(true);
	s_run_start_turning_left:synchronizedStartTimeGroup(26); --SYNC WITH S_WALK_START_TURNING_LEFT_CROUCHING
	-- s_run_start_turning_left:add(slope(-30.0), "run_start_turning_left_down_30.fbxanim");
	-- s_run_start_turning_left:add(slope(0.0), "run_start_turning_left_new.fbxanim");
	-- s_run_start_turning_left:add(slope(30.0), "run_start_turning_left_up_30.fbxanim");
	s_run_start_turning_left:add(slope(-30.0), "macbeth/m_run_start_turning_left_down_30.fbxanim");
	s_run_start_turning_left:add(slope(0.0), "macbeth/m_run_start_turning_left_new.fbxanim");
	s_run_start_turning_left:add(slope(30.0), "macbeth/m_run_start_turning_left_up_30.fbxanim");
	s_run_start_turning_left:addExitEvent("EventAnimTurnComplete");
	s_run_start_turning_left:addFinishedEvent("EventAnimTurnComplete");
	table.insert(running, s_run_start_turning_left);
	--}

	--{ Animation: s_run_from_crouch
	s_run_from_crouch = addState(run, "s_run_from_crouch");
	s_run_from_crouch:blendTime(300);
	s_run_from_crouch:from(crouching);
	s_run_from_crouch:loop(false);
	-- s_run_from_crouch:add("run_and_stop_test_run.fbxanim");
	-- s_run_from_crouch:add("run_from_crouch_mocap_test5.fbxanim");
	s_run_from_crouch:add(slope(-30), "run_from_crouch_down_30.fbxanim");
	s_run_from_crouch:add(slope(0), "run_from_crouch_new.fbxanim");
	s_run_from_crouch:add(slope(30), "run_from_crouch_up_30.fbxanim");
	table.insert(running, s_run_from_crouch);
	--}

	--{ Animation: s_run_turning
	-- s_run_turning = addState(run+turn_right, "s_run_turning");
	-- s_run_turning:from(running);
	-- s_run_turning:blendTime(300);
	-- s_run_turning:loop(false);
	-- s_run_turning:restart(true);
	-- s_run_turning:add("run_turning.fbxanim");
	-- s_run_turning:addExitEvent("EventAnimTurnComplete");
	-- s_run_turning:addFinishedEvent("EventAnimTurnComplete");
	-- table.insert(running, s_run_turning);
	--}

	--{ Animation: s_run
	s_run = addState(run, "s_run");
	s_run:from(running);
	s_run:synchronizedStartTimeGroup(5);
	s_run:blendTime(200);
	--s_run:speedFactor(3);
	s_run:loopBlendTime(200);
	s_run:loop(true);
	-- s_run:add(run_lean(0.0), "run.fbxanim");
	s_run:add(slope(-30.0), "macbeth/m_run_down_30.fbxanim");
	s_run:add(slope(0.0), "macbeth/m_run_new.fbxanim");
	s_run:add(slope(30.0), "macbeth/m_run_up_30.fbxanim");
	-- s_run:add(slope(-30.0), "run_down_30.fbxanim");
	-- s_run:add(slope(0.0), "run_new.fbxanim");
	-- s_run:add(slope(30.0), "run_up_30.fbxanim");
	table.insert(running, s_run);
	--}

	--{ Animation: s_run_lean
	s_run_lean = addState(run, "s_run_lean", 2);
	s_run_lean:blendTime(300);
	s_run_lean:loop(true);
	s_run_lean:add(run_lean(2.0), "run_lean_right.fbxanim");
	s_run_lean:add(run_lean(1.1), "run_lean_right.fbxanim");
	s_run_lean:add(run_lean(0.0), "run_lean_ref.fbxanim");
	s_run_lean:add(run_lean(-1.1), "run_lean_left.fbxanim");
	s_run_lean:add(run_lean(-2.0), "run_lean_left.fbxanim");
	-- s_run_lean:add(turn_angle(100), "run_lean_right.fbxanim");
	-- s_run_lean:add(turn_angle(70), "run_lean_right.fbxanim");
	-- s_run_lean:add(turn_angle(0.0), "run_lean_ref.fbxanim");
	-- s_run_lean:add(turn_angle(-70), "run_lean_left.fbxanim");
	-- s_run_lean:add(turn_angle(-100), "run_lean_left.fbxanim");
	-- s_run_lean:add("run_lean_ref.fbxanim");
	s_run_lean:addReference("run_lean_ref.fbxanim");
	--}

	--{ Animation: s_layer2_default
	s_layer2_default = addState(default, "s_layer2_default", 2);
	s_layer2_default:blendTime(300);
	s_layer2_default:loop(true);
	s_layer2_default:add("run_lean_ref.fbxanim");
	s_layer2_default:addReference("run_lean_ref.fbxanim");
	--}

	-- NOTE: This state exists to prevent run_leaning while dragging corpses
	--{ Animation: s_layer2_drag_corpse
	s_layer2_drag_corpse = addState(drag_corpse, "s_layer2_drag_corpse", 2);
	s_layer2_drag_corpse:blendTime(300);
	s_layer2_drag_corpse:loop(true);
	s_layer2_drag_corpse:add("run_lean_ref.fbxanim");
	s_layer2_drag_corpse:addReference("run_lean_ref.fbxanim");
	--}

	--{ Animation: s_run_combat_lean
	s_run_combat_lean = addState(run+combat, "s_run_combat_lean", 2);
	s_run_combat_lean:blendTime(300);
	s_run_combat_lean:loop(true);
	s_run_combat_lean:add("run_lean_ref.fbxanim");
	s_run_combat_lean:addReference("run_lean_ref.fbxanim");
	--}

	--{ Animation: s_run_rope_attached_lean
	s_run_rope_attached_lean = addState(run+rope_attached, "s_run_rope_attached_lean", 2);
	s_run_rope_attached_lean:blendTime(300);
	s_run_rope_attached_lean:loop(true);
	s_run_rope_attached_lean:add("run_lean_ref.fbxanim");
	s_run_rope_attached_lean:addReference("run_lean_ref.fbxanim");
	--}
--{

--{			SWIM CURVE

	--{ Animation: s_swim_curvature
	s_swim_curvature = addState(swim, "s_swim_curvature", 2);
	s_swim_curvature:blendTime(100);
	s_swim_curvature:loop(false);
	s_swim_curvature:add(swim_curvature_horizontal(2.0), "water_swim_curve_right.fbxanim");
	s_swim_curvature:add(swim_curvature_horizontal(0.7), "water_swim_curve_right.fbxanim");
	s_swim_curvature:add(swim_curvature_horizontal(0.0), "water_swim_curve_base.fbxanim");
	s_swim_curvature:add(swim_curvature_horizontal(-0.7), "water_swim_curve_left.fbxanim");
	s_swim_curvature:add(swim_curvature_horizontal(-2.0), "water_swim_curve_left.fbxanim");
	s_swim_curvature:addReference("water_swim_curve_base.fbxanim");
	--}

	--{ Animation: s_swim_curvature_vertical
	s_swim_curvature_vertical = addState(swim, "s_swim_curvature_vertical", 3);
	s_swim_curvature_vertical:blendTime(600);
	s_swim_curvature_vertical:loop(false);
	s_swim_curvature_vertical:add(swim_curvature_vertical(2.0), "water_swim_curve_up.fbxanim");
	s_swim_curvature_vertical:add(swim_curvature_vertical(0.7), "water_swim_curve_up.fbxanim");
	s_swim_curvature_vertical:add(swim_curvature_vertical(0.0), "water_swim_curve_base.fbxanim");
	s_swim_curvature_vertical:add(swim_curvature_vertical(-0.7), "water_swim_curve_down.fbxanim");
	s_swim_curvature_vertical:add(swim_curvature_vertical(-2.0), "water_swim_curve_down.fbxanim");
	s_swim_curvature_vertical:addReference("water_swim_curve_base.fbxanim");
	--}

	--{ Animation: s_layer3_default
	s_layer3_default = addState(default, "s_layer3_default", 3);
	s_layer3_default:blendTime(600);
	s_layer3_default:loop(true);
	s_layer3_default:add("water_swim_curve_base.fbxanim");
	s_layer3_default:addReference("water_swim_curve_base.fbxanim");
	--}

	--{ Animation: s_swim_direction_vertical
	s_swim_direction_vertical = addState(swim, "s_swim_direction_vertical", 4);
	s_swim_direction_vertical:blendTime(1000);
	s_swim_direction_vertical:loop(false);
	s_swim_direction_vertical:add(swim_direction_vertical(180), "water_swim_direction_up.fbxanim");
	s_swim_direction_vertical:add(swim_direction_vertical(90), "water_swim_direction_up.fbxanim");
	s_swim_direction_vertical:add(swim_direction_vertical(0.0), "water_swim_curve_base.fbxanim");
	s_swim_direction_vertical:add(swim_direction_vertical(-90), "water_swim_direction_down.fbxanim");
	s_swim_direction_vertical:add(swim_direction_vertical(-180), "water_swim_direction_down.fbxanim");
	s_swim_direction_vertical:addReference("water_swim_curve_base.fbxanim");
	--}

	--{ Animation: s_layer4_default
	s_layer4_default = addState(default, "s_layer4_default", 4);
	s_layer4_default:blendTime(1000);
	s_layer4_default:loop(true);
	s_layer4_default:add("water_swim_curve_base.fbxanim");
	s_layer4_default:addReference("water_swim_curve_base.fbxanim");
	--}

--}


--{JUMPS
	--{ Animation: s_jump_inplace
	s_jump_inplace = addState(jump, "s_jump_inplace");
	s_jump_inplace:from(standing);
	s_jump_inplace:synchronizedStartTimeGroup(20);
	s_jump_inplace:blendTime(150);
	s_jump_inplace:loop(false);
	s_jump_inplace:add("jump_inplace.fbxanim");
	table.insert(jumping, s_jump_inplace);
	--}

	--{ Animation: s_jump
	s_jump = addState(jump, "s_jump");
	s_jump:synchronizedStartTimeGroup(20);
	s_jump:transitionFilterTime(0);
	s_jump:blendTime(150);
	s_jump:loop(false);
	s_jump:restart(true);
	-- s_jump:add("jump_temp.fbxanim");
	s_jump:add("jump_new.fbxanim");
	-- s_jump:add("jump_wall_run_up.fbxanim");
	table.insert(jumping, s_jump);
	--}

	--{ Animation: s_jump2
	s_jump2 = addState(jump, "s_jump2");
	s_jump2:from(s_jump);
	s_jump2:blendTime(150);
	s_jump2:transitionFilterTime(0);
	s_jump2:loop(false);

	s_jump:restart(true);
	-- s_jump2:add("jump_temp.fbxanim");
	s_jump2:add("jump_new.fbxanim");
	-- s_jump2:add("jump_wall_run_up.fbxanim");
	table.insert(jumping, s_jump2);
	--}

	--{ Animation: s_jump_wall_up
	-- s_jump_wall_up = addState(jump+wall_up, "s_jump_wall_up");
	-- s_jump_wall_up:blendTime(200);
	-- s_jump_wall_up:loop(false);
	-- s_jump_wall_up:add("jump_wall_run_up.fbxanim");
	-- table.insert(jumping, s_jump_wall_up);
	--}

	--{ Animation: s_turn_in_air
	s_turn_in_air = addState(fall+turn_right, "s_turn_in_air");
	s_turn_in_air:from(jumping);
	s_turn_in_air:from(falling);
	s_turn_in_air:restart(true);
	s_turn_in_air:blendTime(20);
	s_turn_in_air:loop(false);
	s_turn_in_air:add("turn_in_air.fbxanim");
	s_turn_in_air:addExitEvent("EventAnimTurnComplete");
	s_turn_in_air:addFinishedEvent("EventAnimTurnComplete");
	table.insert(jumping, s_turn_in_air);
	--}
--}


--{ LEDGE


	--{ Animation: s_ledge_grab
	s_ledge_grab = addState(ledge, "s_ledge_grab");
	s_ledge_grab:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_grab:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_grab:absoluteRootMotionPosition(true);
	s_ledge_grab:absoluteRootMotionRotation(true);
	s_ledge_grab:blendTime(250);
	s_ledge_grab:loop(false);
	s_ledge_grab:add(ledge_angle(45), "ledge_grab_up_45.fbxanim");
	s_ledge_grab:add(ledge_angle(0), "ledge_grab_forward.fbxanim");
	s_ledge_grab:add(ledge_angle(-45), "ledge_grab_down_45.fbxanim");
	-- s_ledge_grab:add(ledge_angle(-45), "ledge_look_back.fbxanim");
	table.insert(on_ledge, s_ledge_grab);
	--}

	--{ Animation: s_ledge_grab_from_hang
	s_ledge_grab_from_hang = addState(ledge, "s_ledge_grab_from_hang");
	s_ledge_grab_from_hang:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_grab_from_hang:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_grab_from_hang:absoluteRootMotionPosition(true);
	s_ledge_grab_from_hang:absoluteRootMotionRotation(true);
	s_ledge_grab_from_hang:from(hanging);
	s_ledge_grab_from_hang:blendTime(500);
	s_ledge_grab_from_hang:loop(false);
	s_ledge_grab_from_hang:add(ledge_angle(45), "ledge_grab_from_hang_up_45.fbxanim");
	s_ledge_grab_from_hang:add(ledge_angle(0), "ledge_grab_from_hang_forward.fbxanim");
	s_ledge_grab_from_hang:add(ledge_angle(-45), "ledge_grab_from_hang_down_45.fbxanim");
	table.insert(on_ledge, s_ledge_grab_from_hang);
	--}

	--{ Animation: s_ledge_grab_loop
	s_ledge_grab_loop = addState(ledge, "s_ledge_grab_loop");
	s_ledge_grab_loop:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_grab_loop:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_grab_loop:absoluteRootMotionPosition(true);
	s_ledge_grab_loop:absoluteRootMotionRotation(true);
	s_ledge_grab_loop:from(on_ledge);
	s_ledge_grab_loop:blendTime(300);
	s_ledge_grab_loop:loopBlendTime(300);
	s_ledge_grab_loop:loop(true);
	s_ledge_grab_loop:add(ledge_angle(45), "ledge_grab_loop_up_45.fbxanim");
	s_ledge_grab_loop:add(ledge_angle(0), "ledge_grab_loop_forward.fbxanim");
	s_ledge_grab_loop:add(ledge_angle(-45), "ledge_grab_loop_down_45.fbxanim");
	table.insert(on_ledge, s_ledge_grab_loop);
	--}


	--{ Animation: s_ledge_look_back
	s_ledge_look_back = addState(ledge+l_look_back, "s_ledge_look_back");
	s_ledge_look_back:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_look_back:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_look_back:absoluteRootMotionPosition(true);
	s_ledge_look_back:absoluteRootMotionRotation(true);
	s_ledge_look_back:blendTime(200);
	s_ledge_look_back:loop(false);
	s_ledge_look_back:add("ledge_look_back.fbxanim");
	table.insert(on_ledge, s_ledge_look_back);
	--}

	--{ Animation: s_ledge_look_left
	s_ledge_look_left = addState(ledge+l_look_left, "s_ledge_look_left");
	s_ledge_look_left:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_look_left:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_look_left:absoluteRootMotionPosition(true);
	s_ledge_look_left:absoluteRootMotionRotation(true);
	s_ledge_look_left:blendTime(200);
	s_ledge_look_left:loop(false);
	s_ledge_look_left:add("ledge_look_left.fbxanim");
	table.insert(on_ledge, s_ledge_look_left);
	--}

	--{ Animation: s_ledge_look_right
	s_ledge_look_right = addState(ledge+l_look_right, "s_ledge_look_right");
	s_ledge_look_right:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_look_right:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_look_right:absoluteRootMotionPosition(true);
	s_ledge_look_right:absoluteRootMotionRotation(true);
	s_ledge_look_right:blendTime(200);
	s_ledge_look_right:loop(false);
	s_ledge_look_right:add("ledge_look_right.fbxanim");
	table.insert(on_ledge, s_ledge_look_right);
	--}

	--{ Animation: s_ledge_hang_from_stand
	s_ledge_hang_from_stand = addState(ledge+hang, "s_ledge_hang_from_stand");
	s_ledge_hang_from_stand:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_hang_from_stand:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_hang_from_stand:addExitEvent("EventAnimDescendFinished");
	s_ledge_hang_from_stand:addFinishedEvent("EventAnimDescendFinished");
	s_ledge_hang_from_stand:absoluteRootMotionPosition(true);
	s_ledge_hang_from_stand:absoluteRootMotionRotation(true);
	s_ledge_hang_from_stand:blendTime(150);
	s_ledge_hang_from_stand:from(standing);
	s_ledge_hang_from_stand:from(running);
	s_ledge_hang_from_stand:loop(false);
	s_ledge_hang_from_stand:add(ledge_angle(45), "ledge_from_stand_start_up_45.fbxanim");
	s_ledge_hang_from_stand:add(ledge_angle(0), "ledge_from_stand_start_forward.fbxanim");
	s_ledge_hang_from_stand:add(ledge_angle(-45), "ledge_from_stand_start_down_45.fbxanim");
	table.insert(on_ledge, s_ledge_hang_from_stand);
	--}

	--{ Animation: s_ledge_hang_from_stand_turning
	s_ledge_hang_from_stand_turning = addState(ledge+hang+turn_right, "s_ledge_hang_from_stand_turning");
	s_ledge_hang_from_stand_turning:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_hang_from_stand_turning:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_hang_from_stand_turning:addExitEvent("EventAnimDescendFinished");
	s_ledge_hang_from_stand_turning:addFinishedEvent("EventAnimDescendFinished");
	s_ledge_hang_from_stand_turning:absoluteRootMotionPosition(true);
	s_ledge_hang_from_stand_turning:absoluteRootMotionRotation(true);
	s_ledge_hang_from_stand_turning:blendTime(150);
	s_ledge_hang_from_stand_turning:from(standing);
	s_ledge_hang_from_stand_turning:from(running);
	s_ledge_hang_from_stand_turning:loop(false);
	s_ledge_hang_from_stand_turning:add(ledge_angle(45), "ledge_from_stand_start_turning_up_45.fbxanim");
	s_ledge_hang_from_stand_turning:add(ledge_angle(0), "ledge_from_stand_start_turning_forward.fbxanim");
	s_ledge_hang_from_stand_turning:add(ledge_angle(-45), "ledge_from_stand_start_turning_down_45.fbxanim");
	table.insert(on_ledge, s_ledge_hang_from_stand_turning);
	--}

	--{ Animation: s_ledge_hang_from_stand_turning_left
	s_ledge_hang_from_stand_turning_left = addState(ledge+hang+turn_left, "s_ledge_hang_from_stand_turning_left");
	s_ledge_hang_from_stand_turning_left:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_hang_from_stand_turning_left:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_hang_from_stand_turning_left:addExitEvent("EventAnimDescendFinished");
	s_ledge_hang_from_stand_turning_left:addFinishedEvent("EventAnimDescendFinished");
	s_ledge_hang_from_stand_turning_left:absoluteRootMotionPosition(true);
	s_ledge_hang_from_stand_turning_left:absoluteRootMotionRotation(true);
	s_ledge_hang_from_stand_turning_left:blendTime(150);
	s_ledge_hang_from_stand_turning_left:from(standing);
	s_ledge_hang_from_stand_turning_left:from(running);
	s_ledge_hang_from_stand_turning_left:loop(false);
	s_ledge_hang_from_stand_turning_left:add(ledge_angle(45), "ledge_from_stand_start_turning_up_45.fbxanim");
	s_ledge_hang_from_stand_turning_left:add(ledge_angle(0), "ledge_from_stand_start_turning_forward.fbxanim");
	s_ledge_hang_from_stand_turning_left:add(ledge_angle(-45), "ledge_from_stand_start_turning_down_45.fbxanim");
	table.insert(on_ledge, s_ledge_hang_from_stand_turning_left);
	--}

	--{ Animation: s_ledge_grab_hang_start
	s_ledge_grab_hang_start = addState(ledge+hang, "s_ledge_grab_hang_start");
	s_ledge_grab_hang_start:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_grab_hang_start:addEnterEvent("EventAnimEnableRootMotionY");
	-- s_ledge_grab_hang_start:addFinishedEvent("EventAnimRootMotionFinished");
	s_ledge_grab_hang_start:addIKTarget("ledge_left", left_arm_ik)
	s_ledge_grab_hang_start:addIKTarget("ledge_right", right_arm_ik)
	s_ledge_grab_hang_start:absoluteRootMotionPosition(true);
	s_ledge_grab_hang_start:absoluteRootMotionRotation(true);
	s_ledge_grab_hang_start:blendTime(200);
	s_ledge_grab_hang_start:loop(false);
	s_ledge_grab_hang_start:add("ledge_grab_hang_start.fbxanim");
	-- s_ledge_grab_hang_start:add("ledge_hang_move_right_end.fbxanim");
	table.insert(hanging, s_ledge_grab_hang_start);
	--}


	--{ Animation: s_ledge_grab_hang
	s_ledge_grab_hang = addState(ledge+hang, "s_ledge_grab_hang");
	s_ledge_grab_hang:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_grab_hang:addEnterEvent("EventAnimEnableRootMotionY");
	-- s_ledge_grab_hang:addFinishedEvent("EventAnimRootMotionFinished");
	s_ledge_grab_hang:addIKTarget("ledge_left", left_arm_ik)
	s_ledge_grab_hang:addIKTarget("ledge_right", right_arm_ik)
	s_ledge_grab_hang:absoluteRootMotionPosition(true);
	s_ledge_grab_hang:absoluteRootMotionRotation(true);
	s_ledge_grab_hang:from(hanging);
	s_ledge_grab_hang:blendTime(200);
	s_ledge_grab_hang:loop(true);
	s_ledge_grab_hang:loopBlendTime(200);
	s_ledge_grab_hang:add("ledge_grab_hang.fbxanim");
	table.insert(hanging, s_ledge_grab_hang);
	--}

	--{ Animation: s_ledge_grab_hang_from_support
	s_ledge_grab_hang_from_support = addState(ledge+hang, "s_ledge_grab_hang_from_support");
	s_ledge_grab_hang_from_support:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_grab_hang_from_support:addEnterEvent("EventAnimEnableRootMotionY");
	-- s_ledge_grab_hang_from_support:addFinishedEvent("EventAnimRootMotionFinished");
	s_ledge_grab_hang_from_support:addIKTarget("ledge_left", left_arm_ik)
	s_ledge_grab_hang_from_support:addIKTarget("ledge_right", right_arm_ik)
	s_ledge_grab_hang_from_support:absoluteRootMotionPosition(true);
	s_ledge_grab_hang_from_support:absoluteRootMotionRotation(true);
	s_ledge_grab_hang_from_support:from(on_ledge);
	s_ledge_grab_hang_from_support:blendTime(300);
	s_ledge_grab_hang_from_support:loop(false);
	s_ledge_grab_hang_from_support:add("ledge_grab_hang_from_support.fbxanim");
	table.insert(hanging, s_ledge_grab_hang_from_support);
	--}

	--{ Animation: s_ledge_losing_grip
	s_ledge_losing_grip = addState(ledge+losing_grip+hang, "s_ledge_losing_grip");
	-- s_ledge_losing_grip:addEnterEvent("EventAnimEnableRootMotionX");
	-- s_ledge_losing_grip:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_losing_grip:absoluteRootMotionPosition(true);
	s_ledge_losing_grip:absoluteRootMotionRotation(true);
	s_ledge_losing_grip:blendTime(200);
	s_ledge_losing_grip:loop(false);
	s_ledge_losing_grip:add("ledge_loose_grip.fbxanim");
	table.insert(hanging, s_ledge_losing_grip);
	--}

	--{ Animation: s_ledge_losing_grip_arm
	s_ledge_losing_grip_arm = addState(ledge+losing_grip, "s_ledge_losing_grip_arm");
	s_ledge_losing_grip_arm:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_losing_grip_arm:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_losing_grip_arm:absoluteRootMotionPosition(true);
	s_ledge_losing_grip_arm:absoluteRootMotionRotation(true);
	s_ledge_losing_grip_arm:blendTime(200);
	s_ledge_losing_grip_arm:loop(false);
	s_ledge_losing_grip_arm:add("ledge_loose_grip_arm.fbxanim");
	table.insert(on_ledge, s_ledge_losing_grip_arm);
	--}

	--{ Animation: s_ledge_swing_slow_forward
	s_ledge_swing_slow_forward = addState(ledge+swing_forward+swing_slow, "s_ledge_swing_slow_forward");
	s_ledge_swing_slow_forward:absoluteRootMotionPosition(true);
	s_ledge_swing_slow_forward:absoluteRootMotionRotation(true);
	s_ledge_swing_slow_forward:blendTime(400);
	s_ledge_swing_slow_forward:loop(false);
	s_ledge_swing_slow_forward:add("ledge_swing1_slow.fbxanim");
	--}

	--{ Animation: s_ledge_swing_slow_backward
	s_ledge_swing_slow_backward = addState(ledge+swing_backward+swing_slow, "s_ledge_swing_slow_backward");
	s_ledge_swing_slow_backward:absoluteRootMotionPosition(true);
	s_ledge_swing_slow_backward:absoluteRootMotionRotation(true);
	s_ledge_swing_slow_backward:blendTime(400);
	s_ledge_swing_slow_backward:loop(false);
	s_ledge_swing_slow_backward:add("ledge_swing2_slow.fbxanim");
	--}

	--{ Animation: s_ledge_swing_forward_start
	s_ledge_swing_forward_start = addState(ledge+swing_forward, "s_ledge_swing_forward_start");
	s_ledge_swing_forward_start:absoluteRootMotionPosition(true);
	s_ledge_swing_forward_start:absoluteRootMotionRotation(true);
	s_ledge_swing_forward_start:blendTime(600);
	s_ledge_swing_forward_start:loop(false);
	-- s_ledge_swing_forward_start:add("ledge_swing2_slow.fbxanim");
	s_ledge_swing_forward_start:add("ledge_swing1_start.fbxanim");
	--}

	--{ Animation: s_ledge_swing_backward
	s_ledge_swing_backward = addState(ledge+swing_backward, "s_ledge_swing_backward");
	s_ledge_swing_backward:absoluteRootMotionPosition(true);
	s_ledge_swing_backward:absoluteRootMotionRotation(true);
	s_ledge_swing_backward:blendTime(600);
	s_ledge_swing_backward:loop(false);
	-- s_ledge_swing_backward:add("ledge_swing2_slow.fbxanim");
	s_ledge_swing_backward:add("ledge_swing2.fbxanim");
	--}

	--{ Animation: s_ledge_swing_forward
	s_ledge_swing_forward = addState(ledge+swing_forward, "s_ledge_swing_forward");
	s_ledge_swing_forward:absoluteRootMotionPosition(true);
	s_ledge_swing_forward:absoluteRootMotionRotation(true);
	s_ledge_swing_forward:from(s_ledge_swing_backward);
	s_ledge_swing_forward:blendTime(600);
	s_ledge_swing_forward:loop(false);
	s_ledge_swing_forward:add("ledge_swing1.fbxanim");
	-- s_ledge_swing_forward:add("ledge_swing2_slow.fbxanim");
	--}

	--{ Animation: s_ledge_from_stand
	s_ledge_from_stand = addState(ledge, "s_ledge_from_stand");
	s_ledge_from_stand:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_from_stand:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_from_stand:addExitEvent("EventAnimDescendFinished");
	s_ledge_from_stand:addFinishedEvent("EventAnimDescendFinished");
	s_ledge_from_stand:absoluteRootMotionPosition(true);
	s_ledge_from_stand:absoluteRootMotionRotation(true);
	s_ledge_from_stand:blendTime(250);
	s_ledge_from_stand:from(standing);
	s_ledge_from_stand:loop(false);
	s_ledge_from_stand:add(ledge_angle(45), "ledge_from_stand_up_45.fbxanim");
	s_ledge_from_stand:add(ledge_angle(0), "ledge_from_stand_forward.fbxanim");
	s_ledge_from_stand:add(ledge_angle(-45), "ledge_from_stand_down_45.fbxanim");
	table.insert(on_ledge, s_ledge_from_stand);
	--}


	--{ Animation: s_ledge_from_stand_turning
	s_ledge_from_stand_turning = addState(ledge+turn_right, "s_ledge_from_stand_turning");
	s_ledge_from_stand_turning:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_from_stand_turning:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_from_stand_turning:addExitEvent("EventAnimDescendFinished");
	s_ledge_from_stand_turning:addFinishedEvent("EventAnimDescendFinished");
	s_ledge_from_stand_turning:absoluteRootMotionPosition(true);
	s_ledge_from_stand_turning:absoluteRootMotionRotation(true);
	s_ledge_from_stand_turning:blendTime(250);
	s_ledge_from_stand_turning:from(standing);
	s_ledge_from_stand_turning:from(running);
	s_ledge_from_stand_turning:loop(false);
	s_ledge_from_stand_turning:add(ledge_angle(45), "ledge_from_stand_turning_up_45.fbxanim");
	s_ledge_from_stand_turning:add(ledge_angle(0), "ledge_from_stand_turning_forward.fbxanim");
	s_ledge_from_stand_turning:add(ledge_angle(-45), "ledge_from_stand_turning_down_45.fbxanim");
	table.insert(on_ledge, s_ledge_from_stand_turning);
	--}

	--{ Animation: s_ledge_from_stand_turning_left
	s_ledge_from_stand_turning_left = addState(ledge+turn_left, "s_ledge_from_stand_turning_left");
	s_ledge_from_stand_turning_left:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_from_stand_turning_left:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_from_stand_turning_left:addExitEvent("EventAnimDescendFinished");
	s_ledge_from_stand_turning_left:addFinishedEvent("EventAnimDescendFinished");
	s_ledge_from_stand_turning_left:absoluteRootMotionPosition(true);
	s_ledge_from_stand_turning_left:absoluteRootMotionRotation(true);
	s_ledge_from_stand_turning_left:blendTime(250);
	s_ledge_from_stand_turning_left:from(standing);
	s_ledge_from_stand_turning_left:from(running);
	s_ledge_from_stand_turning_left:loop(false);
	s_ledge_from_stand_turning_left:add(ledge_angle(45), "ledge_from_stand_turning_up_45.fbxanim");
	s_ledge_from_stand_turning_left:add(ledge_angle(0), "ledge_from_stand_turning_forward.fbxanim");
	s_ledge_from_stand_turning_left:add(ledge_angle(-45), "ledge_from_stand_turning_down_45.fbxanim");
	table.insert(on_ledge, s_ledge_from_stand_turning_left);
	--}


	--{ Animation: s_ledge_from_stand_turn
	s_ledge_from_stand_turn = addState(turn_right+ledge+drop_down, "s_ledge_from_stand_turn");
	s_ledge_from_stand_turn:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_from_stand_turn:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_from_stand_turn:addExitEvent("EventAnimDescendFinished");
	s_ledge_from_stand_turn:addFinishedEvent("EventAnimDescendFinished");
	s_ledge_from_stand_turn:absoluteRootMotionPosition(true);
	s_ledge_from_stand_turn:absoluteRootMotionRotation(true);
	s_ledge_from_stand_turn:blendTime(1050);
	s_ledge_from_stand_turn:loop(false);
	s_ledge_from_stand_turn:add("ledge_from_stand.fbxanim");
	s_ledge_from_stand_turn:addExitEvent("EventAnimTurnComplete");
	s_ledge_from_stand_turn:addFinishedEvent("EventAnimTurnComplete");
	table.insert(on_ledge, s_ledge_from_stand_turn);
	--}

	--{ Animation: s_ledge_move_left_start
	s_ledge_move_left_start = addState(ledge+move_left, "s_ledge_move_left_start");
	s_ledge_move_left_start:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_move_left_start:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_move_left_start:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_move_left_start:addExitEvent("EventAnimUpdatePosition");
	s_ledge_move_left_start:absoluteRootMotionPosition(true);
	s_ledge_move_left_start:absoluteRootMotionRotation(true);
	s_ledge_move_left_start:blendTime(300);
	s_ledge_move_left_start:loop(false);
	s_ledge_move_left_start:add("macbeth/m_ledge_move_left_start.fbxanim");
	--s_ledge_move_left_start:add("ledge_move_left_start.fbxanim");
	table.insert(on_ledge, s_ledge_move_left_start);
	--}

	--{ Animation: s_ledge_move_left_corner_out
	s_ledge_move_left_corner_out = addState(ledge+move_left+corner_out, "s_ledge_move_left_corner_out");
	s_ledge_move_left_corner_out:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_move_left_corner_out:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_move_left_corner_out:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_move_left_corner_out:addExitEvent("EventAnimUpdatePosition");
	s_ledge_move_left_corner_out:absoluteRootMotionPosition(true);
	s_ledge_move_left_corner_out:absoluteRootMotionRotation(true);
	s_ledge_move_left_corner_out:blendTime(200);
	s_ledge_move_left_corner_out:restart(true);
	s_ledge_move_left_corner_out:add("macbeth/m_ledge_move_left_corner_out.fbxanim");
	--s_ledge_move_left_corner_out:add("ledge_move_left_corner_out.fbxanim");
	table.insert(on_ledge, s_ledge_move_left_corner_out);
	--} 

	--{ Animation: s_ledge_move_left_corner_in
	s_ledge_move_left_corner_in = addState(ledge+move_left+corner_in, "s_ledge_move_left_corner_in");
	s_ledge_move_left_corner_in:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_move_left_corner_in:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_move_left_corner_in:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_move_left_corner_in:addExitEvent("EventAnimUpdatePosition");
	s_ledge_move_left_corner_in:absoluteRootMotionPosition(true);
	s_ledge_move_left_corner_in:absoluteRootMotionRotation(true); 
	s_ledge_move_left_corner_in:blendTime(200);
	s_ledge_move_left_corner_in:restart(true);
	s_ledge_move_left_corner_in:add("macbeth/m_ledge_move_left_corner_in.fbxanim");
	--s_ledge_move_left_corner_in:add("ledge_move_left_corner_in.fbxanim");
	table.insert(on_ledge, s_ledge_move_left_corner_in);
	--}

	--{ Animation: s_ledge_move_left
	s_ledge_move_left = addState(ledge+move_left, "s_ledge_move_left");
	s_ledge_move_left:from(s_ledge_move_left_start); 
	s_ledge_move_left:from(s_ledge_move_left);
	s_ledge_move_left:from(s_ledge_move_left_corner_out);
	s_ledge_move_left:from(s_ledge_move_left_corner_in);
	s_ledge_move_left:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_move_left:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_move_left:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_move_left:addExitEvent("EventAnimUpdatePosition");
	s_ledge_move_left:absoluteRootMotionPosition(true);
	s_ledge_move_left:absoluteRootMotionRotation(true);
	s_ledge_move_left:blendTime(300);
	s_ledge_move_left:restart(true);
	s_ledge_move_left:add("macbeth/m_ledge_move_left.fbxanim");
	--s_ledge_move_left:add("ledge_move_left.fbxanim");
	table.insert(on_ledge, s_ledge_move_left);
	--}

	 
	--{ Animation: s_ledge_move_left_end
	s_ledge_move_left_end = addState(ledge, "s_ledge_move_left_end");
	s_ledge_move_left_end:from(s_ledge_move_left_start);
	s_ledge_move_left_end:from(s_ledge_move_left);
	s_ledge_move_left_end:from(s_ledge_move_left_corner_out);
	s_ledge_move_left_end:from(s_ledge_move_left_corner_in);
	s_ledge_move_left_end:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_move_left_end:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_move_left_end:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_move_left_end:addExitEvent("EventAnimUpdatePosition");
	s_ledge_move_left_end:absoluteRootMotionPosition(true);
	s_ledge_move_left_end:absoluteRootMotionRotation(true);
	s_ledge_move_left_end:blendTime(300);
	s_ledge_move_left_end:restart(true);
	s_ledge_move_left_end:add("macbeth/m_ledge_move_left_end.fbxanim");
	table.insert(on_ledge, s_ledge_move_left_end);
	--}
	

	--{ Animation: s_ledge_hang_move_right_start
	s_ledge_hang_move_right_start = addState(ledge+hang+move_right, "s_ledge_hang_move_right_start");
	s_ledge_hang_move_right_start:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_hang_move_right_start:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_hang_move_right_start:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_right_start:addExitEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_right_start:absoluteRootMotionPosition(true);
	s_ledge_hang_move_right_start:absoluteRootMotionRotation(true);
	s_ledge_hang_move_right_start:blendTime(300);
	s_ledge_hang_move_right_start:loop(false);
	s_ledge_hang_move_right_start:add("ledge_hang_move_right.fbxanim");
	table.insert(on_ledge, s_ledge_hang_move_right_start);
	--}

	--{ Animation: s_ledge_hang_move_right_corner_in
	s_ledge_hang_move_right_corner_in = addState(ledge+hang+move_right+corner_in, "s_ledge_hang_move_right_corner_in");
	s_ledge_hang_move_right_corner_in:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_hang_move_right_corner_in:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_hang_move_right_corner_in:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_right_corner_in:addExitEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_right_corner_in:absoluteRootMotionPosition(true);
	s_ledge_hang_move_right_corner_in:absoluteRootMotionRotation(true);
	s_ledge_hang_move_right_corner_in:blendTime(300);
	s_ledge_hang_move_right_corner_in:loop(false);
	s_ledge_hang_move_right_corner_in:add("ledge_hang_move_right_corner_in.fbxanim");
	table.insert(on_ledge, s_ledge_hang_move_right_corner_in);
	--}


	--{ Animation: s_ledge_hang_move_right_corner_out
	s_ledge_hang_move_right_corner_out = addState(ledge+hang+move_right+corner_out, "s_ledge_hang_move_right_corner_out");
	s_ledge_hang_move_right_corner_out:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_hang_move_right_corner_out:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_hang_move_right_corner_out:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_right_corner_out:addExitEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_right_corner_out:absoluteRootMotionPosition(true);
	s_ledge_hang_move_right_corner_out:absoluteRootMotionRotation(true);
	s_ledge_hang_move_right_corner_out:blendTime(300);
	s_ledge_hang_move_right_corner_out:loop(false);
	s_ledge_hang_move_right_corner_out:add("ledge_hang_move_right_corner_out.fbxanim");
	table.insert(on_ledge, s_ledge_hang_move_right_corner_out);
	--}

	--{ Animation: s_ledge_hang_move_right_loop
	s_ledge_hang_move_right_loop = addState(ledge+hang+move_right, "s_ledge_hang_move_right_loop");
	s_ledge_hang_move_right_loop:from(s_ledge_hang_move_right_start);
	s_ledge_hang_move_right_loop:from(s_ledge_hang_move_right_corner_out);
	s_ledge_hang_move_right_loop:from(s_ledge_hang_move_right_corner_in);
	s_ledge_hang_move_right_loop:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_hang_move_right_loop:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_hang_move_right_loop:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_right_loop:addExitEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_right_loop:absoluteRootMotionPosition(true);
	s_ledge_hang_move_right_loop:absoluteRootMotionRotation(true);
	s_ledge_hang_move_right_loop:blendTime(300);
	s_ledge_hang_move_right_loop:loop(false);
	s_ledge_hang_move_right_loop:restart(true);
	s_ledge_hang_move_right_loop:add("ledge_hang_move_right_loop.fbxanim");
	table.insert(on_ledge, s_ledge_hang_move_right_loop);
	--}

	--{ Animation: s_ledge_hang_move_right_end
	s_ledge_hang_move_right_end = addState(ledge+hang, "s_ledge_hang_move_right_end");
	s_ledge_hang_move_right_end:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_hang_move_right_end:addEnterEvent("EventAnimEnableRootMotionY");
	-- s_ledge_hang_move_right_end:addFinishedEvent("EventAnimRootMotionFinished");
	s_ledge_hang_move_right_end:addIKTarget("ledge_left", left_arm_ik)
	s_ledge_hang_move_right_end:addIKTarget("ledge_right", right_arm_ik)
	s_ledge_hang_move_right_end:absoluteRootMotionPosition(true);
	s_ledge_hang_move_right_end:absoluteRootMotionRotation(true);
	s_ledge_hang_move_right_end:blendTime(200);
	s_ledge_hang_move_right_end:from(s_ledge_hang_move_right_start);
	s_ledge_hang_move_right_end:from(s_ledge_hang_move_right_loop);
	s_ledge_hang_move_right_end:from(s_ledge_hang_move_right_corner_out);
	s_ledge_hang_move_right_end:from(s_ledge_hang_move_right_corner_in);
	s_ledge_hang_move_right_end:loop(false);
	-- s_ledge_hang_move_right_end:add("ledge_grab_hang_start.fbxanim");
	s_ledge_hang_move_right_end:add("ledge_hang_move_right_end.fbxanim");
	table.insert(hanging, s_ledge_hang_move_right_end);
	--}

	--{ Animation: s_ledge_hang_move_left_start
	s_ledge_hang_move_left_start = addState(ledge+hang+move_left, "s_ledge_hang_move_left_start");
	s_ledge_hang_move_left_start:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_hang_move_left_start:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_hang_move_left_start:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_left_start:addExitEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_left_start:absoluteRootMotionPosition(true);
	s_ledge_hang_move_left_start:absoluteRootMotionRotation(true);
	s_ledge_hang_move_left_start:blendTime(300);
	s_ledge_hang_move_left_start:loop(false);
	s_ledge_hang_move_left_start:add("ledge_hang_move_left.fbxanim");
	table.insert(on_ledge, s_ledge_hang_move_left_start);
	--}

	--{ Animation: s_ledge_hang_move_left_corner_out
	s_ledge_hang_move_left_corner_out = addState(ledge+hang+move_left+corner_out, "s_ledge_hang_move_left_corner_out");
	s_ledge_hang_move_left_corner_out:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_hang_move_left_corner_out:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_hang_move_left_corner_out:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_left_corner_out:addExitEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_left_corner_out:absoluteRootMotionPosition(true);
	s_ledge_hang_move_left_corner_out:absoluteRootMotionRotation(true);
	s_ledge_hang_move_left_corner_out:blendTime(300);
	s_ledge_hang_move_left_corner_out:loop(false);
	s_ledge_hang_move_left_corner_out:add("ledge_hang_move_left_corner_out.fbxanim");
	table.insert(on_ledge, s_ledge_hang_move_left_corner_out);
	--}

	--{ Animation: s_ledge_hang_move_left_corner_in
	s_ledge_hang_move_left_corner_in = addState(ledge+hang+move_left+corner_in, "s_ledge_hang_move_left_corner_in");
	s_ledge_hang_move_left_corner_in:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_hang_move_left_corner_in:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_hang_move_left_corner_in:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_left_corner_in:addExitEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_left_corner_in:absoluteRootMotionPosition(true);
	s_ledge_hang_move_left_corner_in:absoluteRootMotionRotation(true);
	s_ledge_hang_move_left_corner_in:blendTime(300);
	s_ledge_hang_move_left_corner_in:loop(false);
	s_ledge_hang_move_left_corner_in:add("ledge_hang_move_left_corner_in.fbxanim");
	table.insert(on_ledge, s_ledge_hang_move_left_corner_in);
	--}

	--{ Animation: s_ledge_hang_move_left_loop
	s_ledge_hang_move_left_loop = addState(ledge+hang+move_left, "s_ledge_hang_move_left_loop");
	s_ledge_hang_move_left_loop:from(s_ledge_hang_move_left_start);
	s_ledge_hang_move_left_loop:from(s_ledge_hang_move_left_corner_out);
	s_ledge_hang_move_left_loop:from(s_ledge_hang_move_left_corner_in);
	s_ledge_hang_move_left_loop:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_hang_move_left_loop:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_hang_move_left_loop:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_left_loop:addExitEvent("EventAnimUpdatePosition");
	s_ledge_hang_move_left_loop:absoluteRootMotionPosition(true);
	s_ledge_hang_move_left_loop:absoluteRootMotionRotation(true);
	s_ledge_hang_move_left_loop:blendTime(300);
	s_ledge_hang_move_left_loop:loop(false);
	s_ledge_hang_move_left_loop:restart(true);
	s_ledge_hang_move_left_loop:add("ledge_hang_move_left_loop.fbxanim");
	table.insert(on_ledge, s_ledge_hang_move_left_loop);
	--}

	--{ Animation: s_ledge_hang_move_left_end
	s_ledge_hang_move_left_end = addState(ledge+hang, "s_ledge_hang_move_left_end");
	s_ledge_hang_move_left_end:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_hang_move_left_end:addEnterEvent("EventAnimEnableRootMotionY");
	-- s_ledge_hang_move_left_end:addFinishedEvent("EventAnimRootMotionFinished");
	s_ledge_hang_move_left_end:addIKTarget("ledge_left", left_arm_ik)
	s_ledge_hang_move_left_end:addIKTarget("ledge_left", left_arm_ik)
	s_ledge_hang_move_left_end:absoluteRootMotionPosition(true);
	s_ledge_hang_move_left_end:absoluteRootMotionRotation(true);
	s_ledge_hang_move_left_end:blendTime(200);
	s_ledge_hang_move_left_end:from(s_ledge_hang_move_left_start);
	s_ledge_hang_move_left_end:from(s_ledge_hang_move_left_loop);
	s_ledge_hang_move_left_end:from(s_ledge_hang_move_left_corner_out);
	s_ledge_hang_move_left_end:from(s_ledge_hang_move_left_corner_in);
	s_ledge_hang_move_left_end:loop(false);
	-- s_ledge_hang_move_left_end:add("ledge_grab_hang_start.fbxanim");
	s_ledge_hang_move_left_end:add("ledge_hang_move_left_end.fbxanim");
	table.insert(hanging, s_ledge_hang_move_left_end);
	--}

	--{ Animation: s_ledge_move_right_start
	s_ledge_move_right_start = addState(ledge+move_right, "s_ledge_move_right_start");
	s_ledge_move_right_start:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_move_right_start:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_move_right_start:addFinishedEvent("EventAnimUpdatePosition"); 
	s_ledge_move_right_start:addExitEvent("EventAnimUpdatePosition");
	s_ledge_move_right_start:absoluteRootMotionPosition(true);
	s_ledge_move_right_start:absoluteRootMotionRotation(true);
	s_ledge_move_right_start:blendTime(300);
	s_ledge_move_right_start:loop(false);
	--s_ledge_move_right_start:add("ledge_move_right_start.fbxanim");
	s_ledge_move_right_start:add("macbeth/m_ledge_move_right_start.fbxanim");
	table.insert(on_ledge, s_ledge_move_right_start);
	--}

	--{ Animation: s_ledge_move_right_corner_out
	s_ledge_move_right_corner_out = addState(ledge+move_right+corner_out, "s_ledge_move_right_corner_out");
	s_ledge_move_right_corner_out:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_move_right_corner_out:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_move_right_corner_out:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_move_right_corner_out:addExitEvent("EventAnimUpdatePosition");
	s_ledge_move_right_corner_out:absoluteRootMotionPosition(true);
	s_ledge_move_right_corner_out:absoluteRootMotionRotation(true);
	s_ledge_move_right_corner_out:blendTime(200);
	s_ledge_move_right_corner_out:restart(true);
	s_ledge_move_right_corner_out:add("macbeth/m_ledge_move_right_corner_out.fbxanim");
	--s_ledge_move_right_corner_out:add("ledge_move_right_corner_out.fbxanim");
	table.insert(on_ledge, s_ledge_move_right_corner_out);
	--}

	--{ Animation: s_ledge_move_right_corner_in
	s_ledge_move_right_corner_in = addState(ledge+move_right+corner_in, "s_ledge_move_right_corner_in");
	s_ledge_move_right_corner_in:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_move_right_corner_in:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_move_right_corner_in:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_move_right_corner_in:addExitEvent("EventAnimUpdatePosition");
	s_ledge_move_right_corner_in:absoluteRootMotionPosition(true);
	s_ledge_move_right_corner_in:absoluteRootMotionRotation(true);
	s_ledge_move_right_corner_in:blendTime(200);
	s_ledge_move_right_corner_in:restart(true);
	--s_ledge_move_right_corner_in:add("ledge_move_right_corner_in.fbxanim");
	s_ledge_move_right_corner_in:add("macbeth/m_ledge_move_right_corner_in.fbxanim");
	table.insert(on_ledge, s_ledge_move_right_corner_in);
	--}

	--{ Animation: s_ledge_move_right
	s_ledge_move_right = addState(ledge+move_right, "s_ledge_move_right");
	s_ledge_move_right:from(s_ledge_move_right_start);
	s_ledge_move_right:from(s_ledge_move_right);
	s_ledge_move_right:from(s_ledge_move_right_corner_out);
	s_ledge_move_right:from(s_ledge_move_right_corner_in);
	s_ledge_move_right:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_move_right:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_move_right:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_move_right:addExitEvent("EventAnimUpdatePosition");
	s_ledge_move_right:absoluteRootMotionPosition(true); 
	s_ledge_move_right:absoluteRootMotionRotation(true);
	s_ledge_move_right:blendTime(300);
	s_ledge_move_right:restart(true);
	s_ledge_move_right:add("macbeth/m_ledge_move_right.fbxanim");
	--s_ledge_move_right:add("ledge_move_right.fbxanim");
	table.insert(on_ledge, s_ledge_move_right);
	--}


	--{ Animation: s_ledge_move_right_end
	s_ledge_move_right_end = addState(ledge, "s_ledge_move_right_end");
	s_ledge_move_right_end:from(s_ledge_move_right_start);
	s_ledge_move_right_end:from(s_ledge_move_right);
	s_ledge_move_right_end:from(s_ledge_move_right_corner_out);
	s_ledge_move_right_end:from(s_ledge_move_right_corner_in);
	s_ledge_move_right_end:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_move_right_end:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_move_right_end:addFinishedEvent("EventAnimUpdatePosition");
	s_ledge_move_right_end:addExitEvent("EventAnimUpdatePosition");
	s_ledge_move_right_end:absoluteRootMotionPosition(true);
	s_ledge_move_right_end:absoluteRootMotionRotation(true);
	s_ledge_move_right_end:blendTime(300);
	s_ledge_move_right_end:restart(true);
	s_ledge_move_right_end:add("macbeth/m_ledge_move_right_end.fbxanim");
	table.insert(on_ledge, s_ledge_move_right_end);
	--}


	--{ Animation: s_ledge_climb
	s_ledge_climb = addState(ledge+climb, "s_ledge_climb");
	s_ledge_climb:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_climb:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_climb:addFinishedEvent("EventAnimRootMotionFinished");
	s_ledge_climb:absoluteRootMotionPosition(true);
	s_ledge_climb:absoluteRootMotionRotation(true);
	s_ledge_climb:blendTime(150);
	s_ledge_climb:loop(false);
	s_ledge_climb:add(slope(-30), "ledge_climb_down_30.fbxanim");
	s_ledge_climb:add(slope(0), "ledge_climb_start_mocap.fbxanim");
	s_ledge_climb:add(slope(30), "ledge_climb_up_30.fbxanim");
	-- s_ledge_climb:add("ledge_climb_start.fbxanim");
	-- table.insert(on_ledge, s_ledge_climb);
	table.insert(running, s_ledge_climb);
	--}

	--{ Animation: s_ledge_climb_running
	s_ledge_climb_running = addState(run, "s_ledge_climb_running");
	-- s_ledge_climb_running:addEnterEvent("EventAnimEnableRootMotionX");
	-- s_ledge_climb_running:addEnterEvent("EventAnimEnableRootMotionY");
	-- s_ledge_climb_running:addFinishedEvent("EventAnimRootMotionFinished");
	-- s_ledge_climb_running:absoluteRootMotionPosition(true);
	s_ledge_climb_running:from(s_ledge_climb);
	s_ledge_climb_running:blendTime(200);
	s_ledge_climb_running:loop(false);
	s_ledge_climb_running:add(slope(-30), "ledge_climb_run_down_30.fbxanim");
	s_ledge_climb_running:add(slope(0), "ledge_climb_run_mocap.fbxanim");
	s_ledge_climb_running:add(slope(30), "ledge_climb_run_up_30.fbxanim");
	table.insert(running, s_ledge_climb_running);
	--}

	--{ Animation: s_ledge_climb_hang_prepare
	-- s_ledge_climb_hang_prepare = addState(ledge+hang+prepare_to_climb, "s_ledge_climb_hang_prepare");
	-- s_ledge_climb_hang_prepare:addEnterEvent("EventAnimEnableRootMotionX");
	-- s_ledge_climb_hang_prepare:addEnterEvent("EventAnimEnableRootMotionY");
	-- s_ledge_climb_hang_prepare:absoluteRootMotionPosition(true);
	-- s_ledge_climb_hang_prepare:blendTime(300);
	-- s_ledge_climb_hang_prepare:loop(false);
	-- s_ledge_climb_hang_prepare:add("ledge_climb_hang_prepare.fbxanim");
	-- table.insert(hanging, s_ledge_climb_hang_prepare);
	--}

	--{ Animation: s_ledge_climb_hang
	s_ledge_climb_hang = addState(ledge+climb, "s_ledge_climb_hang");
	s_ledge_climb_hang:addEnterEvent("EventAnimEnableRootMotionX");
	s_ledge_climb_hang:addEnterEvent("EventAnimEnableRootMotionY");
	s_ledge_climb_hang:addFinishedEvent("EventAnimRootMotionFinished");
	s_ledge_climb_hang:addFinishedEvent("EventAnimClimbFinished");
	s_ledge_climb_hang:absoluteRootMotionPosition(true);
	s_ledge_climb_hang:blendTime(300);
	s_ledge_climb_hang:loop(false);
	s_ledge_climb_hang:from(hanging);
	s_ledge_climb_hang:from(s_ledge_climb_hang);
	s_ledge_climb_hang:add("ledge_climb_hang_start.fbxanim");
	-- s_ledge_climb_hang:add("ledge_climb_hang_start_from_prepare.fbxanim");
	table.insert(crouching, s_ledge_climb_hang);
	--}

	--{ Animation: s_ledge_climb_over_ledge_fix
	s_ledge_climb_over_ledge_fix = addState(stand, "s_ledge_climb_over_ledge_fix");
	s_ledge_climb_over_ledge_fix:from(s_ledge_climb_hang);
	s_ledge_climb_over_ledge_fix:from(s_ledge_climb);
	s_ledge_climb_over_ledge_fix:blendTime(300);
	s_ledge_climb_over_ledge_fix:loop(false);
	s_ledge_climb_over_ledge_fix:add("ledge_climb_over_ledge.fbxanim");
	table.insert(crouching, s_ledge_climb_over_ledge_fix);
	--}

	--{ Animation: s_ledge_climb_over_ledge
	s_ledge_climb_over_ledge = addState(stand+over_ledge, "s_ledge_climb_over_ledge");
	s_ledge_climb_over_ledge:from(s_ledge_climb_over_ledge_fix);
	s_ledge_climb_over_ledge:from(s_ledge_climb_hang);
	s_ledge_climb_over_ledge:from(s_ledge_climb);
	s_ledge_climb_over_ledge:blendTime(300);
	s_ledge_climb_over_ledge:loop(false);
	s_ledge_climb_over_ledge:add("ledge_climb_over_ledge.fbxanim");
	table.insert(crouching, s_ledge_climb_over_ledge);
	--}

--}
	
	
s_stand_over_ledge_loop:from(s_ledge_climb_over_ledge);

--{ Animation: s_wall_fall_against
s_wall_fall_against = addState(wall+fall, "s_wall_fall_against");
s_wall_fall_against:blendTime(350);
s_wall_fall_against:synchronizedStartTimeGroup(20);
s_wall_fall_against:loop(false);
s_wall_fall_against:add(wall_angle(-90), "jump_wall_run_right_90.fbxanim");
s_wall_fall_against:add(wall_angle(-45), "jump_wall_run_right_45.fbxanim");
s_wall_fall_against:add(wall_angle(0), "jump_wall_run_up.fbxanim");
s_wall_fall_against:add(wall_angle(45), "jump_wall_run_left_45.fbxanim");
s_wall_fall_against:add(wall_angle(90), "jump_wall_run_left_90.fbxanim");
table.insert(on_wall, s_wall_fall_against);
table.insert(jumping, s_wall_fall_against);
--}

--{ Animation: s_wall_jump_against
s_wall_jump_against = addState(wall+jump, "s_wall_jump_against");
s_wall_jump_against:blendTime(350);
s_wall_jump_against:synchronizedStartTimeGroup(20);
s_wall_jump_against:loop(false);
s_wall_jump_against:add(wall_angle(-90), "jump_wall_run_right_90.fbxanim");
s_wall_jump_against:add(wall_angle(-45), "jump_wall_run_right_45.fbxanim");
s_wall_jump_against:add(wall_angle(0), "jump_wall_run_up.fbxanim");
s_wall_jump_against:add(wall_angle(45), "jump_wall_run_left_45.fbxanim");
s_wall_jump_against:add(wall_angle(90), "jump_wall_run_left_90.fbxanim");
table.insert(on_wall, s_wall_jump_against);
table.insert(jumping, s_wall_jump_against);
--}

-- s_wall_stand_against:add("run_wall_right_90.fbxanim");

--{ Animation: s_wall_run_against
s_wall_run_against = addState(run+wall, "s_wall_run_against");
s_wall_run_against:blendTime(300);
s_wall_run_against:synchronizedStartTimeGroup(5);
s_wall_run_against:loop(true);
s_wall_run_against:add(wall_angle(-90), "run_wall_right_90.fbxanim");
s_wall_run_against:add(wall_angle(-45), "run_wall_right_45.fbxanim");
s_wall_run_against:add(wall_angle(-20), 1.11, "run_wall_right_20.fbxanim");
s_wall_run_against:add(wall_angle(0), "run_wall_front.fbxanim");
s_wall_run_against:add(wall_angle(20), 1.0, "run_wall_left_20.fbxanim");
s_wall_run_against:add(wall_angle(45), "run_wall_left_45.fbxanim");
s_wall_run_against:add(wall_angle(90), "run_wall_left_90.fbxanim");
s_wall_run_against:addIKTarget("wall_right", right_arm_ik)
table.insert(running, s_wall_run_against);
table.insert(on_wall, s_wall_run_against);
--}

--{ Animation: s_wall_stand_against
s_wall_stand_against = addState(stand+wall, "s_wall_stand_against");
s_wall_stand_against:blendTime(200);
s_wall_stand_against:loop(false);
s_wall_stand_against:add("wall_stand_against.fbxanim");
s_wall_stand_against:addIKTarget("wall_right", right_arm_ik)
table.insert(standing, s_wall_stand_against);
table.insert(on_wall, s_wall_stand_against);
--}

--{ Animation: s_stand_from_wall
s_stand_from_wall = addState(stand, "s_stand_from_wall");
s_stand_from_wall:from(on_wall);
s_stand_from_wall:blendTime(300);
s_stand_from_wall:loop(false);
s_stand_from_wall:add("stand_from_wall.fbxanim");
table.insert(standing, s_stand_from_wall);
--}

--{ Animation: s_wall_stand_against2
s_wall_stand_against2 = addState(stand+wall, "s_wall_stand_against2");
s_wall_stand_against2:from(standing);
s_wall_stand_against2:blendTime(300);
s_wall_stand_against2:loop(false);
s_wall_stand_against2:add("stand_from_wall_2.fbxanim");
s_wall_stand_against2:addIKTarget("wall_right", right_arm_ik)
table.insert(standing, s_wall_stand_against2);
table.insert(on_wall, s_wall_stand_against2);
--}

--{ Animation: s_wall_stick_start
s_wall_stick_start = addState(wall+stick, "s_wall_stick_start");
s_wall_stick_start:blendTime(300);
s_wall_stick_start:loop(false);
s_wall_stick_start:add("jump_wall_run_up_stick.fbxanim");
-- s_wall_stick_start:add("wall_stick_start.fbxanim");
-- s_wall_stick_start:add(ledge_angle(45), "wall_stick_up_45.fbxanim");
-- s_wall_stick_start:add(ledge_angle(0), "wall_stick_forward.fbxanim");
-- s_wall_stick_start:add(ledge_angle(-45), "wall_stick_down_45.fbxanim");
table.insert(on_wall, s_wall_stick_start);
--}

--{ Animation: s_wall_land
s_wall_land = addState(wall+stick, "s_wall_land");
s_wall_land:from(s_wall_stick_start);
s_wall_land:from(s_wall_land);
s_wall_land:blendTime(300);
s_wall_land:loop(true);
s_wall_land:add("wall_stick.fbxanim");
table.insert(on_wall, s_wall_land);
--}



--{ Animation: s_wall_land_from_wall_jump
-- s_wall_land_from_wall_jump = addState(wall+fall, "s_wall_land_from_wall_jump");
-- s_wall_land_from_wall_jump:from(s_wall_jump_right);
-- s_wall_land_from_wall_jump:from(s_wall_jump_left);
-- s_wall_land_from_wall_jump:blendTime(300);
-- s_wall_land_from_wall_jump:loop(true);
-- s_wall_land_from_wall_jump:add("wall_stick.fbxanim");
-- table.insert(on_wall, s_wall_land_from_wall_jump);
--}

--{ Animation: s_wall_jump_from_ledge_left
s_wall_jump_from_ledge_left = addState(wall_jump+turn_left, "s_wall_jump_from_ledge_left");
s_wall_jump_from_ledge_left:from(on_ledge);
s_wall_jump_from_ledge_left:blendTime(200);
s_wall_jump_from_ledge_left:restart(true);
s_wall_jump_from_ledge_left:loop(false);
s_wall_jump_from_ledge_left:add("wall_jump_left.fbxanim");
s_wall_jump_from_ledge_left:addExitEvent("EventAnimTurnComplete");
s_wall_jump_from_ledge_left:addFinishedEvent("EventAnimTurnComplete");
table.insert(jumping, s_wall_jump_from_ledge_left);
--}
--{ Animation: s_wall_jump_from_ledge_right
s_wall_jump_from_ledge_right = addState(wall_jump+turn_right, "s_wall_jump_from_ledge_right");
s_wall_jump_from_ledge_right:from(on_ledge);
s_wall_jump_from_ledge_right:blendTime(200);
s_wall_jump_from_ledge_right:restart(true);
s_wall_jump_from_ledge_right:loop(false);
s_wall_jump_from_ledge_right:add("wall_jump_left.fbxanim");
s_wall_jump_from_ledge_right:addExitEvent("EventAnimTurnComplete");
s_wall_jump_from_ledge_right:addFinishedEvent("EventAnimTurnComplete");
table.insert(jumping, s_wall_jump_from_ledge_left);
--}

--{ Animation: s_ledge_jump_from_ledge_left
s_ledge_jump_from_ledge_left = addState(jump+turn_left, "s_ledge_jump_from_ledge_left");
s_ledge_jump_from_ledge_left:from(on_ledge);
s_ledge_jump_from_ledge_left:blendTime(200);
s_ledge_jump_from_ledge_left:restart(true);
s_ledge_jump_from_ledge_left:loop(false);
s_ledge_jump_from_ledge_left:add("wall_jump_left.fbxanim");
s_ledge_jump_from_ledge_left:addExitEvent("EventAnimTurnComplete");
s_ledge_jump_from_ledge_left:addFinishedEvent("EventAnimTurnComplete");
table.insert(jumping, s_ledge_jump_from_ledge_left);
--}
--{ Animation: s_ledge_jump_from_ledge_right
s_ledge_jump_from_ledge_right = addState(jump+turn_right, "s_ledge_jump_from_ledge_right");
s_ledge_jump_from_ledge_right:from(on_ledge);
s_ledge_jump_from_ledge_right:blendTime(200);
s_ledge_jump_from_ledge_right:restart(true);
s_ledge_jump_from_ledge_right:loop(false);
s_ledge_jump_from_ledge_right:add("wall_jump_left.fbxanim");
s_ledge_jump_from_ledge_right:addExitEvent("EventAnimTurnComplete");
s_ledge_jump_from_ledge_right:addFinishedEvent("EventAnimTurnComplete");
table.insert(jumping, s_ledge_jump_from_ledge_left);
--}

--{ Animation: s_wall_jump_up
s_wall_jump_up = addState(jump, "s_wall_jump_up");
s_wall_jump_up:synchronizedStartTimeGroup(19);
s_wall_jump_up:from(on_ledge);
s_wall_jump_up:blendTime(300);
s_wall_jump_up:restart(true);
s_wall_jump_up:loop(false);
s_wall_jump_up:add("jump_wall_run_up.fbxanim");
-- s_wall_jump_up:add("wall_jump_up.fbxanim");
s_wall_jump_up:addExitEvent("EventAnimTurnComplete");
s_wall_jump_up:addFinishedEvent("EventAnimTurnComplete");
table.insert(jumping, s_wall_jump_left);
--}

--{ Animation: s_wall_jump_up2
s_wall_jump_up2 = addState(fall+wall, "s_wall_jump_up2");
s_wall_jump_up2:synchronizedStartTimeGroup(19);
s_wall_jump_up2:from(s_wall_jump_up);
s_wall_jump_up2:blendTime(200);
s_wall_jump_up2:restart(true);
s_wall_jump_up2:loop(false);
s_wall_jump_up2:add("jump_wall_run_up.fbxanim");
-- s_wall_jump_up2:add("wall_jump_up.fbxanim");
s_wall_jump_up2:addExitEvent("EventAnimTurnComplete");
s_wall_jump_up2:addFinishedEvent("EventAnimTurnComplete");
table.insert(jumping, s_wall_jump_left);
--}

--{ Animation: s_ledge_jump_right
s_ledge_jump_right = addState(jump, "s_ledge_jump_right");
s_ledge_jump_right:synchronizedStartTimeGroup(19);
s_ledge_jump_right:from(s_ledge_look_right);
s_ledge_jump_right:blendTime(300);
s_ledge_jump_right:restart(true);
s_ledge_jump_right:loop(false);
s_ledge_jump_right:add("wall_jump_left.fbxanim");
-- s_ledge_jump_right:add("ledge_jump_right.fbxanim");
s_ledge_jump_right:addExitEvent("EventAnimTurnComplete");
s_ledge_jump_right:addFinishedEvent("EventAnimTurnComplete");
table.insert(jumping, s_ledge_jump_left);
--}

--{ Animation: s_ledge_jump_right2
s_ledge_jump_right2 = addState(fall+wall, "s_ledge_jump_right2");
s_ledge_jump_right2:synchronizedStartTimeGroup(19);
s_ledge_jump_right2:from(s_ledge_jump_right);
s_ledge_jump_right2:blendTime(200);
s_ledge_jump_right2:restart(true);
s_ledge_jump_right2:loop(false);
s_ledge_jump_right2:add("wall_jump_left.fbxanim");
-- s_ledge_jump_right2:add("ledge_jump_right.fbxanim");
s_ledge_jump_right2:addExitEvent("EventAnimTurnComplete");
s_ledge_jump_right2:addFinishedEvent("EventAnimTurnComplete");
table.insert(jumping, s_ledge_jump_left);
--}

--{ Animation: s_ledge_jump_right3
s_ledge_jump_right3 = addState(jump+wall, "s_ledge_jump_right3");
s_ledge_jump_right3:synchronizedStartTimeGroup(19);
s_ledge_jump_right3:from(s_ledge_look_right);
s_ledge_jump_right3:blendTime(200);
s_ledge_jump_right3:restart(true);
s_ledge_jump_right3:loop(false);
s_ledge_jump_right3:add("wall_jump_left.fbxanim");
-- s_ledge_jump_right3:add("ledge_jump_right.fbxanim");
s_ledge_jump_right3:addExitEvent("EventAnimTurnComplete");
s_ledge_jump_right3:addFinishedEvent("EventAnimTurnComplete");
table.insert(jumping, s_ledge_jump_left);
--}

--{ Animation: s_ledge_jump_right4
s_ledge_jump_right4 = addState(fall, "s_ledge_jump_right4");
s_ledge_jump_right4:synchronizedStartTimeGroup(19);
s_ledge_jump_right4:from(s_ledge_jump_right3);
s_ledge_jump_right4:blendTime(200);
s_ledge_jump_right4:restart(true);
s_ledge_jump_right4:loop(false);
s_ledge_jump_right4:add("wall_jump_left.fbxanim");
-- s_ledge_jump_right4:add("ledge_jump_right.fbxanim");
s_ledge_jump_right4:addExitEvent("EventAnimTurnComplete");
s_ledge_jump_right4:addFinishedEvent("EventAnimTurnComplete");
table.insert(jumping, s_ledge_jump_left);
--}

--{ Animation: s_wall_jump2
-- s_wall_jump2 = addState(wall_jump, "s_wall_jump2");
-- s_wall_jump2:from(on_ledge);
-- s_wall_jump2:from(s_wall_jump);
-- s_wall_jump2:from(s_wall_land_from_wall_jump);
-- s_wall_jump2:blendTime(200);
-- s_wall_jump2:restart(true);
-- s_wall_jump2:loop(false);
-- s_wall_jump2:add("wall_jump_left.fbxanim");
-- s_wall_jump2:addExitEvent("EventAnimTurnComplete");
-- s_wall_jump2:addFinishedEvent("EventAnimTurnComplete");
-- table.insert(jumping, s_wall_jump2);
--}

--{ Animation: s_ledge_climb_jump
-- s_ledge_climb_jump = addState(ledge+jump, "s_ledge_climb_jump");
-- s_ledge_climb_jump:blendTime(200);
-- s_ledge_climb_jump:loop(false);
-- s_ledge_climb_jump:add("ledge_climb_jump.fbxanim");
-- table.insert(jumping, s_ledge_climb_jump);
--}

--{ Animation: s_wall_jump_turning_right
-- s_wall_jump_turning_right = addState(jump+turn_right, "s_wall_jump_turning_right");
-- s_wall_jump_turning_right:from(on_wall);
-- s_wall_jump_turning_right:from(s_wall_jump);
-- s_wall_jump_turning_right:from(s_turn_in_air);
-- s_wall_jump_turning_right:from(s_jump);
-- s_wall_jump_turning_right:blendTime(150);
-- s_wall_jump_turning_right:loop(false);
-- s_wall_jump_turning_right:add("jump2.fbxanim");
-- s_wall_jump_turning_right:addExitEvent("EventAnimTurnComplete");
-- s_wall_jump_turning_right:addFinishedEvent("EventAnimTurnComplete");
-- table.insert(jumping, s_wall_jump_turning_right);
--}

--{ Animation: s_wall_jump_turning_left
-- s_wall_jump_turning_left = addState(jump+turn_left, "s_wall_jump_turning_left");
-- s_wall_jump_turning_left:from(on_wall);
-- s_wall_jump_turning_left:from(s_wall_jump);
-- s_wall_jump_turning_left:from(s_turn_in_air);
-- s_wall_jump_turning_left:from(s_jump);
-- s_wall_jump_turning_left:blendTime(150);
-- s_wall_jump_turning_left:loop(false);
-- s_wall_jump_turning_left:add("jump2.fbxanim");
-- s_wall_jump_turning_left:addExitEvent("EventAnimTurnComplete");
-- s_wall_jump_turning_left:addFinishedEvent("EventAnimTurnComplete");
-- table.insert(jumping, s_wall_jump_turning_left);
--}

--{ Animation: s_ledge_jump_back
-- s_ledge_jump_back = addState(jump, "s_ledge_jump_back");
-- s_ledge_jump_back:from(on_wall);
-- s_ledge_jump_back:from(on_ledge);
-- s_ledge_jump_back:blendTime(0);
-- s_ledge_jump_back:loop(false);
-- s_ledge_jump_back:add("ledge_jump_back.fbxanim");
-- table.insert(jumping, s_ledge_jump_back);
--}


--{ Animation: s_jump_fall
s_jump_fall = addState(fall, "s_jump_fall");

s_jump_fall:blendTime(300);
s_jump_fall:loopBlendTime(300);
s_jump_fall:loop(true);
s_jump_fall:add("macbeth/m_fall.fbxanim");
table.insert(falling, s_jump_fall);
--table.insert(jumping, s_jump_fall);
--}

--{ Animation: s_jump_fall_stab_possible
s_jump_fall_stab_possible = addState(fall+fall_stab_possible, "s_jump_fall_stab_possible");

s_jump_fall_stab_possible:blendTime(200);
s_jump_fall_stab_possible:loopBlendTime(300);
s_jump_fall_stab_possible:loop(true);
s_jump_fall_stab_possible:add("macbeth/m_fall_stab_possible.fbxanim");
table.insert(falling, s_jump_fall_stab_possible);
--table.insert(jumping, s_jump_fall_stab_possible);
--}

--{ Animation: s_jump_fall_stab_possible_start
s_jump_fall_stab_possible_start = addState(fall+fall_stab_possible, "s_jump_fall_stab_possible_start");
s_jump_fall_stab_possible_start:from(falling);
s_jump_fall_stab_possible_start:blendTime(200);
s_jump_fall_stab_possible_start:loopBlendTime(300);
s_jump_fall_stab_possible_start:loop(false);
s_jump_fall_stab_possible_start:add("macbeth/m_fall_stab_possible_start.fbxanim");
table.insert(falling, s_jump_fall_stab_possible_start);
--table.insert(jumping, s_jump_fall_stab_possible_start); 
--}


--{ Animation: s_jump_fall_stab_possible_end
s_jump_fall_stab_possible_end = addState(fall, "s_jump_fall_stab_possible_end");
s_jump_fall_stab_possible_end:from(s_jump_fall_stab_possible_end);
s_jump_fall_stab_possible_end:blendTime(300);
s_jump_fall_stab_possible_end:loopBlendTime(300);
s_jump_fall_stab_possible_end:loop(false);
s_jump_fall_stab_possible_end:add("macbeth/m_fall_stab_possible.fbxanim");
table.insert(falling, s_jump_fall_stab_possible_end);
--table.insert(jumping, s_jump_fall_stab_possible_end);
--}






--{ Animation: s_land_running
s_land_running = addState(run, "s_land_running");
s_land_running:from(jumping);
s_land_running:from(falling);
-- s_land_running:from(s_ledge_climb);
s_land_running:blendTime(190);
s_land_running:loop(false);
s_land_running:add(slope(-30), "land_running_down_30.fbxanim");
s_land_running:add(slope(0), "land_running_new.fbxanim");
s_land_running:add(slope(30), "land_running_up_30.fbxanim");
table.insert(running, s_land_running);
--}
s_jump2:from(s_land_running);

-- --{ Animation: s_land_high_running
-- s_land_high_running = addState(run, "s_land_high_running");
-- s_land_high_running:from(falling);
-- -- s_land_high_running:from(s_wall_jump);
-- s_land_high_running:blendTime(90);
-- s_land_high_running:loop(false);
-- s_land_high_running:add("macbeth/m_landing.fbxanim");
-- table.insert(running, s_land_high_running);
-- --}

-- --{ Animation: s_run_from_roll
-- s_run_from_roll = addState(run, "s_run_from_roll");
-- s_run_from_roll:from(s_land_high_running);
-- --s_run_from_roll:from(s_crouch_from_run_end);
-- s_run_from_roll:blendTime(200);
-- s_run_from_roll:loop(false);
-- s_run_from_roll:add("run_from_roll_new.fbxanim");
-- table.insert(running, s_run_from_roll);
-- --}

-- --{ Animation: s_stop_from_roll
-- s_stop_from_roll = addState(stand, "s_stop_from_roll");
-- s_stop_from_roll:from(s_land_high_running);
-- s_stop_from_roll:from(s_crouch_from_run);
-- s_stop_from_roll:from(s_crouch_from_run_end);
-- s_stop_from_roll:blendTime(300);

-- s_stop_from_roll:loop(false);
-- s_stop_from_roll:add("roll_end.fbxanim");
-- table.insert(crouching, s_stop_from_roll);
-- table.insert(standing, s_stop_from_roll);
-- --}

--{ Animation: s_fall_from_run
s_fall_from_run = addState(fall, "s_fall_from_run");
s_fall_from_run:from(running);
s_fall_from_run:blendTime(300);
s_fall_from_run:loop(false);
s_fall_from_run:add("fall_from_run.fbxanim");
table.insert(jumping, s_fall_from_run);
--}

--{ Animation: s_fall_from_wallrun
s_fall_from_wallrun = addState(fall+default, "s_fall_from_wallrun");
s_fall_from_wallrun:synchronizedStartTimeGroup(20);
s_fall_from_wallrun:from(s_wall_fall_against);
s_fall_from_wallrun:from(s_wall_jump_against);
s_fall_from_wallrun:blendTime(200);
s_fall_from_wallrun:loop(false);
s_fall_from_wallrun:add("jump_new.fbxanim");
table.insert(jumping, s_fall_from_wallrun);
--}





--{		SWIM

	--{ Animation: s_water_float
	s_water_float = addState(water, "s_water_float");
	-- s_water_float:randomizedStartTime();
	s_water_float:blendTime(1000);
	s_water_float:loop(true);
	s_water_float:add("water_float.fbxanim");
	table.insert(in_water, s_water_float);
	--}

	--{ Animation: s_water_surface_float
	s_water_surface_float = addState(water+surface, "s_water_surface_float");
	-- s_water_surface_float:randomizedStartTime();
	s_water_surface_float:blendTime(1000);
	s_water_surface_float:loopBlendTime(1000);
	s_water_surface_float:loop(true);
	s_water_surface_float:setContextOnEnter("turn_left", false);
	s_water_surface_float:setContextOnEnter("turn_right", false);
	s_water_surface_float:add("water_surface_float.fbxanim");
	table.insert(in_water, s_water_surface_float);
	--}

	--{ Animation: s_water_swim_end
	s_water_swim_end = addState(water, "s_water_swim_end");
	-- s_water_swim_end:randomizedStartTime();
	s_water_swim_end:from(swimming);
	s_water_swim_end:blendTime(1300);
	s_water_swim_end:loop(false);
	s_water_swim_end:add("water_swim_end.fbxanim");
	table.insert(in_water, s_water_swim_end);
	--}

	--{ Animation: s_water_swim_start
	s_water_swim_start = addState(water+swim, "s_water_swim_start");
	s_water_swim_start:blendTime(400);
	s_water_swim_start:loop(false);
	s_water_swim_start:add("water_swim_start.fbxanim");
	table.insert(in_water, s_water_swim_start);
	table.insert(swimming, s_water_swim_start);
	--}

	--{ Animation: s_water_swim_start_turning_right
	s_water_swim_start_turning_right = addState(water+swim+turn_right, "s_water_swim_start_turning_right");
	s_water_swim_start_turning_right:blendTime(1000);
	s_water_swim_start_turning_right:loop(false);
	s_water_swim_start_turning_right:add("water_swim_start.fbxanim");
	s_water_swim_start_turning_right:addFinishedEvent("EventAnimTurnComplete");
	table.insert(in_water, s_water_swim_start_turning_right);
	table.insert(swimming, s_water_swim_start_turning_right);
	--}

	--{ Animation: s_water_swim_start_turning_left
	s_water_swim_start_turning_left = addState(water+swim+turn_left, "s_water_swim_start_turning_left");
	s_water_swim_start_turning_left:blendTime(1000);
	s_water_swim_start_turning_left:loop(false);
	s_water_swim_start_turning_left:add("water_swim_start.fbxanim");
	s_water_swim_start_turning_left:addFinishedEvent("EventAnimTurnComplete");
	table.insert(in_water, s_water_swim_start_turning_left);
	table.insert(swimming, s_water_swim_start_turning_left);
	--}


	--{ Animation: s_water_swim
	s_water_swim = addState(water+swim, "s_water_swim");
	-- s_water_swim:from(swimming);
	s_water_swim:blendTime(400);
	s_water_swim:loop(true);
	s_water_swim:loopBlendTime(400); 
	s_water_swim:add("water_swim_modified.fbxanim");
	-- s_water_swim:add("water_swim.fbxanim");
	table.insert(in_water, s_water_swim);
	table.insert(swimming, s_water_swim);
	--}

	--{ Animation: s_water_surface_swim_start
	s_water_surface_swim_start = addState(water+surface+swim, "s_water_surface_swim_start");
	s_water_surface_swim_start:blendTime(400);
	s_water_surface_swim_start:loop(false);
	-- s_water_surface_swim_start:loopBlendTime(400);
	s_water_surface_swim_start:add("water_surface_swim_start.fbxanim");
	table.insert(in_water, s_water_surface_swim_start);
	table.insert(swimming, s_water_surface_swim_start);
	--}

	--{ Animation: s_water_surface_swim_start_turning_right
	s_water_surface_swim_start_turning_right = addState(water+surface+swim+turn_right, "s_water_surface_swim_start_turning_right");
	s_water_surface_swim_start_turning_right:blendTime(500);
	s_water_surface_swim_start_turning_right:loop(false);
	-- s_water_surface_swim_start_turning_right:loopBlendTime(400);
	-- s_water_surface_swim_start_turning_right:add("water_surface_swim_start_turning_right.fbxanim");
	--s_water_surface_swim_start_turning_right:add("water_surface_swim_turn_right.fbxanim");
	s_water_surface_swim_start_turning_right:add("water_surface_swim_start.fbxanim"); 
	s_water_surface_swim_start_turning_right:addFinishedEvent("EventAnimTurnComplete");
	table.insert(in_water, s_water_surface_swim_start_turning_right);
	table.insert(swimming, s_water_surface_swim_start_turning_right);
	--}

	--{ Animation: s_water_surface_swim_start_turning_left
	s_water_surface_swim_start_turning_left = addState(water+surface+swim+turn_left, "s_water_surface_swim_start_turning_left");
	s_water_surface_swim_start_turning_left:blendTime(500);
	s_water_surface_swim_start_turning_left:loop(false);
	-- s_water_surface_swim_start_turning_left:loopBlendTime(400);
	-- s_water_surface_swim_start_turning_left:add("water_surface_swim_start_turning_left.fbxanim");
	--s_water_surface_swim_start_turning_left:add("water_surface_swim_turn_left.fbxanim");
	s_water_surface_swim_start_turning_left:add("water_surface_swim_start.fbxanim");
	s_water_surface_swim_start_turning_left:addFinishedEvent("EventAnimTurnComplete");
	table.insert(in_water, s_water_surface_swim_start_turning_left);
	table.insert(swimming, s_water_surface_swim_start_turning_left);
	--}


	--{ Animation: s_water_surface_swim
	s_water_surface_swim = addState(water+surface+swim, "s_water_surface_swim");
	s_water_surface_swim:from(swimming);
	s_water_surface_swim:blendTime(400);
	s_water_surface_swim:loop(true);
	s_water_surface_swim:loopBlendTime(400); 
	s_water_surface_swim:setContextOnEnter("turn_left", false);
	s_water_surface_swim:setContextOnEnter("turn_right", false);
	s_water_surface_swim:add("water_surface_swim.fbxanim");
	table.insert(in_water, s_water_surface_swim);
	table.insert(swimming, s_water_surface_swim);
	--}

--}
	
--{ ROPE_ATTACHED
	
	--{ Animation: s_stand_start_rope_attached
	s_stand_start_rope_attached = addState(stand+rope_attached, "s_stand_start_rope_attached");
	-- s_stand_start_rope_attached:from(stand_start_rope_attacheding);
	s_stand_start_rope_attached:blendTime(300);
	s_stand_start_rope_attached:loopBlendTime(500);
	s_stand_start_rope_attached:loop(false);
	-- s_stand_start_rope_attached:add("stand_start_rope_attached_scenery.fbxanim");
	s_stand_start_rope_attached:add("stand_startrope.fbxanim");
	table.insert(rope_is_attached, s_stand_start_rope_attached);
	--}

	--{ Animation: s_stand_rope_attached
	s_stand_rope_attached = addState(stand+rope_attached, "s_stand_rope_attached");
	s_stand_rope_attached:from(rope_is_attached);
	s_stand_rope_attached:blendTime(300);
	s_stand_rope_attached:loopBlendTime(500);
	s_stand_rope_attached:loop(true);
	-- s_stand_rope_attached:add("stand_rope_attached_scenery.fbxanim");
	s_stand_rope_attached:add(rope_force(force_minimum_standing), "stand_rope.fbxanim");
	s_stand_rope_attached:add(rope_force(force_still_standing), "stand_rope_force.fbxanim");
	s_stand_rope_attached:add(rope_force(force_pull_standing), "stand_rope_pulled.fbxanim");
	s_stand_rope_attached:addIKTarget("rope", right_arm_ik);
	table.insert(rope_is_attached, s_stand_rope_attached);
	--}

	--{ Animation: s_run_start_rope_attached
	s_run_start_rope_attached = addState(run+rope_attached, "s_run_start_rope_attached");
	s_run_start_rope_attached:blendTime(300);
	s_run_start_rope_attached:loop(false);
	s_run_start_rope_attached:addIKTarget("rope", right_arm_ik);
	s_run_start_rope_attached:add(run_direction(-180), rope_force(0), 1.000, "run_start_back_rope2.fbxanim");
	s_run_start_rope_attached:add(run_direction(-90), rope_force(0), "run_start_left_rope.fbxanim");
	s_run_start_rope_attached:add(run_direction(0), rope_force(0), "run_start_front_rope.fbxanim");
	s_run_start_rope_attached:add(run_direction(90), rope_force(0), "run_start_right_rope.fbxanim");
	s_run_start_rope_attached:add(run_direction(180), rope_force(0), 1.000, "run_start_back_rope2.fbxanim");

	s_run_start_rope_attached:add(run_direction(-180), rope_force(force_minimum_running), 1.000, "run_start_back_rope2.fbxanim");
	s_run_start_rope_attached:add(run_direction(-90), rope_force(force_minimum_running), "run_start_left_rope.fbxanim");
	s_run_start_rope_attached:add(run_direction(0), rope_force(force_minimum_running), "run_start_front_rope.fbxanim");
	s_run_start_rope_attached:add(run_direction(90), rope_force(force_minimum_running), "run_start_right_rope.fbxanim");
	s_run_start_rope_attached:add(run_direction(180), rope_force(force_minimum_running), 1.000, "run_start_back_rope2.fbxanim");

	s_run_start_rope_attached:add(run_direction(-180), rope_force(force_moderate_running), "run_start_back_rope_force.fbxanim");
	s_run_start_rope_attached:add(run_direction(-90), rope_force(force_moderate_running), "run_start_left_rope.fbxanim");
	s_run_start_rope_attached:add(run_direction(0), rope_force(force_moderate_running), "run_start_front_rope.fbxanim");
	s_run_start_rope_attached:add(run_direction(90), rope_force(force_moderate_running), "run_start_right_rope.fbxanim");
	s_run_start_rope_attached:add(run_direction(180), rope_force(force_moderate_running), "run_start_back_rope_force.fbxanim");

	s_run_start_rope_attached:add(run_direction(-180), rope_force(force_still_running), "run_start_back_rope_pulled_still.fbxanim");
	s_run_start_rope_attached:add(run_direction(-90), rope_force(force_still_running), "run_start_left_rope.fbxanim");
	s_run_start_rope_attached:add(run_direction(0), rope_force(force_still_running), "run_start_front_rope.fbxanim");
	s_run_start_rope_attached:add(run_direction(90), rope_force(force_still_running), "run_start_right_rope.fbxanim");
	s_run_start_rope_attached:add(run_direction(180), rope_force(force_still_running), "run_start_back_rope_pulled_still.fbxanim");

	s_run_start_rope_attached:add(run_direction(-180), rope_force(force_pull_running), "run_start_back_rope_pulled.fbxanim");
	s_run_start_rope_attached:add(run_direction(-90), rope_force(force_pull_running), "run_start_back_rope_pulled.fbxanim");
	s_run_start_rope_attached:add(run_direction(0), rope_force(force_pull_running), "run_start_back_rope_pulled.fbxanim");
	s_run_start_rope_attached:add(run_direction(90), rope_force(force_pull_running), "run_start_back_rope_pulled.fbxanim");
	s_run_start_rope_attached:add(run_direction(180), rope_force(force_pull_running), "run_start_back_rope_pulled.fbxanim");

	s_run_start_rope_attached:add(run_direction(-180), rope_force(10000), 1.000, "run_start_back_rope_pulled.fbxanim");
	s_run_start_rope_attached:add(run_direction(-90), rope_force(10000), "run_start_back_rope_pulled.fbxanim");
	s_run_start_rope_attached:add(run_direction(0), rope_force(10000), "run_start_back_rope_pulled.fbxanim");
	s_run_start_rope_attached:add(run_direction(90), rope_force(10000), "run_start_back_rope_pulled.fbxanim");
	s_run_start_rope_attached:add(run_direction(180), rope_force(10000), 1.000, "run_start_back_rope_pulled.fbxanim");

	table.insert(rope_is_attached, s_run_start_rope_attached);
	--}
 
	--{ Animation: s_run_rope_attached
	s_run_rope_attached = addState(run+rope_attached, "s_run_rope_attached");
	s_run_rope_attached:from(s_run_start_rope_attached);
	s_run_rope_attached:blendTime(300);
	s_run_rope_attached:loopBlendTime(300);
	-- s_run_rope_attached:speedFactor(1.1);
	s_run_rope_attached:loop(true);
	s_run_rope_attached:addIKTarget("rope", right_arm_ik);

	s_run_rope_attached:add(run_direction(-180), rope_force(0), 1.000, "run_back_rope2.fbxanim");
	s_run_rope_attached:add(run_direction(-90), rope_force(0), "run_left_rope.fbxanim");
	s_run_rope_attached:add(run_direction(0), rope_force(0), "run_front_rope.fbxanim");
	s_run_rope_attached:add(run_direction(90), rope_force(0), "run_right_rope.fbxanim");
	s_run_rope_attached:add(run_direction(180), rope_force(0), 1.000, "run_back_rope2.fbxanim");

	s_run_rope_attached:add(run_direction(-180), rope_force(force_minimum_running), 1.000, "run_back_rope2.fbxanim");
	s_run_rope_attached:add(run_direction(-90), rope_force(force_minimum_running), "run_left_rope.fbxanim");
	s_run_rope_attached:add(run_direction(0), rope_force(force_minimum_running), "run_front_rope.fbxanim");
	s_run_rope_attached:add(run_direction(90), rope_force(force_minimum_running), "run_right_rope.fbxanim");
	s_run_rope_attached:add(run_direction(180), rope_force(force_minimum_running), 1.000, "run_back_rope2.fbxanim");

	s_run_rope_attached:add(run_direction(-180), rope_force(force_moderate_running), "run_back_rope_force.fbxanim");
	s_run_rope_attached:add(run_direction(-90), rope_force(force_moderate_running), "run_left_rope.fbxanim");
	s_run_rope_attached:add(run_direction(0), rope_force(force_moderate_running), "run_front_rope.fbxanim");
	s_run_rope_attached:add(run_direction(90), rope_force(force_moderate_running), "run_right_rope.fbxanim");
	s_run_rope_attached:add(run_direction(180), rope_force(force_moderate_running), "run_back_rope_force.fbxanim");

	s_run_rope_attached:add(run_direction(-180), rope_force(force_still_running), "run_back_rope_pulled_still.fbxanim");
	s_run_rope_attached:add(run_direction(-90), rope_force(force_still_running), "run_left_rope.fbxanim");
	s_run_rope_attached:add(run_direction(0), rope_force(force_still_running), "run_front_rope.fbxanim");
	s_run_rope_attached:add(run_direction(90), rope_force(force_still_running), "run_right_rope.fbxanim");
	s_run_rope_attached:add(run_direction(180), rope_force(force_still_running), "run_back_rope_pulled_still.fbxanim");

	s_run_rope_attached:add(run_direction(-180), rope_force(force_pull_running), "run_back_rope_pulled.fbxanim");
	s_run_rope_attached:add(run_direction(-90), rope_force(force_pull_running), "run_back_rope_pulled.fbxanim");
	s_run_rope_attached:add(run_direction(0), rope_force(force_pull_running), "run_back_rope_pulled.fbxanim");
	s_run_rope_attached:add(run_direction(90), rope_force(force_pull_running), "run_back_rope_pulled.fbxanim");
	s_run_rope_attached:add(run_direction(180), rope_force(force_pull_running), "run_back_rope_pulled.fbxanim");

	s_run_rope_attached:add(run_direction(-180), rope_force(10000), 1.000, "run_back_rope_pulled.fbxanim");
	s_run_rope_attached:add(run_direction(-90), rope_force(10000), "run_back_rope_pulled.fbxanim");
	s_run_rope_attached:add(run_direction(0), rope_force(10000), "run_back_rope_pulled.fbxanim");
	s_run_rope_attached:add(run_direction(90), rope_force(10000), "run_back_rope_pulled.fbxanim");
	s_run_rope_attached:add(run_direction(180), rope_force(10000), 1.000, "run_back_rope_pulled.fbxanim");


	table.insert(rope_is_attached, s_run_rope_attached);
	--}

	--{ Animation: s_stand_rope_attached_turn_left
	s_stand_rope_attached_turn_left = addState(stand+rope_attached+turn_left, "s_stand_rope_attached_turn_left");
	s_stand_rope_attached_turn_left:blendTime(300);
	s_stand_rope_attached_turn_left:loopBlendTime(300);
	s_stand_rope_attached_turn_left:loop(false);
	s_stand_rope_attached_turn_left:addIKTarget("rope", right_arm_ik);

	s_stand_rope_attached_turn_left:add("stand_turning_left_rope.fbxanim");

	table.insert(rope_is_attached, s_stand_rope_attached_turn_left);
	--}

	--{ Animation: s_stand_rope_attached_turn_left_loop
	s_stand_rope_attached_turn_left_loop = addState(stand+rope_attached+turn_left, "s_stand_rope_attached_turn_left_loop");
	s_stand_rope_attached_turn_left_loop:from(s_stand_rope_attached_turn_left);
	s_stand_rope_attached_turn_left_loop:blendTime(300);
	s_stand_rope_attached_turn_left_loop:loopBlendTime(300);
	s_stand_rope_attached_turn_left_loop:loop(true);
	s_stand_rope_attached_turn_left_loop:addIKTarget("rope", right_arm_ik);

	s_stand_rope_attached_turn_left_loop:add("stand_turning_left_rope_loop.fbxanim");

	table.insert(rope_is_attached, s_stand_rope_attached_turn_left_loop);
	--}

	--{ Animation: s_stand_rope_attached_turn_right
	s_stand_rope_attached_turn_right = addState(stand+rope_attached+turn_right, "s_stand_rope_attached_turn_right");
	s_stand_rope_attached_turn_right:blendTime(300);
	s_stand_rope_attached_turn_right:loopBlendTime(300);
	s_stand_rope_attached_turn_right:loop(false);
	s_stand_rope_attached_turn_right:addIKTarget("rope", right_arm_ik);

	s_stand_rope_attached_turn_right:add("stand_turning_right_rope.fbxanim");

	table.insert(rope_is_attached, s_stand_rope_attached_turn_right);
	--}

	--{ Animation: s_stand_rope_attached_turn_right_loop
	s_stand_rope_attached_turn_right_loop = addState(stand+rope_attached+turn_right, "s_stand_rope_attached_turn_right_loop");
	s_stand_rope_attached_turn_right_loop:from(s_stand_rope_attached_turn_right);
	s_stand_rope_attached_turn_right_loop:blendTime(300);
	s_stand_rope_attached_turn_right_loop:loopBlendTime(300);
	s_stand_rope_attached_turn_right_loop:loop(true);
	s_stand_rope_attached_turn_right_loop:addIKTarget("rope", right_arm_ik);

	s_stand_rope_attached_turn_right_loop:add("stand_turning_right_rope_loop.fbxanim");

	table.insert(rope_is_attached, s_stand_rope_attached_turn_right_loop);
	--}

	--{ Animation: s_additive_rope_attached
	s_additive_rope_attached = addState(rope_attached, "s_additive_rope_attached", 1);
	s_additive_rope_attached:blendTime(300);
	s_additive_rope_attached:loop(true);
	s_additive_rope_attached:addIKTarget("rope", right_arm_ik);
	s_additive_rope_attached:add(aim(45), "aim_rope_up_45.fbxanim");
	s_additive_rope_attached:add(aim(0), "aim_rope_center.fbxanim");
	s_additive_rope_attached:add(aim(-45), "aim_rope_down_45.fbxanim");
	s_additive_rope_attached:addReference("aim_rope_center.fbxanim");
	--}
	
	--{ Animation: s_additive_rope_detached
	s_additive_rope_detached = addState(default, "s_additive_rope_detached", 1);
	s_additive_rope_detached:blendTime(300);
	s_additive_rope_detached:from(s_additive_rope_attached);
	s_additive_rope_detached:loop(true);
	s_additive_rope_detached:add("aim_rope_center.fbxanim");
	s_additive_rope_detached:addReference("aim_rope_center.fbxanim");
	--}

	--{ Animation: s_detach_rope
	s_detach_rope = addState(stand, "s_detach_rope");
	s_detach_rope:from(rope_is_attached);
	s_detach_rope:blendTime(200); 
	s_detach_rope:loop(false);
	s_detach_rope:add("detach_rope.fbxanim");
	table.insert(standing, s_detach_rope);
	--}

	--{ Animation: s_run_temp_start
	-- s_run_temp_start = addState(run+rope_attached, "s_run_temp_start");
	-- s_run_temp_start:blendTime(300);
	-- s_run_temp_start:loop(false);
	-- s_run_temp_start:add(rope_force(5.0), 1.25, "run_start_back_rope2.fbxanim");
	-- s_run_temp_start:add(rope_force(4.5), 1.25, "run_start_back_rope2.fbxanim");
	-- s_run_temp_start:add(rope_force(2), "run_start_back_rope_force.fbxanim");
	-- s_run_temp_start:add(rope_force(0), "run_start_back_rope_pulled_still.fbxanim");
	-- s_run_temp_start:add(rope_force(-1.5), "run_start_back_rope_pulled.fbxanim");
	-- s_run_temp_start:add(rope_force(-5), "run_start_back_rope_pulled.fbxanim");
	-- table.insert(running, s_run_temp_start);
	--}



	--{ Animation: s_run_temp
	-- s_run_temp = addState(run+rope_attached, "s_run_temp");
	-- s_run_temp:from(running);
	-- s_run_temp:synchronizedStartTimeGroup(5);
	-- s_run_temp:blendTime(300);
	-- s_run_temp:loopBlendTime(300);
	-- s_run_temp:loop(true);
	-- s_run_temp:add(rope_force(5.0), 1.25, "run_back_rope2.fbxanim");
	-- s_run_temp:add(rope_force(4.5), 1.25, "run_back_rope2.fbxanim");
	-- s_run_temp:add(rope_force(2), "run_back_rope_force.fbxanim");
	-- s_run_temp:add(rope_force(0), "run_back_rope_pulled_still.fbxanim");
	-- s_run_temp:add(rope_force(-1.5), "run_back_rope_pulled.fbxanim");
	-- s_run_temp:add(rope_force(-5), "run_back_rope_pulled.fbxanim");
	-- table.insert(running, s_run_temp);
	--}


--{








--{ CROUCH SHOOT



	-- --{ Animation: s_crouch_loading
	-- s_crouch_loading = addState(crouch+stand+load, "s_crouch_loading");
	-- s_crouch_loading:blendTime(300);
	-- s_crouch_loading:loop(false);

	-- s_crouch_loading:add(aim_horizontal(-45.0), aim(90.0), "crouch_loading_right_up_90.fbxanim");
	-- s_crouch_loading:add(aim_horizontal(-45.0), aim(45.0), "crouch_loading_right_up_45.fbxanim");
	-- s_crouch_loading:add(aim_horizontal(-45.0), aim(0.0), "crouch_loading_right.fbxanim");
	-- s_crouch_loading:add(aim_horizontal(-45.0), aim(-45.0), "crouch_loading_right_down_45.fbxanim");
	-- s_crouch_loading:add(aim_horizontal(-45.0), aim(-72.0), "crouch_loading_right_down_80.fbxanim");

	-- s_crouch_loading:add(aim_horizontal(0.0), aim(90.0), "crouch_loading_up_90.fbxanim");
	-- s_crouch_loading:add(aim_horizontal(0.0), aim(45.0), "crouch_loading_up_45.fbxanim"); -- THIS
	-- s_crouch_loading:add(aim_horizontal(0.0), aim(0.0), "crouch_loading_center.fbxanim");
	-- s_crouch_loading:add(aim_horizontal(0.0), aim(-45.0), "crouch_loading_down_45.fbxanim"); -- THIS
	-- s_crouch_loading:add(aim_horizontal(0.0), aim(-72.0), "crouch_loading_down_80.fbxanim");

	-- s_crouch_loading:add(aim_horizontal(45.0), aim(90.0), "crouch_loading_left_up_90.fbxanim");
	-- s_crouch_loading:add(aim_horizontal(45.0), aim(45.0), "crouch_loading_left_up_45.fbxanim");
	-- s_crouch_loading:add(aim_horizontal(45.0), aim(0.0), "crouch_loading_left.fbxanim");
	-- s_crouch_loading:add(aim_horizontal(45.0), aim(-45.0), "crouch_loading_left_down_45.fbxanim");
	-- s_crouch_loading:add(aim_horizontal(45.0), aim(-72.0), "crouch_loading_left_down_80.fbxanim");
	-- table.insert(crouching, s_crouch_loading);
	-- table.insert(loading, s_crouch_loading);
	-- --}

	-- --{ Animation: s_crouch_start_left_loading
	-- s_crouch_start_left_loading = addState(crouch+stand+load+turn_left, "s_crouch_start_left_loading");
	-- s_crouch_start_left_loading:blendTime(300);
	-- s_crouch_start_left_loading:loop(false);

	-- s_crouch_start_left_loading:add(aim_horizontal(-45.0), aim(90.0), "crouch_start_left_loading_right_up_90.fbxanim");
	-- s_crouch_start_left_loading:add(aim_horizontal(-45.0), aim(45.0), "crouch_start_left_loading_right_up_45.fbxanim");
	-- s_crouch_start_left_loading:add(aim_horizontal(-45.0), aim(0.0), "crouch_start_left_loading_right.fbxanim");
	-- s_crouch_start_left_loading:add(aim_horizontal(-45.0), aim(-45.0), "crouch_start_left_loading_right_down_45.fbxanim");
	-- s_crouch_start_left_loading:add(aim_horizontal(-45.0), aim(-72.0), "crouch_start_left_loading_right_down_80.fbxanim");

	-- s_crouch_start_left_loading:add(aim_horizontal(0.0), aim(90.0), "crouch_start_left_loading_up_90.fbxanim");
	-- s_crouch_start_left_loading:add(aim_horizontal(0.0), aim(45.0), "crouch_start_left_loading_up_45.fbxanim");
	-- s_crouch_start_left_loading:add(aim_horizontal(0.0), aim(0.0), "crouch_start_left_loading_center.fbxanim");
	-- s_crouch_start_left_loading:add(aim_horizontal(0.0), aim(-45.0), "crouch_start_left_loading_down_45.fbxanim");
	-- s_crouch_start_left_loading:add(aim_horizontal(0.0), aim(-72.0), "crouch_start_left_loading_down_80.fbxanim");

	-- s_crouch_start_left_loading:add(aim_horizontal(45.0), aim(90.0), "crouch_start_left_loading_left_up_90.fbxanim");
	-- s_crouch_start_left_loading:add(aim_horizontal(45.0), aim(45.0), "crouch_start_left_loading_left_up_45.fbxanim");
	-- s_crouch_start_left_loading:add(aim_horizontal(45.0), aim(0.0), "crouch_start_left_loading_left.fbxanim");
	-- s_crouch_start_left_loading:add(aim_horizontal(45.0), aim(-45.0), "crouch_start_left_loading_left_down_45.fbxanim");
	-- s_crouch_start_left_loading:add(aim_horizontal(45.0), aim(-72.0), "crouch_start_left_loading_left_down_80.fbxanim");
	-- table.insert(crouching, s_crouch_start_left_loading);
	-- table.insert(loading, s_crouch_start_left_loading);
	-- --}

	-- --{ Animation: s_spin_crouch_start_left_loading
	-- s_spin_crouch_start_left_loading = addState(crouch+stand+load+turn_left, "s_spin_crouch_start_left_loading");
	-- s_spin_crouch_start_left_loading:blendTime(300);
	-- s_spin_crouch_start_left_loading:from(loading);
	-- -- s_spin_crouch_start_left_loading:restart(true);
	-- s_spin_crouch_start_left_loading:loop(false);

	-- s_spin_crouch_start_left_loading:add(aim_horizontal(-45.0), aim(90.0), "spin_crouch_start_left_loading_right_up_90.fbxanim");
	-- s_spin_crouch_start_left_loading:add(aim_horizontal(-45.0), aim(45.0), "spin_crouch_start_left_loading_right_up_45.fbxanim");
	-- s_spin_crouch_start_left_loading:add(aim_horizontal(-45.0), aim(0.0), "spin_crouch_start_left_loading_right.fbxanim");
	-- s_spin_crouch_start_left_loading:add(aim_horizontal(-45.0), aim(-45.0), "spin_crouch_start_left_loading_right_down_45.fbxanim");
	-- s_spin_crouch_start_left_loading:add(aim_horizontal(-45.0), aim(-72.0), "spin_crouch_start_left_loading_right_down_80.fbxanim");

	-- s_spin_crouch_start_left_loading:add(aim_horizontal(0.0), aim(90.0), "spin_crouch_start_left_loading_up_90.fbxanim");
	-- s_spin_crouch_start_left_loading:add(aim_horizontal(0.0), aim(45.0), "spin_crouch_start_left_loading_up_45.fbxanim");
	-- s_spin_crouch_start_left_loading:add(aim_horizontal(0.0), aim(0.0), "spin_crouch_start_left_loading_center.fbxanim");
	-- s_spin_crouch_start_left_loading:add(aim_horizontal(0.0), aim(-45.0), "spin_crouch_start_left_loading_down_45.fbxanim");
	-- s_spin_crouch_start_left_loading:add(aim_horizontal(0.0), aim(-72.0), "spin_crouch_start_left_loading_down_80.fbxanim");

	-- s_spin_crouch_start_left_loading:add(aim_horizontal(45.0), aim(90.0), "spin_crouch_start_left_loading_left_up_90.fbxanim");
	-- s_spin_crouch_start_left_loading:add(aim_horizontal(45.0), aim(45.0), "spin_crouch_start_left_loading_left_up_45.fbxanim");
	-- s_spin_crouch_start_left_loading:add(aim_horizontal(45.0), aim(0.0), "spin_crouch_start_left_loading_left.fbxanim");
	-- s_spin_crouch_start_left_loading:add(aim_horizontal(45.0), aim(-45.0), "spin_crouch_start_left_loading_left_down_45.fbxanim");
	-- s_spin_crouch_start_left_loading:add(aim_horizontal(45.0), aim(-72.0), "spin_crouch_start_left_loading_left_down_80.fbxanim");
	-- table.insert(crouching, s_spin_crouch_start_left_loading);
	-- table.insert(loading, s_spin_crouch_start_left_loading);
	-- --}

	-- --{ Animation: s_spin_crouch_left_loading
	-- s_spin_crouch_left_loading = addState(crouch+stand+load+turn_left, "s_spin_crouch_left_loading");
	-- s_spin_crouch_left_loading:blendTime(300);
	-- s_spin_crouch_left_loading:loopBlendTime(300);
	-- s_spin_crouch_left_loading:from(s_spin_crouch_start_left_loading);
	-- s_spin_crouch_left_loading:restart(true);
	-- s_spin_crouch_left_loading:loop(true);

	-- s_spin_crouch_left_loading:add(aim_horizontal(-45.0), aim(90.0), "spin_crouch_left_loading_right_up_90.fbxanim");
	-- s_spin_crouch_left_loading:add(aim_horizontal(-45.0), aim(45.0), "spin_crouch_left_loading_right_up_45.fbxanim");
	-- s_spin_crouch_left_loading:add(aim_horizontal(-45.0), aim(0.0), "spin_crouch_left_loading_right.fbxanim");
	-- s_spin_crouch_left_loading:add(aim_horizontal(-45.0), aim(-45.0), "spin_crouch_left_loading_right_down_45.fbxanim");
	-- s_spin_crouch_left_loading:add(aim_horizontal(-45.0), aim(-72.0), "spin_crouch_left_loading_right_down_80.fbxanim");

	-- s_spin_crouch_left_loading:add(aim_horizontal(0.0), aim(90.0), "spin_crouch_left_loading_up_90.fbxanim");
	-- s_spin_crouch_left_loading:add(aim_horizontal(0.0), aim(45.0), "spin_crouch_left_loading_up_45.fbxanim");
	-- s_spin_crouch_left_loading:add(aim_horizontal(0.0), aim(0.0), "spin_crouch_left_loading_center.fbxanim");
	-- s_spin_crouch_left_loading:add(aim_horizontal(0.0), aim(-45.0), "spin_crouch_left_loading_down_45.fbxanim");
	-- s_spin_crouch_left_loading:add(aim_horizontal(0.0), aim(-72.0), "spin_crouch_left_loading_down_80.fbxanim");

	-- s_spin_crouch_left_loading:add(aim_horizontal(45.0), aim(90.0), "spin_crouch_left_loading_left_up_90.fbxanim");
	-- s_spin_crouch_left_loading:add(aim_horizontal(45.0), aim(45.0), "spin_crouch_left_loading_left_up_45.fbxanim");
	-- s_spin_crouch_left_loading:add(aim_horizontal(45.0), aim(0.0), "spin_crouch_left_loading_left.fbxanim");
	-- s_spin_crouch_left_loading:add(aim_horizontal(45.0), aim(-45.0), "spin_crouch_left_loading_left_down_45.fbxanim");
	-- s_spin_crouch_left_loading:add(aim_horizontal(45.0), aim(-72.0), "spin_crouch_left_loading_left_down_80.fbxanim");
	-- table.insert(crouching, s_spin_crouch_left_loading);
	-- table.insert(loading, s_spin_crouch_left_loading);
	-- --}

	-- --{ Animation: s_spin_crouch_end_left_loading
	-- s_spin_crouch_end_left_loading = addState(crouch+stand+load, "s_spin_crouch_end_left_loading");
	-- s_spin_crouch_end_left_loading:blendTime(200);
	-- s_spin_crouch_end_left_loading:from(s_spin_crouch_left_loading);
	-- s_spin_crouch_end_left_loading:from(s_spin_crouch_start_left_loading);
	-- -- s_spin_crouch_end_left_loading:reend(true);
	-- s_spin_crouch_end_left_loading:loop(false);

	-- s_spin_crouch_end_left_loading:add(aim_horizontal(-45.0), aim(90.0), "spin_crouch_end_left_loading_right_up_90.fbxanim");
	-- s_spin_crouch_end_left_loading:add(aim_horizontal(-45.0), aim(45.0), "spin_crouch_end_left_loading_right_up_45.fbxanim");
	-- s_spin_crouch_end_left_loading:add(aim_horizontal(-45.0), aim(0.0), "spin_crouch_end_left_loading_right.fbxanim");
	-- s_spin_crouch_end_left_loading:add(aim_horizontal(-45.0), aim(-45.0), "spin_crouch_end_left_loading_right_down_45.fbxanim");
	-- s_spin_crouch_end_left_loading:add(aim_horizontal(-45.0), aim(-72.0), "spin_crouch_end_left_loading_right_down_80.fbxanim");

	-- s_spin_crouch_end_left_loading:add(aim_horizontal(0.0), aim(90.0), "spin_crouch_end_left_loading_up_90.fbxanim");
	-- s_spin_crouch_end_left_loading:add(aim_horizontal(0.0), aim(45.0), "spin_crouch_end_left_loading_up_45.fbxanim");
	-- s_spin_crouch_end_left_loading:add(aim_horizontal(0.0), aim(0.0), "spin_crouch_end_left_loading_center.fbxanim");
	-- s_spin_crouch_end_left_loading:add(aim_horizontal(0.0), aim(-45.0), "spin_crouch_end_left_loading_down_45.fbxanim");
	-- s_spin_crouch_end_left_loading:add(aim_horizontal(0.0), aim(-72.0), "spin_crouch_end_left_loading_down_80.fbxanim");

	-- s_spin_crouch_end_left_loading:add(aim_horizontal(45.0), aim(90.0), "spin_crouch_end_left_loading_left_up_90.fbxanim");
	-- s_spin_crouch_end_left_loading:add(aim_horizontal(45.0), aim(45.0), "spin_crouch_end_left_loading_left_up_45.fbxanim");
	-- s_spin_crouch_end_left_loading:add(aim_horizontal(45.0), aim(0.0), "spin_crouch_end_left_loading_left.fbxanim");
	-- s_spin_crouch_end_left_loading:add(aim_horizontal(45.0), aim(-45.0), "spin_crouch_end_left_loading_left_down_45.fbxanim");
	-- s_spin_crouch_end_left_loading:add(aim_horizontal(45.0), aim(-72.0), "spin_crouch_end_left_loading_left_down_80.fbxanim");
	-- table.insert(crouching, s_spin_crouch_end_left_loading);
	-- table.insert(loading, s_spin_crouch_end_left_loading);
	-- --}

	-- --{ Animation: s_spin_crouch_start_right_loading
	-- s_spin_crouch_start_right_loading = addState(crouch+stand+load+turn_right, "s_spin_crouch_start_right_loading");
	-- s_spin_crouch_start_right_loading:blendTime(300);
	-- s_spin_crouch_start_right_loading:from(loading);
	-- -- s_spin_crouch_start_right_loading:restart(true);
	-- s_spin_crouch_start_right_loading:loop(false);

	-- s_spin_crouch_start_right_loading:add(aim_horizontal(-45.0), aim(90.0), "spin_crouch_start_right_loading_right_up_90.fbxanim");
	-- s_spin_crouch_start_right_loading:add(aim_horizontal(-45.0), aim(45.0), "spin_crouch_start_right_loading_right_up_45.fbxanim");
	-- s_spin_crouch_start_right_loading:add(aim_horizontal(-45.0), aim(0.0), "spin_crouch_start_right_loading_right.fbxanim");
	-- s_spin_crouch_start_right_loading:add(aim_horizontal(-45.0), aim(-45.0), "spin_crouch_start_right_loading_right_down_45.fbxanim");
	-- s_spin_crouch_start_right_loading:add(aim_horizontal(-45.0), aim(-72.0), "spin_crouch_start_right_loading_right_down_80.fbxanim");

	-- s_spin_crouch_start_right_loading:add(aim_horizontal(0.0), aim(90.0), "spin_crouch_start_right_loading_up_90.fbxanim");
	-- s_spin_crouch_start_right_loading:add(aim_horizontal(0.0), aim(45.0), "spin_crouch_start_right_loading_up_45.fbxanim");
	-- s_spin_crouch_start_right_loading:add(aim_horizontal(0.0), aim(0.0), "spin_crouch_start_right_loading_center.fbxanim");
	-- s_spin_crouch_start_right_loading:add(aim_horizontal(0.0), aim(-45.0), "spin_crouch_start_right_loading_down_45.fbxanim");
	-- s_spin_crouch_start_right_loading:add(aim_horizontal(0.0), aim(-72.0), "spin_crouch_start_right_loading_down_80.fbxanim");

	-- s_spin_crouch_start_right_loading:add(aim_horizontal(45.0), aim(90.0), "spin_crouch_start_right_loading_left_up_90.fbxanim");
	-- s_spin_crouch_start_right_loading:add(aim_horizontal(45.0), aim(45.0), "spin_crouch_start_right_loading_left_up_45.fbxanim");
	-- s_spin_crouch_start_right_loading:add(aim_horizontal(45.0), aim(0.0), "spin_crouch_start_right_loading_left.fbxanim");
	-- s_spin_crouch_start_right_loading:add(aim_horizontal(45.0), aim(-45.0), "spin_crouch_start_right_loading_left_down_45.fbxanim");
	-- s_spin_crouch_start_right_loading:add(aim_horizontal(45.0), aim(-72.0), "spin_crouch_start_right_loading_left_down_80.fbxanim");
	-- table.insert(crouching, s_spin_crouch_start_right_loading);
	-- table.insert(loading, s_spin_crouch_start_right_loading);
	-- --}

	-- --{ Animation: s_spin_crouch_right_loading
	-- s_spin_crouch_right_loading = addState(crouch+stand+load+turn_right, "s_spin_crouch_right_loading");
	-- s_spin_crouch_right_loading:blendTime(300);
	-- s_spin_crouch_right_loading:loopBlendTime(300);
	-- s_spin_crouch_right_loading:from(s_spin_crouch_start_right_loading);
	-- s_spin_crouch_right_loading:restart(true);
	-- s_spin_crouch_right_loading:loop(true);

	-- s_spin_crouch_right_loading:add(aim_horizontal(-45.0), aim(90.0), "spin_crouch_right_loading_right_up_90.fbxanim");
	-- s_spin_crouch_right_loading:add(aim_horizontal(-45.0), aim(45.0), "spin_crouch_right_loading_right_up_45.fbxanim");
	-- s_spin_crouch_right_loading:add(aim_horizontal(-45.0), aim(0.0), "spin_crouch_right_loading_right.fbxanim");
	-- s_spin_crouch_right_loading:add(aim_horizontal(-45.0), aim(-45.0), "spin_crouch_right_loading_right_down_45.fbxanim");
	-- s_spin_crouch_right_loading:add(aim_horizontal(-45.0), aim(-72.0), "spin_crouch_right_loading_right_down_80.fbxanim");

	-- s_spin_crouch_right_loading:add(aim_horizontal(0.0), aim(90.0), "spin_crouch_right_loading_up_90.fbxanim");
	-- s_spin_crouch_right_loading:add(aim_horizontal(0.0), aim(45.0), "spin_crouch_right_loading_up_45.fbxanim");
	-- s_spin_crouch_right_loading:add(aim_horizontal(0.0), aim(0.0), "spin_crouch_right_loading_center.fbxanim");
	-- s_spin_crouch_right_loading:add(aim_horizontal(0.0), aim(-45.0), "spin_crouch_right_loading_down_45.fbxanim");
	-- s_spin_crouch_right_loading:add(aim_horizontal(0.0), aim(-72.0), "spin_crouch_right_loading_down_80.fbxanim");

	-- s_spin_crouch_right_loading:add(aim_horizontal(45.0), aim(90.0), "spin_crouch_right_loading_left_up_90.fbxanim");
	-- s_spin_crouch_right_loading:add(aim_horizontal(45.0), aim(45.0), "spin_crouch_right_loading_left_up_45.fbxanim");
	-- s_spin_crouch_right_loading:add(aim_horizontal(45.0), aim(0.0), "spin_crouch_right_loading_left.fbxanim");
	-- s_spin_crouch_right_loading:add(aim_horizontal(45.0), aim(-45.0), "spin_crouch_right_loading_left_down_45.fbxanim");
	-- s_spin_crouch_right_loading:add(aim_horizontal(45.0), aim(-72.0), "spin_crouch_right_loading_left_down_80.fbxanim");
	-- table.insert(crouching, s_spin_crouch_right_loading);
	-- table.insert(loading, s_spin_crouch_right_loading);
	-- --}

	-- --{ Animation: s_spin_crouch_end_right_loading
	-- s_spin_crouch_end_right_loading = addState(crouch+stand+load, "s_spin_crouch_end_right_loading");
	-- s_spin_crouch_end_right_loading:blendTime(200);
	-- s_spin_crouch_end_right_loading:from(s_spin_crouch_right_loading);
	-- s_spin_crouch_end_right_loading:from(s_spin_crouch_start_right_loading);
	-- -- s_spin_crouch_end_right_loading:reend(true);
	-- s_spin_crouch_end_right_loading:loop(false);

	-- s_spin_crouch_end_right_loading:add(aim_horizontal(-45.0), aim(90.0), "spin_crouch_end_right_loading_right_up_90.fbxanim");
	-- s_spin_crouch_end_right_loading:add(aim_horizontal(-45.0), aim(45.0), "spin_crouch_end_right_loading_right_up_45.fbxanim");
	-- s_spin_crouch_end_right_loading:add(aim_horizontal(-45.0), aim(0.0), "spin_crouch_end_right_loading_right.fbxanim");
	-- s_spin_crouch_end_right_loading:add(aim_horizontal(-45.0), aim(-45.0), "spin_crouch_end_right_loading_right_down_45.fbxanim");
	-- s_spin_crouch_end_right_loading:add(aim_horizontal(-45.0), aim(-72.0), "spin_crouch_end_right_loading_right_down_80.fbxanim");

	-- s_spin_crouch_end_right_loading:add(aim_horizontal(0.0), aim(90.0), "spin_crouch_end_right_loading_up_90.fbxanim");
	-- s_spin_crouch_end_right_loading:add(aim_horizontal(0.0), aim(45.0), "spin_crouch_end_right_loading_up_45.fbxanim");
	-- s_spin_crouch_end_right_loading:add(aim_horizontal(0.0), aim(0.0), "spin_crouch_end_right_loading_center.fbxanim");
	-- s_spin_crouch_end_right_loading:add(aim_horizontal(0.0), aim(-45.0), "spin_crouch_end_right_loading_down_45.fbxanim");
	-- s_spin_crouch_end_right_loading:add(aim_horizontal(0.0), aim(-72.0), "spin_crouch_end_right_loading_down_80.fbxanim");

	-- s_spin_crouch_end_right_loading:add(aim_horizontal(45.0), aim(90.0), "spin_crouch_end_right_loading_left_up_90.fbxanim");
	-- s_spin_crouch_end_right_loading:add(aim_horizontal(45.0), aim(45.0), "spin_crouch_end_right_loading_left_up_45.fbxanim");
	-- s_spin_crouch_end_right_loading:add(aim_horizontal(45.0), aim(0.0), "spin_crouch_end_right_loading_left.fbxanim");
	-- s_spin_crouch_end_right_loading:add(aim_horizontal(45.0), aim(-45.0), "spin_crouch_end_right_loading_left_down_45.fbxanim");
	-- s_spin_crouch_end_right_loading:add(aim_horizontal(45.0), aim(-72.0), "spin_crouch_end_right_loading_left_down_80.fbxanim");
	-- table.insert(crouching, s_spin_crouch_end_right_loading);
	-- table.insert(loading, s_spin_crouch_end_right_loading);
	-- --}

	-- --{ Animation: s_crouch_start_right_loading
	-- s_crouch_start_right_loading = addState(crouch+stand+load+turn_right, "s_crouch_start_right_loading");
	-- s_crouch_start_right_loading:blendTime(300);
	-- s_crouch_start_right_loading:loop(false);

	-- s_crouch_start_right_loading:add(aim_horizontal(-45.0), aim(90.0), "crouch_start_right_loading_right_up_90.fbxanim");
	-- s_crouch_start_right_loading:add(aim_horizontal(-45.0), aim(45.0), "crouch_start_right_loading_right_up_45.fbxanim");
	-- s_crouch_start_right_loading:add(aim_horizontal(-45.0), aim(0.0), "crouch_start_right_loading_right.fbxanim");
	-- s_crouch_start_right_loading:add(aim_horizontal(-45.0), aim(-45.0), "crouch_start_right_loading_right_down_45.fbxanim");
	-- s_crouch_start_right_loading:add(aim_horizontal(-45.0), aim(-72.0), "crouch_start_right_loading_right_down_80.fbxanim");

	-- s_crouch_start_right_loading:add(aim_horizontal(0.0), aim(90.0), "crouch_start_right_loading_up_90.fbxanim");
	-- s_crouch_start_right_loading:add(aim_horizontal(0.0), aim(45.0), "crouch_start_right_loading_up_45.fbxanim");
	-- s_crouch_start_right_loading:add(aim_horizontal(0.0), aim(0.0), "crouch_start_right_loading_center.fbxanim");
	-- s_crouch_start_right_loading:add(aim_horizontal(0.0), aim(-45.0), "crouch_start_right_loading_down_45.fbxanim");
	-- s_crouch_start_right_loading:add(aim_horizontal(0.0), aim(-72.0), "crouch_start_right_loading_down_80.fbxanim");

	-- s_crouch_start_right_loading:add(aim_horizontal(45.0), aim(90.0), "crouch_start_right_loading_left_up_90.fbxanim");
	-- s_crouch_start_right_loading:add(aim_horizontal(45.0), aim(45.0), "crouch_start_right_loading_left_up_45.fbxanim");
	-- s_crouch_start_right_loading:add(aim_horizontal(45.0), aim(0.0), "crouch_start_right_loading_left.fbxanim");
	-- s_crouch_start_right_loading:add(aim_horizontal(45.0), aim(-45.0), "crouch_start_right_loading_left_down_45.fbxanim");
	-- s_crouch_start_right_loading:add(aim_horizontal(45.0), aim(-72.0), "crouch_start_right_loading_left_down_80.fbxanim");
	-- table.insert(crouching, s_crouch_start_right_loading);
	-- table.insert(loading, s_crouch_start_right_loading);
	-- --}

	-- --{ Animation: s_run_end_combat
	-- -- s_run_end_combat = addState(crouch+stand+combat, "s_run_end_combat");
	-- -- s_run_end_combat:from(running);
	-- -- s_run_end_combat:blendTime(400);
	-- -- s_run_end_combat:loop(false);
	-- -- s_run_end_combat:add("crouch_combat_start_new.fbxanim");
	-- -- table.insert(in_combat, s_run_end_combat);
	-- --}


	-- --{ Animation: s_crouch_combat_start
	-- -- s_crouch_combat_start = addState(crouch+stand+combat, "s_crouch_combat_start");
	-- -- s_crouch_combat_start:from(crouching);
	-- -- s_crouch_combat_start:blendTime(300);
	-- -- s_crouch_combat_start:loop(false);
	-- -- s_crouch_combat_start:add("crouch_combat_start.fbxanim");
	-- -- table.insert(in_combat, s_crouch_combat_start);
	-- --}

	-- --{ Animation: s_crouch_combat
	-- -- s_crouch_combat = addState(crouch+stand+combat, "s_crouch_combat");
	-- -- s_crouch_combat:blendTime(300);
	-- -- s_crouch_combat:loopBlendTime(500);
	-- -- s_crouch_combat:loop(true);
	-- -- s_crouch_combat:add("crouch_combat_new.fbxanim");
	-- -- table.insert(in_combat, s_crouch_combat);
	-- --}

	-- --{ Animation: s_crouch_shoot
	-- s_crouch_shoot = addState(crouch+stand+combat, "s_crouch_shoot");
	-- s_crouch_shoot:synchronizedStartTimeGroup(10);
	-- -- From definitions later
	-- s_crouch_shoot:blendTime(100);
	-- s_crouch_shoot:loop(false);

	-- s_crouch_shoot:add(aim_horizontal(-45.0), aim(90.0), "crouch_shoot_right_up_90.fbxanim");
	-- s_crouch_shoot:add(aim_horizontal(-45.0), aim(45.0), "crouch_shoot_right_up_45.fbxanim");
	-- s_crouch_shoot:add(aim_horizontal(-45.0), aim(0.0), "crouch_shoot_right.fbxanim");
	-- s_crouch_shoot:add(aim_horizontal(-45.0), aim(-45.0), "crouch_shoot_right_down_45.fbxanim");
	-- s_crouch_shoot:add(aim_horizontal(-45.0), aim(-72.0), "crouch_shoot_right_down_80.fbxanim");

	-- s_crouch_shoot:add(aim_horizontal(0.0), aim(90.0), "crouch_shoot_up_90.fbxanim");
	-- s_crouch_shoot:add(aim_horizontal(0.0), aim(45.0), "crouch_shoot_up_45.fbxanim");
	-- s_crouch_shoot:add(aim_horizontal(0.0), aim(0.0), "crouch_shoot_center.fbxanim");
	-- s_crouch_shoot:add(aim_horizontal(0.0), aim(-45.0), "crouch_shoot_down_45.fbxanim");
	-- s_crouch_shoot:add(aim_horizontal(0.0), aim(-72.0), "crouch_shoot_down_80.fbxanim");

	-- s_crouch_shoot:add(aim_horizontal(45.0), aim(90.0), "crouch_shoot_left_up_90.fbxanim");
	-- s_crouch_shoot:add(aim_horizontal(45.0), aim(45.0), "crouch_shoot_left_up_45.fbxanim");
	-- s_crouch_shoot:add(aim_horizontal(45.0), aim(0.0), "crouch_shoot_left.fbxanim");
	-- s_crouch_shoot:add(aim_horizontal(45.0), aim(-45.0), "crouch_shoot_left_down_45.fbxanim");
	-- s_crouch_shoot:add(aim_horizontal(45.0), aim(-72.0), "crouch_shoot_left_down_80.fbxanim");
	-- s_crouch_shoot:addEnterEvent("EventAnimStaggerTypelethal_attack_2");
	-- -- s_crouch_shoot:add(aim(90.0), "crouch_shoot_up_90.fbxanim");
	-- -- s_crouch_shoot:add(aim(45.0), "crouch_shoot_up_45.fbxanim");
	-- -- s_crouch_shoot:add(aim(0.0), "crouch_shoot_center.fbxanim");
	-- -- s_crouch_shoot:add(aim(-45.0), "crouch_shoot_down_45.fbxanim");
	-- -- s_crouch_shoot:add(aim(-72.0), "crouch_shoot_down_80.fbxanim");
	-- -- table.insert(crouching, s_crouch_shoot);
	-- -- s_crouch_shoot:addEnterEvent("EventAnimStaggerTypearrow")
	-- table.insert(in_combat, s_crouch_shoot);
	-- --}

	-- --{ Animation: s_crouch_shoot_end
	-- s_crouch_shoot_end = addState(crouch+stand+combat, "s_crouch_shoot_end");
	-- s_crouch_shoot_end:from(s_crouch_shoot);
	-- s_crouch_shoot_end:blendTime(0);
	-- s_crouch_shoot_end:loop(false);

	-- s_crouch_shoot_end:add(aim_horizontal(-45.0), aim(90.0), "crouch_shoot_end_right_up_90.fbxanim");
	-- s_crouch_shoot_end:add(aim_horizontal(-45.0), aim(45.0), "crouch_shoot_end_right_up_45.fbxanim");
	-- s_crouch_shoot_end:add(aim_horizontal(-45.0), aim(0.0), "crouch_shoot_end_right.fbxanim");
	-- s_crouch_shoot_end:add(aim_horizontal(-45.0), aim(-45.0), "crouch_shoot_end_right_down_45.fbxanim");
	-- s_crouch_shoot_end:add(aim_horizontal(-45.0), aim(-72.0), "crouch_shoot_end_right_down_80.fbxanim");

	-- s_crouch_shoot_end:add(aim_horizontal(0.0), aim(90.0), "crouch_shoot_end_up_90.fbxanim");
	-- s_crouch_shoot_end:add(aim_horizontal(0.0), aim(45.0), "crouch_shoot_end_up_45.fbxanim");
	-- s_crouch_shoot_end:add(aim_horizontal(0.0), aim(0.0), "crouch_shoot_end_center.fbxanim");
	-- s_crouch_shoot_end:add(aim_horizontal(0.0), aim(-45.0), "crouch_shoot_end_down_45.fbxanim");
	-- s_crouch_shoot_end:add(aim_horizontal(0.0), aim(-72.0), "crouch_shoot_end_down_80.fbxanim");

	-- s_crouch_shoot_end:add(aim_horizontal(45.0), aim(90.0), "crouch_shoot_end_left_up_90.fbxanim");
	-- s_crouch_shoot_end:add(aim_horizontal(45.0), aim(45.0), "crouch_shoot_end_left_up_45.fbxanim");
	-- s_crouch_shoot_end:add(aim_horizontal(45.0), aim(0.0), "crouch_shoot_end_left.fbxanim");
	-- s_crouch_shoot_end:add(aim_horizontal(45.0), aim(-45.0), "crouch_shoot_end_left_down_45.fbxanim");
	-- s_crouch_shoot_end:add(aim_horizontal(45.0), aim(-72.0), "crouch_shoot_end_left_down_80.fbxanim");

	-- -- s_crouch_shoot_end:add(aim(90.0), "crouch_shoot_end_up_90.fbxanim");
	-- -- s_crouch_shoot_end:add(aim(45.0), "crouch_shoot_end_up_45.fbxanim");
	-- -- s_crouch_shoot_end:add(aim(0.0), "crouch_shoot_end_center.fbxanim");
	-- -- s_crouch_shoot_end:add(aim(-45.0), "crouch_shoot_end_down_45.fbxanim");
	-- -- s_crouch_shoot_end:add(aim(-72.0), "crouch_shoot_end_down_80.fbxanim");
	-- -- table.insert(crouching, s_crouch_shoot_end);
	-- table.insert(in_combat, s_crouch_shoot_end);
	-- --}

	-- --{ Animation: s_crouch_reloading_start
	-- s_crouch_reloading_start = addState(crouch+stand+load, "s_crouch_reloading_start");
	-- s_crouch_reloading_start:from(s_crouch_shoot);
	-- s_crouch_reloading_start:blendTime(200);
	-- -- s_crouch_reloading_start:synchronizedStartTime();
	-- s_crouch_reloading_start:synchronizedStartTimeGroup(10);
	-- s_crouch_reloading_start:loop(false);

	-- s_crouch_reloading_start:add(aim_horizontal(-45.0), aim(90.0), "crouch_reloading_start_right_up_90.fbxanim");
	-- s_crouch_reloading_start:add(aim_horizontal(-45.0), aim(45.0), "crouch_reloading_start_right_up_45.fbxanim");
	-- s_crouch_reloading_start:add(aim_horizontal(-45.0), aim(0.0), "crouch_reloading_start_right.fbxanim");
	-- s_crouch_reloading_start:add(aim_horizontal(-45.0), aim(-45.0), "crouch_reloading_start_right_down_45.fbxanim");
	-- s_crouch_reloading_start:add(aim_horizontal(-45.0), aim(-72.0), "crouch_reloading_start_right_down_80.fbxanim");

	-- s_crouch_reloading_start:add(aim_horizontal(0.0), aim(90.0), "crouch_reloading_start_up_90.fbxanim");
	-- s_crouch_reloading_start:add(aim_horizontal(0.0), aim(45.0), "crouch_reloading_start_up_45.fbxanim");
	-- s_crouch_reloading_start:add(aim_horizontal(0.0), aim(0.0), "crouch_reloading_start_center.fbxanim");
	-- s_crouch_reloading_start:add(aim_horizontal(0.0), aim(-45.0), "crouch_reloading_start_down_45.fbxanim");
	-- s_crouch_reloading_start:add(aim_horizontal(0.0), aim(-72.0), "crouch_reloading_start_down_80.fbxanim");

	-- s_crouch_reloading_start:add(aim_horizontal(45.0), aim(90.0), "crouch_reloading_start_left_up_90.fbxanim");
	-- s_crouch_reloading_start:add(aim_horizontal(45.0), aim(45.0), "crouch_reloading_start_left_up_45.fbxanim");
	-- s_crouch_reloading_start:add(aim_horizontal(45.0), aim(0.0), "crouch_reloading_start_left.fbxanim");
	-- s_crouch_reloading_start:add(aim_horizontal(45.0), aim(-45.0), "crouch_reloading_start_left_down_45.fbxanim");
	-- s_crouch_reloading_start:add(aim_horizontal(45.0), aim(-72.0), "crouch_reloading_start_left_down_80.fbxanim");

	-- -- s_crouch_reloading_start:add(aim(90.0), "crouch_reloading_start_up_90.fbxanim");
	-- -- s_crouch_reloading_start:add(aim(45.0), "crouch_reloading_start_up_45.fbxanim");
	-- -- s_crouch_reloading_start:add(aim(0.0), "crouch_reloading_start_center.fbxanim");
	-- -- s_crouch_reloading_start:add(aim(-45.0), "crouch_reloading_start_down_45.fbxanim");
	-- -- s_crouch_reloading_start:add(aim(-72.0), "crouch_reloading_start_down_80.fbxanim");
	-- table.insert(crouching, s_crouch_reloading_start);
	-- table.insert(loading, s_crouch_reloading_start);
	-- --}



	-- --{ Animation: s_crouch_reloading
	-- s_crouch_reloading = addState(crouch+stand+load, "s_crouch_reloading");
	-- s_crouch_reloading:from(s_crouch_reloading_start);
	-- s_crouch_reloading:blendTime(0);
	-- s_crouch_reloading:loop(false);

	-- s_crouch_reloading:add(aim_horizontal(-45.0), aim(90.0), "crouch_reloading_right_up_90.fbxanim");
	-- s_crouch_reloading:add(aim_horizontal(-45.0), aim(45.0), "crouch_reloading_right_up_45.fbxanim");
	-- s_crouch_reloading:add(aim_horizontal(-45.0), aim(0.0), "crouch_reloading_right.fbxanim");
	-- s_crouch_reloading:add(aim_horizontal(-45.0), aim(-45.0), "crouch_reloading_right_down_45.fbxanim");
	-- s_crouch_reloading:add(aim_horizontal(-45.0), aim(-72.0), "crouch_reloading_right_down_80.fbxanim");

	-- s_crouch_reloading:add(aim_horizontal(0.0), aim(90.0), "crouch_reloading_up_90.fbxanim");
	-- s_crouch_reloading:add(aim_horizontal(0.0), aim(45.0), "crouch_reloading_up_45.fbxanim");
	-- s_crouch_reloading:add(aim_horizontal(0.0), aim(0.0), "crouch_reloading_center.fbxanim");
	-- s_crouch_reloading:add(aim_horizontal(0.0), aim(-45.0), "crouch_reloading_down_45.fbxanim");
	-- s_crouch_reloading:add(aim_horizontal(0.0), aim(-72.0), "crouch_reloading_down_80.fbxanim");

	-- s_crouch_reloading:add(aim_horizontal(45.0), aim(90.0), "crouch_reloading_left_up_90.fbxanim");
	-- s_crouch_reloading:add(aim_horizontal(45.0), aim(45.0), "crouch_reloading_left_up_45.fbxanim");
	-- s_crouch_reloading:add(aim_horizontal(45.0), aim(0.0), "crouch_reloading_left.fbxanim");
	-- s_crouch_reloading:add(aim_horizontal(45.0), aim(-45.0), "crouch_reloading_left_down_45.fbxanim");
	-- s_crouch_reloading:add(aim_horizontal(45.0), aim(-72.0), "crouch_reloading_left_down_80.fbxanim");

	-- -- s_crouch_reloading:add(aim(90.0), "crouch_reloading_up_90.fbxanim");
	-- -- s_crouch_reloading:add(aim(45.0), "crouch_reloading_up_45.fbxanim");
	-- -- s_crouch_reloading:add(aim(0.0), "crouch_reloading_center.fbxanim");
	-- -- s_crouch_reloading:add(aim(-45.0), "crouch_reloading_down_45.fbxanim");
	-- -- s_crouch_reloading:add(aim(-72.0), "crouch_reloading_down_80.fbxanim");
	-- table.insert(crouching, s_crouch_reloading);
	-- table.insert(loading, s_crouch_reloading);
	-- --}
	-- s_crouch_shoot:from(s_crouch_loading);
	-- s_crouch_shoot:from(s_crouch_start_left_loading);
	-- s_crouch_shoot:from(s_crouch_start_right_loading);
	-- s_crouch_shoot:from(s_crouch_start_right_loading);
	-- s_crouch_shoot:from(s_crouch_reloading_start);
	-- s_crouch_shoot:from(s_crouch_reloading);
	-- s_crouch_shoot:from(s_spin_crouch_start_right_loading);
	-- s_crouch_shoot:from(s_spin_crouch_right_loading);
	-- s_crouch_shoot:from(s_spin_crouch_end_right_loading);
	-- s_crouch_shoot:from(s_spin_crouch_start_left_loading);
	-- s_crouch_shoot:from(s_spin_crouch_left_loading);
	-- s_crouch_shoot:from(s_spin_crouch_end_left_loading);
	-- --{ Animation: s_crouch_combat_end
	-- s_crouch_combat_end = addState(crouch, "s_crouch_combat_end");
	-- s_crouch_combat_end:from(in_combat);
	-- s_crouch_combat_end:blendTime(300);
	-- s_crouch_combat_end:loop(false);
	-- --s_crouch_combat_end:add("crouch_combat_end.fbxanim");
	-- table.insert(crouching, s_crouch_combat_end);
	-- --}

	-- --{ Animation: s_additive_crouch_loading
	-- s_additive_crouch_loading = addState(run+crouch+load, "s_additive_crouch_loading", 1);
	-- s_additive_crouch_loading:blendTime(300);
	-- s_additive_crouch_loading:loop(false);
	-- s_additive_crouch_loading:add(aim(90.0), "additive_crouch_loading_up_90.fbxanim");
	-- s_additive_crouch_loading:add(aim(45.0), "additive_crouch_loading_up_45.fbxanim");
	-- s_additive_crouch_loading:add(aim(0.0), "additive_crouch_loading_center.fbxanim");
	-- s_additive_crouch_loading:add(aim(-45.0), "additive_crouch_loading_down_45.fbxanim");
	-- s_additive_crouch_loading:add(aim(-72.0), "additive_crouch_loading_down_80.fbxanim");
	-- s_additive_crouch_loading:addReference("additive_crouch_combat.fbxanim");
	-- s_additive_crouch_loading:setContextOnEnter("additive", true);
	-- table.insert(running, s_additive_crouch_loading);
	-- table.insert(loading, s_additive_crouch_loading);
	-- --}

	-- --{ Animation: s_additive_crouch_jump_loading
	-- s_additive_crouch_jump_loading = addState(fall+crouch+load, "s_additive_crouch_jump_loading", 1);
	-- s_additive_crouch_jump_loading:blendTime(300);
	-- s_additive_crouch_jump_loading:loop(false);
	-- s_additive_crouch_jump_loading:add(aim(90.0), "additive_crouch_loading_up_90.fbxanim");
	-- s_additive_crouch_jump_loading:add(aim(45.0), "additive_crouch_loading_up_45.fbxanim");
	-- s_additive_crouch_jump_loading:add(aim(0.0), "additive_crouch_loading_center.fbxanim");
	-- s_additive_crouch_jump_loading:add(aim(-45.0), "additive_crouch_loading_down_45.fbxanim");
	-- s_additive_crouch_jump_loading:add(aim(-72.0), "additive_crouch_loading_down_80.fbxanim");
	-- s_additive_crouch_jump_loading:addReference("additive_crouch_combat.fbxanim");
	-- s_additive_crouch_jump_loading:setContextOnEnter("additive", true);
	-- table.insert(running, s_additive_crouch_jump_loading);
	-- table.insert(loading, s_additive_crouch_jump_loading);
	-- --}

	-- --{ Animation: s_additive_crouch_shoot
	-- s_additive_crouch_shoot = addState(run+crouch+combat, "s_additive_crouch_shoot", 1);
	-- s_additive_crouch_shoot:synchronizedStartTimeGroup(10);
	-- s_additive_crouch_shoot:from(loading);
	-- s_additive_crouch_shoot:blendTime(100);
	-- s_additive_crouch_shoot:loop(false);
	-- s_additive_crouch_shoot:add(aim(90.0), "additive_crouch_shoot_up_90.fbxanim");
	-- s_additive_crouch_shoot:add(aim(45.0), "additive_crouch_shoot_up_45.fbxanim");
	-- s_additive_crouch_shoot:add(aim(0.0), "additive_crouch_shoot_center.fbxanim");
	-- s_additive_crouch_shoot:add(aim(-45.0), "additive_crouch_shoot_down_45.fbxanim");
	-- s_additive_crouch_shoot:add(aim(-72.0), "additive_crouch_shoot_down_80.fbxanim");
	-- s_additive_crouch_shoot:addReference("additive_crouch_combat.fbxanim");
	-- s_additive_crouch_shoot:setContextOnEnter("additive", true);
	-- table.insert(running, s_additive_crouch_shoot);
	-- --}

	-- --{ Animation: s_additive_crouch_shoot_end
	-- s_additive_crouch_shoot_end = addState(run+crouch+combat, "s_additive_crouch_shoot_end", 1);
	-- s_additive_crouch_shoot_end:from(s_additive_crouch_shoot);
	-- s_additive_crouch_shoot_end:blendTime(0);
	-- s_additive_crouch_shoot_end:loop(false);
	-- s_additive_crouch_shoot_end:add(aim(90.0), "additive_crouch_shoot_end_up_90.fbxanim");
	-- s_additive_crouch_shoot_end:add(aim(45.0), "additive_crouch_shoot_end_up_45.fbxanim");
	-- s_additive_crouch_shoot_end:add(aim(0.0), "additive_crouch_shoot_end_center.fbxanim");
	-- s_additive_crouch_shoot_end:add(aim(-45.0), "additive_crouch_shoot_end_down_45.fbxanim");
	-- s_additive_crouch_shoot_end:add(aim(-72.0), "additive_crouch_shoot_end_down_80.fbxanim");
	-- s_additive_crouch_shoot_end:addReference("additive_crouch_combat.fbxanim");
	-- s_additive_crouch_shoot_end:setContextOnEnter("additive", true);
	-- table.insert(running, s_additive_crouch_shoot_end);
	-- --}


	
	-- --{ Animation: s_additive_crouch_reloading_start
	-- s_additive_crouch_reloading_start = addState(run+crouch+load, "s_additive_crouch_reloading_start", 1);
	-- s_additive_crouch_reloading_start:from(s_additive_crouch_shoot);
	-- s_additive_crouch_reloading_start:blendTime(200);
	-- s_additive_crouch_reloading_start:synchronizedStartTimeGroup(10);
	-- s_additive_crouch_reloading_start:loop(false);
	-- s_additive_crouch_reloading_start:add(aim(90.0), "additive_crouch_reloading_start_up_90.fbxanim");
	-- s_additive_crouch_reloading_start:add(aim(45.0), "additive_crouch_reloading_start_up_45.fbxanim");
	-- s_additive_crouch_reloading_start:add(aim(0.0), "additive_crouch_reloading_start_center.fbxanim");
	-- s_additive_crouch_reloading_start:add(aim(-45.0), "additive_crouch_reloading_start_down_45.fbxanim");
	-- s_additive_crouch_reloading_start:add(aim(-72.0), "additive_crouch_reloading_start_down_80.fbxanim");
	-- s_additive_crouch_reloading_start:addReference("additive_crouch_combat.fbxanim");
	-- s_additive_crouch_reloading_start:setContextOnEnter("additive", true);
	-- table.insert(running, s_additive_crouch_reloading_start);
	-- table.insert(loading, s_additive_crouch_reloading_start);
	-- --}

	-- --{ Animation: s_additive_crouch_reloading
	-- s_additive_crouch_reloading = addState(run+crouch+load, "s_additive_crouch_reloading", 1);
	-- s_additive_crouch_reloading:from(s_additive_crouch_reloading_start);
	-- s_additive_crouch_reloading:blendTime(0);
	-- s_additive_crouch_reloading:loop(false);
	-- s_additive_crouch_reloading:add(aim(90.0), "additive_crouch_reloading_up_90.fbxanim");
	-- s_additive_crouch_reloading:add(aim(45.0), "additive_crouch_reloading_up_45.fbxanim");
	-- s_additive_crouch_reloading:add(aim(0.0), "additive_crouch_reloading_center.fbxanim");
	-- s_additive_crouch_reloading:add(aim(-45.0), "additive_crouch_reloading_down_45.fbxanim");
	-- s_additive_crouch_reloading:add(aim(-72.0), "additive_crouch_reloading_down_80.fbxanim");
	-- s_additive_crouch_reloading:addReference("additive_crouch_combat.fbxanim");
	-- s_additive_crouch_reloading:setContextOnEnter("additive", true);
	-- table.insert(running, s_additive_crouch_reloading);
	-- table.insert(loading, s_additive_crouch_reloading);
	-- --}
--}

